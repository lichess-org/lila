// Generated with bin/trans-dump.js Sun May 28 2017 19:47:34 GMT+0200 (CEST)
package lila.i18n

// format: OFF
object I18nKeys {

def untranslated(message: String) = new Untranslated(message)

val `playWithAFriend` = new Translated("playWithAFriend")
val `playWithTheMachine` = new Translated("playWithTheMachine")
val `toInviteSomeoneToPlayGiveThisUrl` = new Translated("toInviteSomeoneToPlayGiveThisUrl")
val `gameOver` = new Translated("gameOver")
val `waitingForOpponent` = new Translated("waitingForOpponent")
val `waiting` = new Translated("waiting")
val `yourTurn` = new Translated("yourTurn")
val `aiNameLevelAiLevel` = new Translated("aiNameLevelAiLevel")
val `level` = new Translated("level")
val `toggleTheChat` = new Translated("toggleTheChat")
val `toggleSound` = new Translated("toggleSound")
val `chat` = new Translated("chat")
val `resign` = new Translated("resign")
val `checkmate` = new Translated("checkmate")
val `stalemate` = new Translated("stalemate")
val `white` = new Translated("white")
val `black` = new Translated("black")
val `randomColor` = new Translated("randomColor")
val `createAGame` = new Translated("createAGame")
val `whiteIsVictorious` = new Translated("whiteIsVictorious")
val `blackIsVictorious` = new Translated("blackIsVictorious")
val `kingInTheCenter` = new Translated("kingInTheCenter")
val `threeChecks` = new Translated("threeChecks")
val `raceFinished` = new Translated("raceFinished")
val `variantEnding` = new Translated("variantEnding")
val `newOpponent` = new Translated("newOpponent")
val `yourOpponentWantsToPlayANewGameWithYou` = new Translated("yourOpponentWantsToPlayANewGameWithYou")
val `joinTheGame` = new Translated("joinTheGame")
val `whitePlays` = new Translated("whitePlays")
val `blackPlays` = new Translated("blackPlays")
val `opponentLeftChoices` = new Translated("opponentLeftChoices")
val `makeYourOpponentResign` = new Translated("makeYourOpponentResign")
val `forceResignation` = new Translated("forceResignation")
val `forceDraw` = new Translated("forceDraw")
val `talkInChat` = new Translated("talkInChat")
val `theFirstPersonToComeOnThisUrlWillPlayWithYou` = new Translated("theFirstPersonToComeOnThisUrlWillPlayWithYou")
val `whiteResigned` = new Translated("whiteResigned")
val `blackResigned` = new Translated("blackResigned")
val `whiteLeftTheGame` = new Translated("whiteLeftTheGame")
val `blackLeftTheGame` = new Translated("blackLeftTheGame")
val `shareThisUrlToLetSpectatorsSeeTheGame` = new Translated("shareThisUrlToLetSpectatorsSeeTheGame")
val `theComputerAnalysisHasFailed` = new Translated("theComputerAnalysisHasFailed")
val `viewTheComputerAnalysis` = new Translated("viewTheComputerAnalysis")
val `requestAComputerAnalysis` = new Translated("requestAComputerAnalysis")
val `computerAnalysis` = new Translated("computerAnalysis")
val `analysis` = new Translated("analysis")
val `blunders` = new Translated("blunders")
val `mistakes` = new Translated("mistakes")
val `inaccuracies` = new Translated("inaccuracies")
val `moveTimes` = new Translated("moveTimes")
val `flipBoard` = new Translated("flipBoard")
val `threefoldRepetition` = new Translated("threefoldRepetition")
val `claimADraw` = new Translated("claimADraw")
val `offerDraw` = new Translated("offerDraw")
val `draw` = new Translated("draw")
val `currentGames` = new Translated("currentGames")
val `viewInFullSize` = new Translated("viewInFullSize")
val `logOut` = new Translated("logOut")
val `signIn` = new Translated("signIn")
val `newToLichess` = new Translated("newToLichess")
val `youNeedAnAccountToDoThat` = new Translated("youNeedAnAccountToDoThat")
val `signUp` = new Translated("signUp")
val `computersAreNotAllowedToPlay` = new Translated("computersAreNotAllowedToPlay")
val `games` = new Translated("games")
val `forum` = new Translated("forum")
val `xPostedInForumY` = new Translated("xPostedInForumY")
val `latestForumPosts` = new Translated("latestForumPosts")
val `players` = new Translated("players")
val `minutesPerSide` = new Translated("minutesPerSide")
val `variant` = new Translated("variant")
val `variants` = new Translated("variants")
val `timeControl` = new Translated("timeControl")
val `realTime` = new Translated("realTime")
val `correspondence` = new Translated("correspondence")
val `daysPerTurn` = new Translated("daysPerTurn")
val `oneDay` = new Translated("oneDay")
val `time` = new Translated("time")
val `rating` = new Translated("rating")
val `ratingStats` = new Translated("ratingStats")
val `username` = new Translated("username")
val `usernameOrEmail` = new Translated("usernameOrEmail")
val `password` = new Translated("password")
val `haveAnAccount` = new Translated("haveAnAccount")
val `changePassword` = new Translated("changePassword")
val `changeEmail` = new Translated("changeEmail")
val `email` = new Translated("email")
val `emailIsOptional` = new Translated("emailIsOptional")
val `passwordReset` = new Translated("passwordReset")
val `forgotPassword` = new Translated("forgotPassword")
val `rank` = new Translated("rank")
val `gamesPlayed` = new Translated("gamesPlayed")
val `cancel` = new Translated("cancel")
val `timeOut` = new Translated("timeOut")
val `drawOfferSent` = new Translated("drawOfferSent")
val `drawOfferDeclined` = new Translated("drawOfferDeclined")
val `drawOfferAccepted` = new Translated("drawOfferAccepted")
val `drawOfferCanceled` = new Translated("drawOfferCanceled")
val `whiteOffersDraw` = new Translated("whiteOffersDraw")
val `blackOffersDraw` = new Translated("blackOffersDraw")
val `whiteDeclinesDraw` = new Translated("whiteDeclinesDraw")
val `blackDeclinesDraw` = new Translated("blackDeclinesDraw")
val `yourOpponentOffersADraw` = new Translated("yourOpponentOffersADraw")
val `accept` = new Translated("accept")
val `decline` = new Translated("decline")
val `playingRightNow` = new Translated("playingRightNow")
val `finished` = new Translated("finished")
val `abortGame` = new Translated("abortGame")
val `gameAborted` = new Translated("gameAborted")
val `standard` = new Translated("standard")
val `unlimited` = new Translated("unlimited")
val `mode` = new Translated("mode")
val `casual` = new Translated("casual")
val `rated` = new Translated("rated")
val `thisGameIsRated` = new Translated("thisGameIsRated")
val `rematch` = new Translated("rematch")
val `rematchOfferSent` = new Translated("rematchOfferSent")
val `rematchOfferAccepted` = new Translated("rematchOfferAccepted")
val `rematchOfferCanceled` = new Translated("rematchOfferCanceled")
val `rematchOfferDeclined` = new Translated("rematchOfferDeclined")
val `cancelRematchOffer` = new Translated("cancelRematchOffer")
val `viewRematch` = new Translated("viewRematch")
val `play` = new Translated("play")
val `inbox` = new Translated("inbox")
val `chatRoom` = new Translated("chatRoom")
val `spectatorRoom` = new Translated("spectatorRoom")
val `composeMessage` = new Translated("composeMessage")
val `noNewMessages` = new Translated("noNewMessages")
val `subject` = new Translated("subject")
val `recipient` = new Translated("recipient")
val `send` = new Translated("send")
val `incrementInSeconds` = new Translated("incrementInSeconds")
val `freeOnlineChess` = new Translated("freeOnlineChess")
val `spectators` = new Translated("spectators")
val `exportGames` = new Translated("exportGames")
val `ratingRange` = new Translated("ratingRange")
val `thisPlayerUsesChessComputerAssistance` = new Translated("thisPlayerUsesChessComputerAssistance")
val `thisPlayerArtificiallyIncreasesTheirRating` = new Translated("thisPlayerArtificiallyIncreasesTheirRating")
val `openingExplorer` = new Translated("openingExplorer")
val `takeback` = new Translated("takeback")
val `proposeATakeback` = new Translated("proposeATakeback")
val `takebackPropositionSent` = new Translated("takebackPropositionSent")
val `takebackPropositionDeclined` = new Translated("takebackPropositionDeclined")
val `takebackPropositionAccepted` = new Translated("takebackPropositionAccepted")
val `takebackPropositionCanceled` = new Translated("takebackPropositionCanceled")
val `yourOpponentProposesATakeback` = new Translated("yourOpponentProposesATakeback")
val `bookmarkThisGame` = new Translated("bookmarkThisGame")
val `search` = new Translated("search")
val `advancedSearch` = new Translated("advancedSearch")
val `tournament` = new Translated("tournament")
val `tournaments` = new Translated("tournaments")
val `tournamentPoints` = new Translated("tournamentPoints")
val `viewTournament` = new Translated("viewTournament")
val `backToTournament` = new Translated("backToTournament")
val `backToGame` = new Translated("backToGame")
val `siteDescription` = new Translated("siteDescription")
val `teams` = new Translated("teams")
val `allTeams` = new Translated("allTeams")
val `newTeam` = new Translated("newTeam")
val `myTeams` = new Translated("myTeams")
val `noTeamFound` = new Translated("noTeamFound")
val `joinTeam` = new Translated("joinTeam")
val `quitTeam` = new Translated("quitTeam")
val `anyoneCanJoin` = new Translated("anyoneCanJoin")
val `aConfirmationIsRequiredToJoin` = new Translated("aConfirmationIsRequiredToJoin")
val `joiningPolicy` = new Translated("joiningPolicy")
val `teamLeader` = new Translated("teamLeader")
val `teamBestPlayers` = new Translated("teamBestPlayers")
val `teamRecentMembers` = new Translated("teamRecentMembers")
val `xJoinedTeamY` = new Translated("xJoinedTeamY")
val `xCreatedTeamY` = new Translated("xCreatedTeamY")
val `averageElo` = new Translated("averageElo")
val `location` = new Translated("location")
val `settings` = new Translated("settings")
val `filterGames` = new Translated("filterGames")
val `reset` = new Translated("reset")
val `apply` = new Translated("apply")
val `leaderboard` = new Translated("leaderboard")
val `pasteTheFenStringHere` = new Translated("pasteTheFenStringHere")
val `pasteThePgnStringHere` = new Translated("pasteThePgnStringHere")
val `fromPosition` = new Translated("fromPosition")
val `continueFromHere` = new Translated("continueFromHere")
val `importGame` = new Translated("importGame")
val `thisIsAChessCaptcha` = new Translated("thisIsAChessCaptcha")
val `clickOnTheBoardToMakeYourMove` = new Translated("clickOnTheBoardToMakeYourMove")
val `notACheckmate` = new Translated("notACheckmate")
val `colorPlaysCheckmateInOne` = new Translated("colorPlaysCheckmateInOne")
val `retry` = new Translated("retry")
val `reconnecting` = new Translated("reconnecting")
val `onlineFriends` = new Translated("onlineFriends")
val `noFriendsOnline` = new Translated("noFriendsOnline")
val `findFriends` = new Translated("findFriends")
val `favoriteOpponents` = new Translated("favoriteOpponents")
val `follow` = new Translated("follow")
val `following` = new Translated("following")
val `unfollow` = new Translated("unfollow")
val `block` = new Translated("block")
val `blocked` = new Translated("blocked")
val `unblock` = new Translated("unblock")
val `followsYou` = new Translated("followsYou")
val `xStartedFollowingY` = new Translated("xStartedFollowingY")
val `more` = new Translated("more")
val `memberSince` = new Translated("memberSince")
val `lastSeenActive` = new Translated("lastSeenActive")
val `challengeToPlay` = new Translated("challengeToPlay")
val `player` = new Translated("player")
val `list` = new Translated("list")
val `graph` = new Translated("graph")
val `textIsTooShort` = new Translated("textIsTooShort")
val `textIsTooLong` = new Translated("textIsTooLong")
val `required` = new Translated("required")
val `openTournaments` = new Translated("openTournaments")
val `duration` = new Translated("duration")
val `winner` = new Translated("winner")
val `standing` = new Translated("standing")
val `createANewTournament` = new Translated("createANewTournament")
val `join` = new Translated("join")
val `withdraw` = new Translated("withdraw")
val `points` = new Translated("points")
val `wins` = new Translated("wins")
val `losses` = new Translated("losses")
val `winStreak` = new Translated("winStreak")
val `createdBy` = new Translated("createdBy")
val `tournamentIsStarting` = new Translated("tournamentIsStarting")
val `membersOnly` = new Translated("membersOnly")
val `boardEditor` = new Translated("boardEditor")
val `startPosition` = new Translated("startPosition")
val `clearBoard` = new Translated("clearBoard")
val `savePosition` = new Translated("savePosition")
val `loadPosition` = new Translated("loadPosition")
val `isPrivate` = new Translated("isPrivate")
val `reportXToModerators` = new Translated("reportXToModerators")
val `profile` = new Translated("profile")
val `editProfile` = new Translated("editProfile")
val `firstName` = new Translated("firstName")
val `lastName` = new Translated("lastName")
val `biography` = new Translated("biography")
val `country` = new Translated("country")
val `preferences` = new Translated("preferences")
val `watchLichessTV` = new Translated("watchLichessTV")
val `previouslyOnLichessTV` = new Translated("previouslyOnLichessTV")
val `onlinePlayers` = new Translated("onlinePlayers")
val `activeToday` = new Translated("activeToday")
val `activePlayers` = new Translated("activePlayers")
val `bewareTheGameIsRatedButHasNoClock` = new Translated("bewareTheGameIsRatedButHasNoClock")
val `training` = new Translated("training")
val `yourPuzzleRatingX` = new Translated("yourPuzzleRatingX")
val `findTheBestMoveForWhite` = new Translated("findTheBestMoveForWhite")
val `findTheBestMoveForBlack` = new Translated("findTheBestMoveForBlack")
val `toTrackYourProgress` = new Translated("toTrackYourProgress")
val `trainingSignupExplanation` = new Translated("trainingSignupExplanation")
val `puzzleId` = new Translated("puzzleId")
val `puzzleOfTheDay` = new Translated("puzzleOfTheDay")
val `clickToSolve` = new Translated("clickToSolve")
val `goodMove` = new Translated("goodMove")
val `butYouCanDoBetter` = new Translated("butYouCanDoBetter")
val `bestMove` = new Translated("bestMove")
val `keepGoing` = new Translated("keepGoing")
val `puzzleFailed` = new Translated("puzzleFailed")
val `butYouCanKeepTrying` = new Translated("butYouCanKeepTrying")
val `victory` = new Translated("victory")
val `wasThisPuzzleAnyGood` = new Translated("wasThisPuzzleAnyGood")
val `pleaseVotePuzzle` = new Translated("pleaseVotePuzzle")
val `thankYou` = new Translated("thankYou")
val `ratingX` = new Translated("ratingX")
val `fromGameLink` = new Translated("fromGameLink")
val `startTraining` = new Translated("startTraining")
val `continueTraining` = new Translated("continueTraining")
val `retryThisPuzzle` = new Translated("retryThisPuzzle")
val `thisPuzzleIsCorrect` = new Translated("thisPuzzleIsCorrect")
val `thisPuzzleIsWrong` = new Translated("thisPuzzleIsWrong")
val `automaticallyProceedToNextGameAfterMoving` = new Translated("automaticallyProceedToNextGameAfterMoving")
val `autoSwitch` = new Translated("autoSwitch")
val `puzzles` = new Translated("puzzles")
val `coordinates` = new Translated("coordinates")
val `latestUpdates` = new Translated("latestUpdates")
val `tournamentWinners` = new Translated("tournamentWinners")
val `name` = new Translated("name")
val `description` = new Translated("description")
val `no` = new Translated("no")
val `yes` = new Translated("yes")
val `help` = new Translated("help")
val `createANewTopic` = new Translated("createANewTopic")
val `topics` = new Translated("topics")
val `posts` = new Translated("posts")
val `lastPost` = new Translated("lastPost")
val `views` = new Translated("views")
val `replies` = new Translated("replies")
val `replyToThisTopic` = new Translated("replyToThisTopic")
val `reply` = new Translated("reply")
val `message` = new Translated("message")
val `createTheTopic` = new Translated("createTheTopic")
val `reportAUser` = new Translated("reportAUser")
val `user` = new Translated("user")
val `reason` = new Translated("reason")
val `whatIsIheMatter` = new Translated("whatIsIheMatter")
val `cheat` = new Translated("cheat")
val `insult` = new Translated("insult")
val `troll` = new Translated("troll")
val `other` = new Translated("other")
val `reportDescriptionHelp` = new Translated("reportDescriptionHelp")
val `by` = new Translated("by")
val `thisTopicIsNowClosed` = new Translated("thisTopicIsNowClosed")
val `theming` = new Translated("theming")
val `donate` = new Translated("donate")
val `blog` = new Translated("blog")
val `questionsAndAnswers` = new Translated("questionsAndAnswers")
val `notes` = new Translated("notes")
val `typePrivateNotesHere` = new Translated("typePrivateNotesHere")
val `gameDisplay` = new Translated("gameDisplay")
val `pieceAnimation` = new Translated("pieceAnimation")
val `materialDifference` = new Translated("materialDifference")
val `closeAccount` = new Translated("closeAccount")
val `changedMindDoNotCloseAccount` = new Translated("changedMindDoNotCloseAccount")
val `closeAccountExplanation` = new Translated("closeAccountExplanation")
val `thisAccountIsClosed` = new Translated("thisAccountIsClosed")
val `invalidUsernameOrPassword` = new Translated("invalidUsernameOrPassword")
val `emailMeALink` = new Translated("emailMeALink")
val `currentPassword` = new Translated("currentPassword")
val `newPassword` = new Translated("newPassword")
val `newPasswordAgain` = new Translated("newPasswordAgain")
val `boardHighlights` = new Translated("boardHighlights")
val `pieceDestinations` = new Translated("pieceDestinations")
val `boardCoordinates` = new Translated("boardCoordinates")
val `moveListWhilePlaying` = new Translated("moveListWhilePlaying")
val `chessClock` = new Translated("chessClock")
val `tenthsOfSeconds` = new Translated("tenthsOfSeconds")
val `never` = new Translated("never")
val `whenTimeRemainingLessThanTenSeconds` = new Translated("whenTimeRemainingLessThanTenSeconds")
val `horizontalGreenProgressBars` = new Translated("horizontalGreenProgressBars")
val `soundWhenTimeGetsCritical` = new Translated("soundWhenTimeGetsCritical")
val `gameBehavior` = new Translated("gameBehavior")
val `premovesPlayingDuringOpponentTurn` = new Translated("premovesPlayingDuringOpponentTurn")
val `takebacksWithOpponentApproval` = new Translated("takebacksWithOpponentApproval")
val `promoteToQueenAutomatically` = new Translated("promoteToQueenAutomatically")
val `claimDrawOnThreefoldRepetitionAutomatically` = new Translated("claimDrawOnThreefoldRepetitionAutomatically")
val `privacy` = new Translated("privacy")
val `letOtherPlayersFollowYou` = new Translated("letOtherPlayersFollowYou")
val `letOtherPlayersChallengeYou` = new Translated("letOtherPlayersChallengeYou")
val `sound` = new Translated("sound")
val `yourPreferencesHaveBeenSaved` = new Translated("yourPreferencesHaveBeenSaved")
val `none` = new Translated("none")
val `fast` = new Translated("fast")
val `normal` = new Translated("normal")
val `slow` = new Translated("slow")
val `insideTheBoard` = new Translated("insideTheBoard")
val `outsideTheBoard` = new Translated("outsideTheBoard")
val `onSlowGames` = new Translated("onSlowGames")
val `always` = new Translated("always")
val `inCasualGamesOnly` = new Translated("inCasualGamesOnly")
val `whenPremoving` = new Translated("whenPremoving")
val `whenTimeRemainingLessThanThirtySeconds` = new Translated("whenTimeRemainingLessThanThirtySeconds")
val `difficultyEasy` = new Translated("difficultyEasy")
val `difficultyNormal` = new Translated("difficultyNormal")
val `difficultyHard` = new Translated("difficultyHard")
val `xLeftANoteOnY` = new Translated("xLeftANoteOnY")
val `xCompetesInY` = new Translated("xCompetesInY")
val `xAskedY` = new Translated("xAskedY")
val `xAnsweredY` = new Translated("xAnsweredY")
val `xCommentedY` = new Translated("xCommentedY")
val `timeline` = new Translated("timeline")
val `seeAllTournaments` = new Translated("seeAllTournaments")
val `starting` = new Translated("starting")
val `allInformationIsPublicAndOptional` = new Translated("allInformationIsPublicAndOptional")
val `yourCityRegionOrDepartment` = new Translated("yourCityRegionOrDepartment")
val `biographyDescription` = new Translated("biographyDescription")
val `listBlockedPlayers` = new Translated("listBlockedPlayers")
val `human` = new Translated("human")
val `computer` = new Translated("computer")
val `side` = new Translated("side")
val `clock` = new Translated("clock")
val `unauthorizedError` = new Translated("unauthorizedError")
val `noInternetConnection` = new Translated("noInternetConnection")
val `connectedToLichess` = new Translated("connectedToLichess")
val `signedOut` = new Translated("signedOut")
val `loginSuccessful` = new Translated("loginSuccessful")
val `playOnTheBoardOffline` = new Translated("playOnTheBoardOffline")
val `playOfflineComputer` = new Translated("playOfflineComputer")
val `opponent` = new Translated("opponent")
val `learn` = new Translated("learn")
val `community` = new Translated("community")
val `tools` = new Translated("tools")
val `increment` = new Translated("increment")
val `sharePGN` = new Translated("sharePGN")
val `playOnline` = new Translated("playOnline")
val `playOffline` = new Translated("playOffline")
val `allowAnalytics` = new Translated("allowAnalytics")
val `shareGameURL` = new Translated("shareGameURL")
val `error.required` = new Translated("error.required")
val `error.email` = new Translated("error.email")
val `error.email_acceptable` = new Translated("error.email_acceptable")
val `error.email_unique` = new Translated("error.email_unique")
val `blindfoldChess` = new Translated("blindfoldChess")
val `moveConfirmation` = new Translated("moveConfirmation")
val `inCorrespondenceGames` = new Translated("inCorrespondenceGames")
val `ifRatingIsPlusMinusX` = new Translated("ifRatingIsPlusMinusX")
val `onlyFriends` = new Translated("onlyFriends")
val `menu` = new Translated("menu")
val `castling` = new Translated("castling")
val `whiteCastlingKingside` = new Translated("whiteCastlingKingside")
val `whiteCastlingQueenside` = new Translated("whiteCastlingQueenside")
val `blackCastlingKingside` = new Translated("blackCastlingKingside")
val `blackCastlingQueenside` = new Translated("blackCastlingQueenside")
val `tpTimeSpentPlaying` = new Translated("tpTimeSpentPlaying")
val `watchGames` = new Translated("watchGames")
val `tpTimeSpentOnTV` = new Translated("tpTimeSpentOnTV")
val `watch` = new Translated("watch")
val `internationalEvents` = new Translated("internationalEvents")
val `videoLibrary` = new Translated("videoLibrary")
val `mobileApp` = new Translated("mobileApp")
val `webmasters` = new Translated("webmasters")
val `contribute` = new Translated("contribute")
val `contact` = new Translated("contact")
val `termsOfService` = new Translated("termsOfService")
val `sourceCode` = new Translated("sourceCode")
val `simultaneousExhibitions` = new Translated("simultaneousExhibitions")
val `host` = new Translated("host")
val `createdSimuls` = new Translated("createdSimuls")
val `hostANewSimul` = new Translated("hostANewSimul")
val `noSimulFound` = new Translated("noSimulFound")
val `noSimulExplanation` = new Translated("noSimulExplanation")
val `returnToSimulHomepage` = new Translated("returnToSimulHomepage")
val `aboutSimul` = new Translated("aboutSimul")
val `aboutSimulImage` = new Translated("aboutSimulImage")
val `aboutSimulRealLife` = new Translated("aboutSimulRealLife")
val `aboutSimulRules` = new Translated("aboutSimulRules")
val `aboutSimulSettings` = new Translated("aboutSimulSettings")
val `create` = new Translated("create")
val `whenCreateSimul` = new Translated("whenCreateSimul")
val `simulVariantsHint` = new Translated("simulVariantsHint")
val `simulClockHint` = new Translated("simulClockHint")
val `simulAddExtraTime` = new Translated("simulAddExtraTime")
val `simulHostExtraTime` = new Translated("simulHostExtraTime")
val `lichessTournaments` = new Translated("lichessTournaments")
val `tournamentFAQ` = new Translated("tournamentFAQ")
val `tournamentOfficial` = new Translated("tournamentOfficial")
val `timeBeforeTournamentStarts` = new Translated("timeBeforeTournamentStarts")
val `averageCentipawnLoss` = new Translated("averageCentipawnLoss")
val `keyboardShortcuts` = new Translated("keyboardShortcuts")
val `keyMoveBackwardOrForward` = new Translated("keyMoveBackwardOrForward")
val `keyGoToStartOrEnd` = new Translated("keyGoToStartOrEnd")
val `keyShowOrHideComments` = new Translated("keyShowOrHideComments")
val `keyEnterOrExitVariation` = new Translated("keyEnterOrExitVariation")
val `newTournament` = new Translated("newTournament")
val `tournamentHomeTitle` = new Translated("tournamentHomeTitle")
val `tournamentHomeDescription` = new Translated("tournamentHomeDescription")
val `tournamentNotFound` = new Translated("tournamentNotFound")
val `tournamentDoesNotExist` = new Translated("tournamentDoesNotExist")
val `tournamentMayHaveBeenCanceled` = new Translated("tournamentMayHaveBeenCanceled")
val `returnToTournamentsHomepage` = new Translated("returnToTournamentsHomepage")
val `weeklyPerfTypeRatingDistribution` = new Translated("weeklyPerfTypeRatingDistribution")
val `yourPerfTypeRatingIsRating` = new Translated("yourPerfTypeRatingIsRating")
val `youAreBetterThanPercentOfPerfTypePlayers` = new Translated("youAreBetterThanPercentOfPerfTypePlayers")
val `youDoNotHaveAnEstablishedPerfTypeRating` = new Translated("youDoNotHaveAnEstablishedPerfTypeRating")
val `checkYourEmail` = new Translated("checkYourEmail")
val `weHaveSentYouAnEmailClickTheLink` = new Translated("weHaveSentYouAnEmailClickTheLink")
val `ifYouDoNotSeeTheEmailCheckOtherPlaces` = new Translated("ifYouDoNotSeeTheEmailCheckOtherPlaces")
val `areYouSureYouEvenRegisteredYourEmailOnLichess` = new Translated("areYouSureYouEvenRegisteredYourEmailOnLichess")
val `itWasNotRequiredForYourRegistration` = new Translated("itWasNotRequiredForYourRegistration")
val `weHaveSentYouAnEmailTo` = new Translated("weHaveSentYouAnEmailTo")
val `byRegisteringYouAgreeToBeBoundByOur` = new Translated("byRegisteringYouAgreeToBeBoundByOur")
val `networkLagBetweenYouAndLichess` = new Translated("networkLagBetweenYouAndLichess")
val `timeToProcessAMoveOnLichessServer` = new Translated("timeToProcessAMoveOnLichessServer")
val `downloadAnnotated` = new Translated("downloadAnnotated")
val `downloadRaw` = new Translated("downloadRaw")
val `downloadImported` = new Translated("downloadImported")
val `printFriendlyPDF` = new Translated("printFriendlyPDF")
val `crosstable` = new Translated("crosstable")
val `youCanAlsoScrollOverTheBoardToMoveInTheGame` = new Translated("youCanAlsoScrollOverTheBoardToMoveInTheGame")
val `analysisShapesHowTo` = new Translated("analysisShapesHowTo")
val `confirmResignation` = new Translated("confirmResignation")
val `letOtherPlayersMessageYou` = new Translated("letOtherPlayersMessageYou")
val `shareYourInsightsData` = new Translated("shareYourInsightsData")
val `youHaveAlreadyRegisteredTheEmail` = new Translated("youHaveAlreadyRegisteredTheEmail")
val `kidMode` = new Translated("kidMode")
val `playChessEverywhere` = new Translated("playChessEverywhere")
val `asFreeAsLichess` = new Translated("asFreeAsLichess")
val `builtForTheLoveOfChessNotMoney` = new Translated("builtForTheLoveOfChessNotMoney")
val `everybodyGetsAllFeaturesForFree` = new Translated("everybodyGetsAllFeaturesForFree")
val `zeroAdvertisement` = new Translated("zeroAdvertisement")
val `fullFeatured` = new Translated("fullFeatured")
val `phoneAndTablet` = new Translated("phoneAndTablet")
val `bulletBlitzClassical` = new Translated("bulletBlitzClassical")
val `correspondenceChess` = new Translated("correspondenceChess")
val `onlineAndOfflinePlay` = new Translated("onlineAndOfflinePlay")
val `correspondenceAndUnlimited` = new Translated("correspondenceAndUnlimited")
val `viewTheSolution` = new Translated("viewTheSolution")
val `followAndChallengeFriends` = new Translated("followAndChallengeFriends")
val `gameAnalysis` = new Translated("gameAnalysis")
val `xHostsY` = new Translated("xHostsY")
val `xJoinsY` = new Translated("xJoinsY")
val `xLikesY` = new Translated("xLikesY")
val `quickPairing` = new Translated("quickPairing")
val `lobby` = new Translated("lobby")
val `yourScore` = new Translated("yourScore")
val `background` = new Translated("background")
val `boardGeometry` = new Translated("boardGeometry")
val `boardTheme` = new Translated("boardTheme")
val `boardSize` = new Translated("boardSize")
val `pieceSet` = new Translated("pieceSet")
val `embedInYourWebsite` = new Translated("embedInYourWebsite")
val `usernameAlreadyUsed` = new Translated("usernameAlreadyUsed")
val `nbPlayers` = new Translated("nbPlayers")
val `nbGames` = new Translated("nbGames")
val `nbBookmarks` = new Translated("nbBookmarks")
val `nbDays` = new Translated("nbDays")
val `nbHours` = new Translated("nbHours")
val `nbGamesWithYou` = new Translated("nbGamesWithYou")
val `nbWins` = new Translated("nbWins")
val `nbLosses` = new Translated("nbLosses")
val `nbDraws` = new Translated("nbDraws")
val `giveNbSeconds` = new Translated("giveNbSeconds")
val `nbMembers` = new Translated("nbMembers")
val `nbImportedGames` = new Translated("nbImportedGames")
val `nbFollowers` = new Translated("nbFollowers")
val `nbFollowing` = new Translated("nbFollowing")
val `lessThanNbMinutes` = new Translated("lessThanNbMinutes")
val `playedXTimes` = new Translated("playedXTimes")
val `youHaveNbSecondsToMakeYourFirstMove` = new Translated("youHaveNbSecondsToMakeYourFirstMove")
val `nbGamesInPlay` = new Translated("nbGamesInPlay")
val `maximumNbCharacters` = new Translated("maximumNbCharacters")
val `blocks` = new Translated("blocks")
val `nbForumPosts` = new Translated("nbForumPosts")
val `nbPerfTypePlayersThisWeek` = new Translated("nbPerfTypePlayersThisWeek")
val `availableInNbLanguages` = new Translated("availableInNbLanguages")
}
