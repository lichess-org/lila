// Generated with bin/trans-dump.js
package lila.i18n

// format: OFF
object I18nKeys:
  val `playWithAFriend` = I18nKey("playWithAFriend")
  val `playWithTheMachine` = I18nKey("playWithTheMachine")
  val `toInviteSomeoneToPlayGiveThisUrl` = I18nKey("toInviteSomeoneToPlayGiveThisUrl")
  val `gameOver` = I18nKey("gameOver")
  val `waitingForOpponent` = I18nKey("waitingForOpponent")
  val `waiting` = I18nKey("waiting")
  val `yourTurn` = I18nKey("yourTurn")
  val `aiNameLevelAiLevel` = I18nKey("aiNameLevelAiLevel")
  val `level` = I18nKey("level")
  val `strength` = I18nKey("strength")
  val `toggleTheChat` = I18nKey("toggleTheChat")
  val `chat` = I18nKey("chat")
  val `resign` = I18nKey("resign")
  val `checkmate` = I18nKey("checkmate")
  val `stalemate` = I18nKey("stalemate")
  val `white` = I18nKey("white")
  val `black` = I18nKey("black")
  val `asWhite` = I18nKey("asWhite")
  val `asBlack` = I18nKey("asBlack")
  val `randomColor` = I18nKey("randomColor")
  val `createAGame` = I18nKey("createAGame")
  val `whiteIsVictorious` = I18nKey("whiteIsVictorious")
  val `blackIsVictorious` = I18nKey("blackIsVictorious")
  val `youPlayTheWhitePieces` = I18nKey("youPlayTheWhitePieces")
  val `youPlayTheBlackPieces` = I18nKey("youPlayTheBlackPieces")
  val `itsYourTurn` = I18nKey("itsYourTurn")
  val `cheatDetected` = I18nKey("cheatDetected")
  val `kingInTheCenter` = I18nKey("kingInTheCenter")
  val `threeChecks` = I18nKey("threeChecks")
  val `raceFinished` = I18nKey("raceFinished")
  val `variantEnding` = I18nKey("variantEnding")
  val `newOpponent` = I18nKey("newOpponent")
  val `yourOpponentWantsToPlayANewGameWithYou` = I18nKey("yourOpponentWantsToPlayANewGameWithYou")
  val `joinTheGame` = I18nKey("joinTheGame")
  val `whitePlays` = I18nKey("whitePlays")
  val `blackPlays` = I18nKey("blackPlays")
  val `opponentLeftChoices` = I18nKey("opponentLeftChoices")
  val `forceResignation` = I18nKey("forceResignation")
  val `forceDraw` = I18nKey("forceDraw")
  val `talkInChat` = I18nKey("talkInChat")
  val `theFirstPersonToComeOnThisUrlWillPlayWithYou` = I18nKey("theFirstPersonToComeOnThisUrlWillPlayWithYou")
  val `whiteResigned` = I18nKey("whiteResigned")
  val `blackResigned` = I18nKey("blackResigned")
  val `whiteLeftTheGame` = I18nKey("whiteLeftTheGame")
  val `blackLeftTheGame` = I18nKey("blackLeftTheGame")
  val `whiteDidntMove` = I18nKey("whiteDidntMove")
  val `blackDidntMove` = I18nKey("blackDidntMove")
  val `requestAComputerAnalysis` = I18nKey("requestAComputerAnalysis")
  val `computerAnalysis` = I18nKey("computerAnalysis")
  val `computerAnalysisAvailable` = I18nKey("computerAnalysisAvailable")
  val `computerAnalysisDisabled` = I18nKey("computerAnalysisDisabled")
  val `analysis` = I18nKey("analysis")
  val `depthX` = I18nKey("depthX")
  val `usingServerAnalysis` = I18nKey("usingServerAnalysis")
  val `loadingEngine` = I18nKey("loadingEngine")
  val `calculatingMoves` = I18nKey("calculatingMoves")
  val `engineFailed` = I18nKey("engineFailed")
  val `cloudAnalysis` = I18nKey("cloudAnalysis")
  val `goDeeper` = I18nKey("goDeeper")
  val `showThreat` = I18nKey("showThreat")
  val `inLocalBrowser` = I18nKey("inLocalBrowser")
  val `toggleLocalEvaluation` = I18nKey("toggleLocalEvaluation")
  val `promoteVariation` = I18nKey("promoteVariation")
  val `makeMainLine` = I18nKey("makeMainLine")
  val `deleteFromHere` = I18nKey("deleteFromHere")
  val `forceVariation` = I18nKey("forceVariation")
  val `move` = I18nKey("move")
  val `variantLoss` = I18nKey("variantLoss")
  val `variantWin` = I18nKey("variantWin")
  val `insufficientMaterial` = I18nKey("insufficientMaterial")
  val `pawnMove` = I18nKey("pawnMove")
  val `capture` = I18nKey("capture")
  val `close` = I18nKey("close")
  val `winning` = I18nKey("winning")
  val `losing` = I18nKey("losing")
  val `drawn` = I18nKey("drawn")
  val `unknown` = I18nKey("unknown")
  val `database` = I18nKey("database")
  val `whiteDrawBlack` = I18nKey("whiteDrawBlack")
  val `averageRatingX` = I18nKey("averageRatingX")
  val `recentGames` = I18nKey("recentGames")
  val `topGames` = I18nKey("topGames")
  val `masterDbExplanation` = I18nKey("masterDbExplanation")
  val `dtzWithRounding` = I18nKey("dtzWithRounding")
  val `noGameFound` = I18nKey("noGameFound")
  val `maxDepthReached` = I18nKey("maxDepthReached")
  val `maybeIncludeMoreGamesFromThePreferencesMenu` = I18nKey("maybeIncludeMoreGamesFromThePreferencesMenu")
  val `openings` = I18nKey("openings")
  val `openingExplorer` = I18nKey("openingExplorer")
  val `openingEndgameExplorer` = I18nKey("openingEndgameExplorer")
  val `xOpeningExplorer` = I18nKey("xOpeningExplorer")
  val `playFirstOpeningEndgameExplorerMove` = I18nKey("playFirstOpeningEndgameExplorerMove")
  val `winPreventedBy50MoveRule` = I18nKey("winPreventedBy50MoveRule")
  val `lossSavedBy50MoveRule` = I18nKey("lossSavedBy50MoveRule")
  val `winOr50MovesByPriorMistake` = I18nKey("winOr50MovesByPriorMistake")
  val `lossOr50MovesByPriorMistake` = I18nKey("lossOr50MovesByPriorMistake")
  val `unknownDueToRounding` = I18nKey("unknownDueToRounding")
  val `allSet` = I18nKey("allSet")
  val `importPgn` = I18nKey("importPgn")
  val `delete` = I18nKey("delete")
  val `deleteThisImportedGame` = I18nKey("deleteThisImportedGame")
  val `replayMode` = I18nKey("replayMode")
  val `realtimeReplay` = I18nKey("realtimeReplay")
  val `byCPL` = I18nKey("byCPL")
  val `openStudy` = I18nKey("openStudy")
  val `enable` = I18nKey("enable")
  val `bestMoveArrow` = I18nKey("bestMoveArrow")
  val `evaluationGauge` = I18nKey("evaluationGauge")
  val `multipleLines` = I18nKey("multipleLines")
  val `cpus` = I18nKey("cpus")
  val `memory` = I18nKey("memory")
  val `infiniteAnalysis` = I18nKey("infiniteAnalysis")
  val `removesTheDepthLimit` = I18nKey("removesTheDepthLimit")
  val `engineManager` = I18nKey("engineManager")
  val `blunder` = I18nKey("blunder")
  val `mistake` = I18nKey("mistake")
  val `inaccuracy` = I18nKey("inaccuracy")
  val `moveTimes` = I18nKey("moveTimes")
  val `flipBoard` = I18nKey("flipBoard")
  val `threefoldRepetition` = I18nKey("threefoldRepetition")
  val `claimADraw` = I18nKey("claimADraw")
  val `offerDraw` = I18nKey("offerDraw")
  val `draw` = I18nKey("draw")
  val `drawByMutualAgreement` = I18nKey("drawByMutualAgreement")
  val `fiftyMovesWithoutProgress` = I18nKey("fiftyMovesWithoutProgress")
  val `currentGames` = I18nKey("currentGames")
  val `viewInFullSize` = I18nKey("viewInFullSize")
  val `logOut` = I18nKey("logOut")
  val `signIn` = I18nKey("signIn")
  val `rememberMe` = I18nKey("rememberMe")
  val `youNeedAnAccountToDoThat` = I18nKey("youNeedAnAccountToDoThat")
  val `signUp` = I18nKey("signUp")
  val `computersAreNotAllowedToPlay` = I18nKey("computersAreNotAllowedToPlay")
  val `games` = I18nKey("games")
  val `forum` = I18nKey("forum")
  val `xPostedInForumY` = I18nKey("xPostedInForumY")
  val `latestForumPosts` = I18nKey("latestForumPosts")
  val `players` = I18nKey("players")
  val `friends` = I18nKey("friends")
  val `discussions` = I18nKey("discussions")
  val `today` = I18nKey("today")
  val `yesterday` = I18nKey("yesterday")
  val `minutesPerSide` = I18nKey("minutesPerSide")
  val `variant` = I18nKey("variant")
  val `variants` = I18nKey("variants")
  val `timeControl` = I18nKey("timeControl")
  val `realTime` = I18nKey("realTime")
  val `correspondence` = I18nKey("correspondence")
  val `daysPerTurn` = I18nKey("daysPerTurn")
  val `oneDay` = I18nKey("oneDay")
  val `time` = I18nKey("time")
  val `rating` = I18nKey("rating")
  val `ratingStats` = I18nKey("ratingStats")
  val `username` = I18nKey("username")
  val `usernameOrEmail` = I18nKey("usernameOrEmail")
  val `changeUsername` = I18nKey("changeUsername")
  val `changeUsernameNotSame` = I18nKey("changeUsernameNotSame")
  val `changeUsernameDescription` = I18nKey("changeUsernameDescription")
  val `signupUsernameHint` = I18nKey("signupUsernameHint")
  val `signupEmailHint` = I18nKey("signupEmailHint")
  val `password` = I18nKey("password")
  val `changePassword` = I18nKey("changePassword")
  val `changeEmail` = I18nKey("changeEmail")
  val `email` = I18nKey("email")
  val `passwordReset` = I18nKey("passwordReset")
  val `forgotPassword` = I18nKey("forgotPassword")
  val `error.weakPassword` = I18nKey("error.weakPassword")
  val `error.namePassword` = I18nKey("error.namePassword")
  val `blankedPassword` = I18nKey("blankedPassword")
  val `youAreLeavingLichess` = I18nKey("youAreLeavingLichess")
  val `neverTypeYourPassword` = I18nKey("neverTypeYourPassword")
  val `proceedToX` = I18nKey("proceedToX")
  val `passwordSuggestion` = I18nKey("passwordSuggestion")
  val `emailSuggestion` = I18nKey("emailSuggestion")
  val `emailConfirmHelp` = I18nKey("emailConfirmHelp")
  val `emailConfirmNotReceived` = I18nKey("emailConfirmNotReceived")
  val `whatSignupUsername` = I18nKey("whatSignupUsername")
  val `usernameNotFound` = I18nKey("usernameNotFound")
  val `usernameCanBeUsedForNewAccount` = I18nKey("usernameCanBeUsedForNewAccount")
  val `emailSent` = I18nKey("emailSent")
  val `emailCanTakeSomeTime` = I18nKey("emailCanTakeSomeTime")
  val `refreshInboxAfterFiveMinutes` = I18nKey("refreshInboxAfterFiveMinutes")
  val `checkSpamFolder` = I18nKey("checkSpamFolder")
  val `emailForSignupHelp` = I18nKey("emailForSignupHelp")
  val `copyTextToEmail` = I18nKey("copyTextToEmail")
  val `waitForSignupHelp` = I18nKey("waitForSignupHelp")
  val `accountConfirmed` = I18nKey("accountConfirmed")
  val `accountCanLogin` = I18nKey("accountCanLogin")
  val `accountConfirmationEmailNotNeeded` = I18nKey("accountConfirmationEmailNotNeeded")
  val `accountClosed` = I18nKey("accountClosed")
  val `accountRegisteredWithoutEmail` = I18nKey("accountRegisteredWithoutEmail")
  val `rank` = I18nKey("rank")
  val `rankX` = I18nKey("rankX")
  val `gamesPlayed` = I18nKey("gamesPlayed")
  val `cancel` = I18nKey("cancel")
  val `whiteTimeOut` = I18nKey("whiteTimeOut")
  val `blackTimeOut` = I18nKey("blackTimeOut")
  val `drawOfferSent` = I18nKey("drawOfferSent")
  val `drawOfferAccepted` = I18nKey("drawOfferAccepted")
  val `drawOfferCanceled` = I18nKey("drawOfferCanceled")
  val `whiteOffersDraw` = I18nKey("whiteOffersDraw")
  val `blackOffersDraw` = I18nKey("blackOffersDraw")
  val `whiteDeclinesDraw` = I18nKey("whiteDeclinesDraw")
  val `blackDeclinesDraw` = I18nKey("blackDeclinesDraw")
  val `yourOpponentOffersADraw` = I18nKey("yourOpponentOffersADraw")
  val `accept` = I18nKey("accept")
  val `decline` = I18nKey("decline")
  val `playingRightNow` = I18nKey("playingRightNow")
  val `eventInProgress` = I18nKey("eventInProgress")
  val `finished` = I18nKey("finished")
  val `finishesX` = I18nKey("finishesX")
  val `abortGame` = I18nKey("abortGame")
  val `gameAborted` = I18nKey("gameAborted")
  val `standard` = I18nKey("standard")
  val `unlimited` = I18nKey("unlimited")
  val `mode` = I18nKey("mode")
  val `casual` = I18nKey("casual")
  val `rated` = I18nKey("rated")
  val `casualTournament` = I18nKey("casualTournament")
  val `ratedTournament` = I18nKey("ratedTournament")
  val `thisGameIsRated` = I18nKey("thisGameIsRated")
  val `rematch` = I18nKey("rematch")
  val `rematchOfferSent` = I18nKey("rematchOfferSent")
  val `rematchOfferAccepted` = I18nKey("rematchOfferAccepted")
  val `rematchOfferCanceled` = I18nKey("rematchOfferCanceled")
  val `rematchOfferDeclined` = I18nKey("rematchOfferDeclined")
  val `cancelRematchOffer` = I18nKey("cancelRematchOffer")
  val `viewRematch` = I18nKey("viewRematch")
  val `confirmMove` = I18nKey("confirmMove")
  val `play` = I18nKey("play")
  val `inbox` = I18nKey("inbox")
  val `chatRoom` = I18nKey("chatRoom")
  val `loginToChat` = I18nKey("loginToChat")
  val `youHaveBeenTimedOut` = I18nKey("youHaveBeenTimedOut")
  val `spectatorRoom` = I18nKey("spectatorRoom")
  val `composeMessage` = I18nKey("composeMessage")
  val `subject` = I18nKey("subject")
  val `send` = I18nKey("send")
  val `incrementInSeconds` = I18nKey("incrementInSeconds")
  val `freeOnlineChess` = I18nKey("freeOnlineChess")
  val `exportGames` = I18nKey("exportGames")
  val `ratingRange` = I18nKey("ratingRange")
  val `thisAccountViolatedTos` = I18nKey("thisAccountViolatedTos")
  val `openingExplorerAndTablebase` = I18nKey("openingExplorerAndTablebase")
  val `takeback` = I18nKey("takeback")
  val `proposeATakeback` = I18nKey("proposeATakeback")
  val `takebackPropositionSent` = I18nKey("takebackPropositionSent")
  val `takebackPropositionDeclined` = I18nKey("takebackPropositionDeclined")
  val `takebackPropositionAccepted` = I18nKey("takebackPropositionAccepted")
  val `takebackPropositionCanceled` = I18nKey("takebackPropositionCanceled")
  val `yourOpponentProposesATakeback` = I18nKey("yourOpponentProposesATakeback")
  val `bookmarkThisGame` = I18nKey("bookmarkThisGame")
  val `tournament` = I18nKey("tournament")
  val `tournaments` = I18nKey("tournaments")
  val `tournamentPoints` = I18nKey("tournamentPoints")
  val `viewTournament` = I18nKey("viewTournament")
  val `backToTournament` = I18nKey("backToTournament")
  val `noDrawBeforeSwissLimit` = I18nKey("noDrawBeforeSwissLimit")
  val `thematic` = I18nKey("thematic")
  val `yourPerfRatingIsProvisional` = I18nKey("yourPerfRatingIsProvisional")
  val `yourPerfRatingIsTooHigh` = I18nKey("yourPerfRatingIsTooHigh")
  val `yourTopWeeklyPerfRatingIsTooHigh` = I18nKey("yourTopWeeklyPerfRatingIsTooHigh")
  val `yourPerfRatingIsTooLow` = I18nKey("yourPerfRatingIsTooLow")
  val `ratedMoreThanInPerf` = I18nKey("ratedMoreThanInPerf")
  val `ratedLessThanInPerf` = I18nKey("ratedLessThanInPerf")
  val `mustBeInTeam` = I18nKey("mustBeInTeam")
  val `youAreNotInTeam` = I18nKey("youAreNotInTeam")
  val `backToGame` = I18nKey("backToGame")
  val `siteDescription` = I18nKey("siteDescription")
  val `xJoinedTeamY` = I18nKey("xJoinedTeamY")
  val `xCreatedTeamY` = I18nKey("xCreatedTeamY")
  val `startedStreaming` = I18nKey("startedStreaming")
  val `xStartedStreaming` = I18nKey("xStartedStreaming")
  val `averageElo` = I18nKey("averageElo")
  val `location` = I18nKey("location")
  val `filterGames` = I18nKey("filterGames")
  val `reset` = I18nKey("reset")
  val `apply` = I18nKey("apply")
  val `save` = I18nKey("save")
  val `leaderboard` = I18nKey("leaderboard")
  val `screenshotCurrentPosition` = I18nKey("screenshotCurrentPosition")
  val `gameAsGIF` = I18nKey("gameAsGIF")
  val `pasteTheFenStringHere` = I18nKey("pasteTheFenStringHere")
  val `pasteThePgnStringHere` = I18nKey("pasteThePgnStringHere")
  val `orUploadPgnFile` = I18nKey("orUploadPgnFile")
  val `fromPosition` = I18nKey("fromPosition")
  val `continueFromHere` = I18nKey("continueFromHere")
  val `toStudy` = I18nKey("toStudy")
  val `importGame` = I18nKey("importGame")
  val `importGameExplanation` = I18nKey("importGameExplanation")
  val `importGameCaveat` = I18nKey("importGameCaveat")
  val `thisIsAChessCaptcha` = I18nKey("thisIsAChessCaptcha")
  val `clickOnTheBoardToMakeYourMove` = I18nKey("clickOnTheBoardToMakeYourMove")
  val `captcha.fail` = I18nKey("captcha.fail")
  val `notACheckmate` = I18nKey("notACheckmate")
  val `whiteCheckmatesInOneMove` = I18nKey("whiteCheckmatesInOneMove")
  val `blackCheckmatesInOneMove` = I18nKey("blackCheckmatesInOneMove")
  val `retry` = I18nKey("retry")
  val `reconnecting` = I18nKey("reconnecting")
  val `favoriteOpponents` = I18nKey("favoriteOpponents")
  val `follow` = I18nKey("follow")
  val `following` = I18nKey("following")
  val `unfollow` = I18nKey("unfollow")
  val `followX` = I18nKey("followX")
  val `unfollowX` = I18nKey("unfollowX")
  val `block` = I18nKey("block")
  val `blocked` = I18nKey("blocked")
  val `unblock` = I18nKey("unblock")
  val `followsYou` = I18nKey("followsYou")
  val `xStartedFollowingY` = I18nKey("xStartedFollowingY")
  val `more` = I18nKey("more")
  val `memberSince` = I18nKey("memberSince")
  val `lastSeenActive` = I18nKey("lastSeenActive")
  val `player` = I18nKey("player")
  val `list` = I18nKey("list")
  val `graph` = I18nKey("graph")
  val `required` = I18nKey("required")
  val `openTournaments` = I18nKey("openTournaments")
  val `duration` = I18nKey("duration")
  val `winner` = I18nKey("winner")
  val `standing` = I18nKey("standing")
  val `createANewTournament` = I18nKey("createANewTournament")
  val `tournamentCalendar` = I18nKey("tournamentCalendar")
  val `conditionOfEntry` = I18nKey("conditionOfEntry")
  val `advancedSettings` = I18nKey("advancedSettings")
  val `safeTournamentName` = I18nKey("safeTournamentName")
  val `inappropriateNameWarning` = I18nKey("inappropriateNameWarning")
  val `emptyTournamentName` = I18nKey("emptyTournamentName")
  val `recommendNotTouching` = I18nKey("recommendNotTouching")
  val `fewerPlayers` = I18nKey("fewerPlayers")
  val `showAdvancedSettings` = I18nKey("showAdvancedSettings")
  val `makePrivateTournament` = I18nKey("makePrivateTournament")
  val `join` = I18nKey("join")
  val `withdraw` = I18nKey("withdraw")
  val `points` = I18nKey("points")
  val `wins` = I18nKey("wins")
  val `losses` = I18nKey("losses")
  val `createdBy` = I18nKey("createdBy")
  val `tournamentIsStarting` = I18nKey("tournamentIsStarting")
  val `tournamentPairingsAreNowClosed` = I18nKey("tournamentPairingsAreNowClosed")
  val `standByX` = I18nKey("standByX")
  val `pause` = I18nKey("pause")
  val `resume` = I18nKey("resume")
  val `youArePlaying` = I18nKey("youArePlaying")
  val `winRate` = I18nKey("winRate")
  val `berserkRate` = I18nKey("berserkRate")
  val `performance` = I18nKey("performance")
  val `tournamentComplete` = I18nKey("tournamentComplete")
  val `movesPlayed` = I18nKey("movesPlayed")
  val `whiteWins` = I18nKey("whiteWins")
  val `blackWins` = I18nKey("blackWins")
  val `draws` = I18nKey("draws")
  val `nextXTournament` = I18nKey("nextXTournament")
  val `averageOpponent` = I18nKey("averageOpponent")
  val `boardEditor` = I18nKey("boardEditor")
  val `setTheBoard` = I18nKey("setTheBoard")
  val `popularOpenings` = I18nKey("popularOpenings")
  val `endgamePositions` = I18nKey("endgamePositions")
  val `chess960StartPosition` = I18nKey("chess960StartPosition")
  val `startPosition` = I18nKey("startPosition")
  val `clearBoard` = I18nKey("clearBoard")
  val `loadPosition` = I18nKey("loadPosition")
  val `isPrivate` = I18nKey("isPrivate")
  val `reportXToModerators` = I18nKey("reportXToModerators")
  val `profileCompletion` = I18nKey("profileCompletion")
  val `xRating` = I18nKey("xRating")
  val `ifNoneLeaveEmpty` = I18nKey("ifNoneLeaveEmpty")
  val `profile` = I18nKey("profile")
  val `editProfile` = I18nKey("editProfile")
  val `firstName` = I18nKey("firstName")
  val `lastName` = I18nKey("lastName")
  val `biography` = I18nKey("biography")
  val `countryOrFlag` = I18nKey("countryOrFlag")
  val `thankYou` = I18nKey("thankYou")
  val `socialMediaLinks` = I18nKey("socialMediaLinks")
  val `oneUrlPerLine` = I18nKey("oneUrlPerLine")
  val `inlineNotation` = I18nKey("inlineNotation")
  val `savingMoves` = I18nKey("savingMoves")
  val `savingMovesHelp` = I18nKey("savingMovesHelp")
  val `makeAStudy` = I18nKey("makeAStudy")
  val `clearSavedMoves` = I18nKey("clearSavedMoves")
  val `previouslyOnLichessTV` = I18nKey("previouslyOnLichessTV")
  val `onlinePlayers` = I18nKey("onlinePlayers")
  val `activePlayers` = I18nKey("activePlayers")
  val `bewareTheGameIsRatedButHasNoClock` = I18nKey("bewareTheGameIsRatedButHasNoClock")
  val `success` = I18nKey("success")
  val `automaticallyProceedToNextGameAfterMoving` = I18nKey("automaticallyProceedToNextGameAfterMoving")
  val `autoSwitch` = I18nKey("autoSwitch")
  val `puzzles` = I18nKey("puzzles")
  val `tournamentWinners` = I18nKey("tournamentWinners")
  val `name` = I18nKey("name")
  val `description` = I18nKey("description")
  val `descPrivate` = I18nKey("descPrivate")
  val `descPrivateHelp` = I18nKey("descPrivateHelp")
  val `no` = I18nKey("no")
  val `yes` = I18nKey("yes")
  val `help` = I18nKey("help")
  val `createANewTopic` = I18nKey("createANewTopic")
  val `topics` = I18nKey("topics")
  val `posts` = I18nKey("posts")
  val `lastPost` = I18nKey("lastPost")
  val `views` = I18nKey("views")
  val `replies` = I18nKey("replies")
  val `replyToThisTopic` = I18nKey("replyToThisTopic")
  val `reply` = I18nKey("reply")
  val `message` = I18nKey("message")
  val `createTheTopic` = I18nKey("createTheTopic")
  val `reportAUser` = I18nKey("reportAUser")
  val `user` = I18nKey("user")
  val `reason` = I18nKey("reason")
  val `whatIsIheMatter` = I18nKey("whatIsIheMatter")
  val `cheat` = I18nKey("cheat")
  val `insult` = I18nKey("insult")
  val `troll` = I18nKey("troll")
  val `ratingManipulation` = I18nKey("ratingManipulation")
  val `other` = I18nKey("other")
  val `reportDescriptionHelp` = I18nKey("reportDescriptionHelp")
  val `error.provideOneCheatedGameLink` = I18nKey("error.provideOneCheatedGameLink")
  val `by` = I18nKey("by")
  val `importedByX` = I18nKey("importedByX")
  val `thisTopicIsNowClosed` = I18nKey("thisTopicIsNowClosed")
  val `blog` = I18nKey("blog")
  val `notes` = I18nKey("notes")
  val `typePrivateNotesHere` = I18nKey("typePrivateNotesHere")
  val `writeAPrivateNoteAboutThisUser` = I18nKey("writeAPrivateNoteAboutThisUser")
  val `noNoteYet` = I18nKey("noNoteYet")
  val `invalidUsernameOrPassword` = I18nKey("invalidUsernameOrPassword")
  val `incorrectPassword` = I18nKey("incorrectPassword")
  val `invalidAuthenticationCode` = I18nKey("invalidAuthenticationCode")
  val `emailMeALink` = I18nKey("emailMeALink")
  val `currentPassword` = I18nKey("currentPassword")
  val `newPassword` = I18nKey("newPassword")
  val `newPasswordAgain` = I18nKey("newPasswordAgain")
  val `newPasswordsDontMatch` = I18nKey("newPasswordsDontMatch")
  val `newPasswordStrength` = I18nKey("newPasswordStrength")
  val `clockInitialTime` = I18nKey("clockInitialTime")
  val `clockIncrement` = I18nKey("clockIncrement")
  val `privacy` = I18nKey("privacy")
  val `privacyPolicy` = I18nKey("privacyPolicy")
  val `letOtherPlayersFollowYou` = I18nKey("letOtherPlayersFollowYou")
  val `letOtherPlayersChallengeYou` = I18nKey("letOtherPlayersChallengeYou")
  val `letOtherPlayersInviteYouToStudy` = I18nKey("letOtherPlayersInviteYouToStudy")
  val `sound` = I18nKey("sound")
  val `none` = I18nKey("none")
  val `fast` = I18nKey("fast")
  val `normal` = I18nKey("normal")
  val `slow` = I18nKey("slow")
  val `insideTheBoard` = I18nKey("insideTheBoard")
  val `outsideTheBoard` = I18nKey("outsideTheBoard")
  val `onSlowGames` = I18nKey("onSlowGames")
  val `always` = I18nKey("always")
  val `never` = I18nKey("never")
  val `xCompetesInY` = I18nKey("xCompetesInY")
  val `victory` = I18nKey("victory")
  val `defeat` = I18nKey("defeat")
  val `victoryVsYInZ` = I18nKey("victoryVsYInZ")
  val `defeatVsYInZ` = I18nKey("defeatVsYInZ")
  val `drawVsYInZ` = I18nKey("drawVsYInZ")
  val `timeline` = I18nKey("timeline")
  val `starting` = I18nKey("starting")
  val `allInformationIsPublicAndOptional` = I18nKey("allInformationIsPublicAndOptional")
  val `biographyDescription` = I18nKey("biographyDescription")
  val `listBlockedPlayers` = I18nKey("listBlockedPlayers")
  val `human` = I18nKey("human")
  val `computer` = I18nKey("computer")
  val `side` = I18nKey("side")
  val `clock` = I18nKey("clock")
  val `opponent` = I18nKey("opponent")
  val `learnMenu` = I18nKey("learnMenu")
  val `studyMenu` = I18nKey("studyMenu")
  val `practice` = I18nKey("practice")
  val `community` = I18nKey("community")
  val `tools` = I18nKey("tools")
  val `increment` = I18nKey("increment")
  val `error.unknown` = I18nKey("error.unknown")
  val `error.required` = I18nKey("error.required")
  val `error.email` = I18nKey("error.email")
  val `error.email_acceptable` = I18nKey("error.email_acceptable")
  val `error.email_unique` = I18nKey("error.email_unique")
  val `error.email_different` = I18nKey("error.email_different")
  val `error.minLength` = I18nKey("error.minLength")
  val `error.maxLength` = I18nKey("error.maxLength")
  val `error.min` = I18nKey("error.min")
  val `error.max` = I18nKey("error.max")
  val `ifRatingIsPlusMinusX` = I18nKey("ifRatingIsPlusMinusX")
  val `ifRegistered` = I18nKey("ifRegistered")
  val `onlyExistingConversations` = I18nKey("onlyExistingConversations")
  val `onlyFriends` = I18nKey("onlyFriends")
  val `menu` = I18nKey("menu")
  val `castling` = I18nKey("castling")
  val `whiteCastlingKingside` = I18nKey("whiteCastlingKingside")
  val `blackCastlingKingside` = I18nKey("blackCastlingKingside")
  val `tpTimeSpentPlaying` = I18nKey("tpTimeSpentPlaying")
  val `watchGames` = I18nKey("watchGames")
  val `tpTimeSpentOnTV` = I18nKey("tpTimeSpentOnTV")
  val `watch` = I18nKey("watch")
  val `videoLibrary` = I18nKey("videoLibrary")
  val `streamersMenu` = I18nKey("streamersMenu")
  val `mobileApp` = I18nKey("mobileApp")
  val `webmasters` = I18nKey("webmasters")
  val `about` = I18nKey("about")
  val `aboutX` = I18nKey("aboutX")
  val `xIsAFreeYLibreOpenSourceChessServer` = I18nKey("xIsAFreeYLibreOpenSourceChessServer")
  val `really` = I18nKey("really")
  val `contribute` = I18nKey("contribute")
  val `termsOfService` = I18nKey("termsOfService")
  val `sourceCode` = I18nKey("sourceCode")
  val `simultaneousExhibitions` = I18nKey("simultaneousExhibitions")
  val `host` = I18nKey("host")
  val `hostColorX` = I18nKey("hostColorX")
  val `createdSimuls` = I18nKey("createdSimuls")
  val `hostANewSimul` = I18nKey("hostANewSimul")
  val `noSimulFound` = I18nKey("noSimulFound")
  val `noSimulExplanation` = I18nKey("noSimulExplanation")
  val `returnToSimulHomepage` = I18nKey("returnToSimulHomepage")
  val `aboutSimul` = I18nKey("aboutSimul")
  val `aboutSimulImage` = I18nKey("aboutSimulImage")
  val `aboutSimulRealLife` = I18nKey("aboutSimulRealLife")
  val `aboutSimulRules` = I18nKey("aboutSimulRules")
  val `aboutSimulSettings` = I18nKey("aboutSimulSettings")
  val `create` = I18nKey("create")
  val `whenCreateSimul` = I18nKey("whenCreateSimul")
  val `simulVariantsHint` = I18nKey("simulVariantsHint")
  val `simulClockHint` = I18nKey("simulClockHint")
  val `simulAddExtraTime` = I18nKey("simulAddExtraTime")
  val `simulHostExtraTime` = I18nKey("simulHostExtraTime")
  val `simulAddExtraTimePerPlayer` = I18nKey("simulAddExtraTimePerPlayer")
  val `simulHostExtraTimePerPlayer` = I18nKey("simulHostExtraTimePerPlayer")
  val `lichessTournaments` = I18nKey("lichessTournaments")
  val `tournamentFAQ` = I18nKey("tournamentFAQ")
  val `timeBeforeTournamentStarts` = I18nKey("timeBeforeTournamentStarts")
  val `averageCentipawnLoss` = I18nKey("averageCentipawnLoss")
  val `accuracy` = I18nKey("accuracy")
  val `keyboardShortcuts` = I18nKey("keyboardShortcuts")
  val `keyMoveBackwardOrForward` = I18nKey("keyMoveBackwardOrForward")
  val `keyGoToStartOrEnd` = I18nKey("keyGoToStartOrEnd")
  val `keyShowOrHideComments` = I18nKey("keyShowOrHideComments")
  val `keyEnterOrExitVariation` = I18nKey("keyEnterOrExitVariation")
  val `keyRequestComputerAnalysis` = I18nKey("keyRequestComputerAnalysis")
  val `keyNextLearnFromYourMistakes` = I18nKey("keyNextLearnFromYourMistakes")
  val `keyNextBlunder` = I18nKey("keyNextBlunder")
  val `keyNextMistake` = I18nKey("keyNextMistake")
  val `keyNextInaccuracy` = I18nKey("keyNextInaccuracy")
  val `newTournament` = I18nKey("newTournament")
  val `tournamentHomeTitle` = I18nKey("tournamentHomeTitle")
  val `tournamentHomeDescription` = I18nKey("tournamentHomeDescription")
  val `tournamentNotFound` = I18nKey("tournamentNotFound")
  val `tournamentDoesNotExist` = I18nKey("tournamentDoesNotExist")
  val `tournamentMayHaveBeenCanceled` = I18nKey("tournamentMayHaveBeenCanceled")
  val `returnToTournamentsHomepage` = I18nKey("returnToTournamentsHomepage")
  val `weeklyPerfTypeRatingDistribution` = I18nKey("weeklyPerfTypeRatingDistribution")
  val `yourPerfTypeRatingIsRating` = I18nKey("yourPerfTypeRatingIsRating")
  val `youAreBetterThanPercentOfPerfTypePlayers` = I18nKey("youAreBetterThanPercentOfPerfTypePlayers")
  val `userIsBetterThanPercentOfPerfTypePlayers` = I18nKey("userIsBetterThanPercentOfPerfTypePlayers")
  val `youDoNotHaveAnEstablishedPerfTypeRating` = I18nKey("youDoNotHaveAnEstablishedPerfTypeRating")
  val `yourRating` = I18nKey("yourRating")
  val `cumulative` = I18nKey("cumulative")
  val `glicko2Rating` = I18nKey("glicko2Rating")
  val `checkYourEmail` = I18nKey("checkYourEmail")
  val `weHaveSentYouAnEmailClickTheLink` = I18nKey("weHaveSentYouAnEmailClickTheLink")
  val `ifYouDoNotSeeTheEmailCheckOtherPlaces` = I18nKey("ifYouDoNotSeeTheEmailCheckOtherPlaces")
  val `weHaveSentYouAnEmailTo` = I18nKey("weHaveSentYouAnEmailTo")
  val `byRegisteringYouAgreeToBeBoundByOur` = I18nKey("byRegisteringYouAgreeToBeBoundByOur")
  val `readAboutOur` = I18nKey("readAboutOur")
  val `networkLagBetweenYouAndLichess` = I18nKey("networkLagBetweenYouAndLichess")
  val `timeToProcessAMoveOnLichessServer` = I18nKey("timeToProcessAMoveOnLichessServer")
  val `downloadAnnotated` = I18nKey("downloadAnnotated")
  val `downloadRaw` = I18nKey("downloadRaw")
  val `downloadImported` = I18nKey("downloadImported")
  val `crosstable` = I18nKey("crosstable")
  val `youCanAlsoScrollOverTheBoardToMoveInTheGame` = I18nKey("youCanAlsoScrollOverTheBoardToMoveInTheGame")
  val `scrollOverComputerVariationsToPreviewThem` = I18nKey("scrollOverComputerVariationsToPreviewThem")
  val `analysisShapesHowTo` = I18nKey("analysisShapesHowTo")
  val `letOtherPlayersMessageYou` = I18nKey("letOtherPlayersMessageYou")
  val `receiveForumNotifications` = I18nKey("receiveForumNotifications")
  val `shareYourInsightsData` = I18nKey("shareYourInsightsData")
  val `withNobody` = I18nKey("withNobody")
  val `withFriends` = I18nKey("withFriends")
  val `withEverybody` = I18nKey("withEverybody")
  val `kidMode` = I18nKey("kidMode")
  val `kidModeExplanation` = I18nKey("kidModeExplanation")
  val `inKidModeTheLichessLogoGetsIconX` = I18nKey("inKidModeTheLichessLogoGetsIconX")
  val `askYourChessTeacherAboutLiftingKidMode` = I18nKey("askYourChessTeacherAboutLiftingKidMode")
  val `enableKidMode` = I18nKey("enableKidMode")
  val `disableKidMode` = I18nKey("disableKidMode")
  val `security` = I18nKey("security")
  val `sessions` = I18nKey("sessions")
  val `revokeAllSessions` = I18nKey("revokeAllSessions")
  val `playChessEverywhere` = I18nKey("playChessEverywhere")
  val `asFreeAsLichess` = I18nKey("asFreeAsLichess")
  val `builtForTheLoveOfChessNotMoney` = I18nKey("builtForTheLoveOfChessNotMoney")
  val `everybodyGetsAllFeaturesForFree` = I18nKey("everybodyGetsAllFeaturesForFree")
  val `zeroAdvertisement` = I18nKey("zeroAdvertisement")
  val `fullFeatured` = I18nKey("fullFeatured")
  val `phoneAndTablet` = I18nKey("phoneAndTablet")
  val `bulletBlitzClassical` = I18nKey("bulletBlitzClassical")
  val `correspondenceChess` = I18nKey("correspondenceChess")
  val `onlineAndOfflinePlay` = I18nKey("onlineAndOfflinePlay")
  val `viewTheSolution` = I18nKey("viewTheSolution")
  val `followAndChallengeFriends` = I18nKey("followAndChallengeFriends")
  val `gameAnalysis` = I18nKey("gameAnalysis")
  val `xHostsY` = I18nKey("xHostsY")
  val `xJoinsY` = I18nKey("xJoinsY")
  val `xLikesY` = I18nKey("xLikesY")
  val `quickPairing` = I18nKey("quickPairing")
  val `lobby` = I18nKey("lobby")
  val `anonymous` = I18nKey("anonymous")
  val `yourScore` = I18nKey("yourScore")
  val `language` = I18nKey("language")
  val `background` = I18nKey("background")
  val `light` = I18nKey("light")
  val `dark` = I18nKey("dark")
  val `transparent` = I18nKey("transparent")
  val `deviceTheme` = I18nKey("deviceTheme")
  val `backgroundImageUrl` = I18nKey("backgroundImageUrl")
  val `boardGeometry` = I18nKey("boardGeometry")
  val `boardTheme` = I18nKey("boardTheme")
  val `boardSize` = I18nKey("boardSize")
  val `pieceSet` = I18nKey("pieceSet")
  val `embedInYourWebsite` = I18nKey("embedInYourWebsite")
  val `usernameAlreadyUsed` = I18nKey("usernameAlreadyUsed")
  val `usernamePrefixInvalid` = I18nKey("usernamePrefixInvalid")
  val `usernameSuffixInvalid` = I18nKey("usernameSuffixInvalid")
  val `usernameCharsInvalid` = I18nKey("usernameCharsInvalid")
  val `usernameUnacceptable` = I18nKey("usernameUnacceptable")
  val `playChessInStyle` = I18nKey("playChessInStyle")
  val `chessBasics` = I18nKey("chessBasics")
  val `coaches` = I18nKey("coaches")
  val `invalidPgn` = I18nKey("invalidPgn")
  val `invalidFen` = I18nKey("invalidFen")
  val `custom` = I18nKey("custom")
  val `notifications` = I18nKey("notifications")
  val `notificationsX` = I18nKey("notificationsX")
  val `perfRatingX` = I18nKey("perfRatingX")
  val `practiceWithComputer` = I18nKey("practiceWithComputer")
  val `anotherWasX` = I18nKey("anotherWasX")
  val `bestWasX` = I18nKey("bestWasX")
  val `youBrowsedAway` = I18nKey("youBrowsedAway")
  val `resumePractice` = I18nKey("resumePractice")
  val `drawByFiftyMoves` = I18nKey("drawByFiftyMoves")
  val `theGameIsADraw` = I18nKey("theGameIsADraw")
  val `computerThinking` = I18nKey("computerThinking")
  val `seeBestMove` = I18nKey("seeBestMove")
  val `hideBestMove` = I18nKey("hideBestMove")
  val `getAHint` = I18nKey("getAHint")
  val `evaluatingYourMove` = I18nKey("evaluatingYourMove")
  val `whiteWinsGame` = I18nKey("whiteWinsGame")
  val `blackWinsGame` = I18nKey("blackWinsGame")
  val `learnFromYourMistakes` = I18nKey("learnFromYourMistakes")
  val `learnFromThisMistake` = I18nKey("learnFromThisMistake")
  val `skipThisMove` = I18nKey("skipThisMove")
  val `next` = I18nKey("next")
  val `xWasPlayed` = I18nKey("xWasPlayed")
  val `findBetterMoveForWhite` = I18nKey("findBetterMoveForWhite")
  val `findBetterMoveForBlack` = I18nKey("findBetterMoveForBlack")
  val `resumeLearning` = I18nKey("resumeLearning")
  val `youCanDoBetter` = I18nKey("youCanDoBetter")
  val `tryAnotherMoveForWhite` = I18nKey("tryAnotherMoveForWhite")
  val `tryAnotherMoveForBlack` = I18nKey("tryAnotherMoveForBlack")
  val `solution` = I18nKey("solution")
  val `waitingForAnalysis` = I18nKey("waitingForAnalysis")
  val `noMistakesFoundForWhite` = I18nKey("noMistakesFoundForWhite")
  val `noMistakesFoundForBlack` = I18nKey("noMistakesFoundForBlack")
  val `doneReviewingWhiteMistakes` = I18nKey("doneReviewingWhiteMistakes")
  val `doneReviewingBlackMistakes` = I18nKey("doneReviewingBlackMistakes")
  val `doItAgain` = I18nKey("doItAgain")
  val `reviewWhiteMistakes` = I18nKey("reviewWhiteMistakes")
  val `reviewBlackMistakes` = I18nKey("reviewBlackMistakes")
  val `advantage` = I18nKey("advantage")
  val `opening` = I18nKey("opening")
  val `middlegame` = I18nKey("middlegame")
  val `endgame` = I18nKey("endgame")
  val `conditionalPremoves` = I18nKey("conditionalPremoves")
  val `addCurrentVariation` = I18nKey("addCurrentVariation")
  val `playVariationToCreateConditionalPremoves` = I18nKey("playVariationToCreateConditionalPremoves")
  val `noConditionalPremoves` = I18nKey("noConditionalPremoves")
  val `playX` = I18nKey("playX")
  val `sorry` = I18nKey("sorry")
  val `weHadToTimeYouOutForAWhile` = I18nKey("weHadToTimeYouOutForAWhile")
  val `timeoutExpires` = I18nKey("timeoutExpires")
  val `why` = I18nKey("why")
  val `pleasantChessExperience` = I18nKey("pleasantChessExperience")
  val `goodPractice` = I18nKey("goodPractice")
  val `potentialProblem` = I18nKey("potentialProblem")
  val `howToAvoidThis` = I18nKey("howToAvoidThis")
  val `playEveryGame` = I18nKey("playEveryGame")
  val `tryToWin` = I18nKey("tryToWin")
  val `resignLostGames` = I18nKey("resignLostGames")
  val `temporaryInconvenience` = I18nKey("temporaryInconvenience")
  val `wishYouGreatGames` = I18nKey("wishYouGreatGames")
  val `thankYouForReading` = I18nKey("thankYouForReading")
  val `lifetimeScore` = I18nKey("lifetimeScore")
  val `currentMatchScore` = I18nKey("currentMatchScore")
  val `agreementAssistance` = I18nKey("agreementAssistance")
  val `agreementNice` = I18nKey("agreementNice")
  val `agreementMultipleAccounts` = I18nKey("agreementMultipleAccounts")
  val `agreementPolicy` = I18nKey("agreementPolicy")
  val `searchOrStartNewDiscussion` = I18nKey("searchOrStartNewDiscussion")
  val `edit` = I18nKey("edit")
  val `rapid` = I18nKey("rapid")
  val `classical` = I18nKey("classical")
  val `ultraBulletDesc` = I18nKey("ultraBulletDesc")
  val `bulletDesc` = I18nKey("bulletDesc")
  val `blitzDesc` = I18nKey("blitzDesc")
  val `rapidDesc` = I18nKey("rapidDesc")
  val `classicalDesc` = I18nKey("classicalDesc")
  val `correspondenceDesc` = I18nKey("correspondenceDesc")
  val `puzzleDesc` = I18nKey("puzzleDesc")
  val `important` = I18nKey("important")
  val `yourQuestionMayHaveBeenAnswered` = I18nKey("yourQuestionMayHaveBeenAnswered")
  val `inTheFAQ` = I18nKey("inTheFAQ")
  val `toReportSomeoneForCheatingOrBadBehavior` = I18nKey("toReportSomeoneForCheatingOrBadBehavior")
  val `useTheReportForm` = I18nKey("useTheReportForm")
  val `toRequestSupport` = I18nKey("toRequestSupport")
  val `tryTheContactPage` = I18nKey("tryTheContactPage")
  val `makeSureToRead` = I18nKey("makeSureToRead")
  val `theForumEtiquette` = I18nKey("theForumEtiquette")
  val `thisTopicIsArchived` = I18nKey("thisTopicIsArchived")
  val `joinTheTeamXToPost` = I18nKey("joinTheTeamXToPost")
  val `teamNamedX` = I18nKey("teamNamedX")
  val `youCannotPostYetPlaySomeGames` = I18nKey("youCannotPostYetPlaySomeGames")
  val `subscribe` = I18nKey("subscribe")
  val `unsubscribe` = I18nKey("unsubscribe")
  val `mentionedYouInX` = I18nKey("mentionedYouInX")
  val `xMentionedYouInY` = I18nKey("xMentionedYouInY")
  val `invitedYouToX` = I18nKey("invitedYouToX")
  val `xInvitedYouToY` = I18nKey("xInvitedYouToY")
  val `youAreNowPartOfTeam` = I18nKey("youAreNowPartOfTeam")
  val `youHaveJoinedTeamX` = I18nKey("youHaveJoinedTeamX")
  val `someoneYouReportedWasBanned` = I18nKey("someoneYouReportedWasBanned")
  val `congratsYouWon` = I18nKey("congratsYouWon")
  val `gameVsX` = I18nKey("gameVsX")
  val `resVsX` = I18nKey("resVsX")
  val `lostAgainstTOSViolator` = I18nKey("lostAgainstTOSViolator")
  val `refundXpointsTimeControlY` = I18nKey("refundXpointsTimeControlY")
  val `timeAlmostUp` = I18nKey("timeAlmostUp")
  val `clickToRevealEmailAddress` = I18nKey("clickToRevealEmailAddress")
  val `download` = I18nKey("download")
  val `welcome` = I18nKey("welcome")
  val `lichessPatronInfo` = I18nKey("lichessPatronInfo")
  val `coachManager` = I18nKey("coachManager")
  val `streamerManager` = I18nKey("streamerManager")
  val `cancelTournament` = I18nKey("cancelTournament")
  val `tournDescription` = I18nKey("tournDescription")
  val `tournDescriptionHelp` = I18nKey("tournDescriptionHelp")
  val `ratedFormHelp` = I18nKey("ratedFormHelp")
  val `onlyMembersOfTeam` = I18nKey("onlyMembersOfTeam")
  val `noRestriction` = I18nKey("noRestriction")
  val `minimumRatedGames` = I18nKey("minimumRatedGames")
  val `minimumRating` = I18nKey("minimumRating")
  val `maximumWeeklyRating` = I18nKey("maximumWeeklyRating")
  val `onlyTitled` = I18nKey("onlyTitled")
  val `onlyTitledHelp` = I18nKey("onlyTitledHelp")
  val `positionInputHelp` = I18nKey("positionInputHelp")
  val `cancelSimul` = I18nKey("cancelSimul")
  val `simulHostcolor` = I18nKey("simulHostcolor")
  val `estimatedStart` = I18nKey("estimatedStart")
  val `simulFeatured` = I18nKey("simulFeatured")
  val `simulFeaturedHelp` = I18nKey("simulFeaturedHelp")
  val `simulDescription` = I18nKey("simulDescription")
  val `simulDescriptionHelp` = I18nKey("simulDescriptionHelp")
  val `markdownAvailable` = I18nKey("markdownAvailable")
  val `embedsAvailable` = I18nKey("embedsAvailable")
  val `inYourLocalTimezone` = I18nKey("inYourLocalTimezone")
  val `tournChat` = I18nKey("tournChat")
  val `noChat` = I18nKey("noChat")
  val `onlyTeamLeaders` = I18nKey("onlyTeamLeaders")
  val `onlyTeamMembers` = I18nKey("onlyTeamMembers")
  val `navigateMoveTree` = I18nKey("navigateMoveTree")
  val `mouseTricks` = I18nKey("mouseTricks")
  val `toggleLocalAnalysis` = I18nKey("toggleLocalAnalysis")
  val `toggleAllAnalysis` = I18nKey("toggleAllAnalysis")
  val `playComputerMove` = I18nKey("playComputerMove")
  val `analysisOptions` = I18nKey("analysisOptions")
  val `focusChat` = I18nKey("focusChat")
  val `showHelpDialog` = I18nKey("showHelpDialog")
  val `reopenYourAccount` = I18nKey("reopenYourAccount")
  val `closedAccountChangedMind` = I18nKey("closedAccountChangedMind")
  val `onlyWorksOnce` = I18nKey("onlyWorksOnce")
  val `cantDoThisTwice` = I18nKey("cantDoThisTwice")
  val `emailAssociatedToaccount` = I18nKey("emailAssociatedToaccount")
  val `sentEmailWithLink` = I18nKey("sentEmailWithLink")
  val `tournamentEntryCode` = I18nKey("tournamentEntryCode")
  val `hangOn` = I18nKey("hangOn")
  val `gameInProgress` = I18nKey("gameInProgress")
  val `abortTheGame` = I18nKey("abortTheGame")
  val `resignTheGame` = I18nKey("resignTheGame")
  val `youCantStartNewGame` = I18nKey("youCantStartNewGame")
  val `since` = I18nKey("since")
  val `until` = I18nKey("until")
  val `lichessDbExplanation` = I18nKey("lichessDbExplanation")
  val `switchSides` = I18nKey("switchSides")
  val `closingAccountWithdrawAppeal` = I18nKey("closingAccountWithdrawAppeal")
  val `ourEventTips` = I18nKey("ourEventTips")
  val `opponentLeftCounter` = I18nKey("opponentLeftCounter")
  val `mateInXHalfMoves` = I18nKey("mateInXHalfMoves")
  val `nbBlunders` = I18nKey("nbBlunders")
  val `nbMistakes` = I18nKey("nbMistakes")
  val `nbInaccuracies` = I18nKey("nbInaccuracies")
  val `nbPlayers` = I18nKey("nbPlayers")
  val `nbGames` = I18nKey("nbGames")
  val `ratingXOverYGames` = I18nKey("ratingXOverYGames")
  val `nbBookmarks` = I18nKey("nbBookmarks")
  val `nbDays` = I18nKey("nbDays")
  val `nbHours` = I18nKey("nbHours")
  val `nbMinutes` = I18nKey("nbMinutes")
  val `rankIsUpdatedEveryNbMinutes` = I18nKey("rankIsUpdatedEveryNbMinutes")
  val `nbPuzzles` = I18nKey("nbPuzzles")
  val `nbGamesWithYou` = I18nKey("nbGamesWithYou")
  val `nbRated` = I18nKey("nbRated")
  val `nbWins` = I18nKey("nbWins")
  val `nbLosses` = I18nKey("nbLosses")
  val `nbDraws` = I18nKey("nbDraws")
  val `nbPlaying` = I18nKey("nbPlaying")
  val `giveNbSeconds` = I18nKey("giveNbSeconds")
  val `nbTournamentPoints` = I18nKey("nbTournamentPoints")
  val `nbStudies` = I18nKey("nbStudies")
  val `nbSimuls` = I18nKey("nbSimuls")
  val `moreThanNbRatedGames` = I18nKey("moreThanNbRatedGames")
  val `moreThanNbPerfRatedGames` = I18nKey("moreThanNbPerfRatedGames")
  val `needNbMorePerfGames` = I18nKey("needNbMorePerfGames")
  val `needNbMoreGames` = I18nKey("needNbMoreGames")
  val `nbImportedGames` = I18nKey("nbImportedGames")
  val `nbFriendsOnline` = I18nKey("nbFriendsOnline")
  val `nbFollowers` = I18nKey("nbFollowers")
  val `nbFollowing` = I18nKey("nbFollowing")
  val `lessThanNbMinutes` = I18nKey("lessThanNbMinutes")
  val `nbGamesInPlay` = I18nKey("nbGamesInPlay")
  val `maximumNbCharacters` = I18nKey("maximumNbCharacters")
  val `blocks` = I18nKey("blocks")
  val `nbForumPosts` = I18nKey("nbForumPosts")
  val `nbPerfTypePlayersThisWeek` = I18nKey("nbPerfTypePlayersThisWeek")
  val `availableInNbLanguages` = I18nKey("availableInNbLanguages")
  val `nbSecondsToPlayTheFirstMove` = I18nKey("nbSecondsToPlayTheFirstMove")
  val `nbSeconds` = I18nKey("nbSeconds")
  val `andSaveNbPremoveLines` = I18nKey("andSaveNbPremoveLines")

  object arena:
    val `arenaTournaments` = I18nKey("arena:arenaTournaments")
    val `isItRated` = I18nKey("arena:isItRated")
    val `willBeNotified` = I18nKey("arena:willBeNotified")
    val `isRated` = I18nKey("arena:isRated")
    val `isNotRated` = I18nKey("arena:isNotRated")
    val `someRated` = I18nKey("arena:someRated")
    val `howAreScoresCalculated` = I18nKey("arena:howAreScoresCalculated")
    val `howAreScoresCalculatedAnswer` = I18nKey("arena:howAreScoresCalculatedAnswer")
    val `berserk` = I18nKey("arena:berserk")
    val `berserkAnswer` = I18nKey("arena:berserkAnswer")
    val `howIsTheWinnerDecided` = I18nKey("arena:howIsTheWinnerDecided")
    val `howIsTheWinnerDecidedAnswer` = I18nKey("arena:howIsTheWinnerDecidedAnswer")
    val `howDoesPairingWork` = I18nKey("arena:howDoesPairingWork")
    val `howDoesPairingWorkAnswer` = I18nKey("arena:howDoesPairingWorkAnswer")
    val `howDoesItEnd` = I18nKey("arena:howDoesItEnd")
    val `howDoesItEndAnswer` = I18nKey("arena:howDoesItEndAnswer")
    val `otherRules` = I18nKey("arena:otherRules")
    val `thereIsACountdown` = I18nKey("arena:thereIsACountdown")
    val `thisIsPrivate` = I18nKey("arena:thisIsPrivate")
    val `shareUrl` = I18nKey("arena:shareUrl")
    val `drawStreakStandard` = I18nKey("arena:drawStreakStandard")
    val `drawStreakVariants` = I18nKey("arena:drawStreakVariants")
    val `variant` = I18nKey("arena:variant")
    val `minimumGameLength` = I18nKey("arena:minimumGameLength")
    val `history` = I18nKey("arena:history")
    val `newTeamBattle` = I18nKey("arena:newTeamBattle")
    val `customStartDate` = I18nKey("arena:customStartDate")
    val `customStartDateHelp` = I18nKey("arena:customStartDateHelp")
    val `allowBerserk` = I18nKey("arena:allowBerserk")
    val `allowBerserkHelp` = I18nKey("arena:allowBerserkHelp")
    val `allowChatHelp` = I18nKey("arena:allowChatHelp")
    val `arenaStreaks` = I18nKey("arena:arenaStreaks")
    val `arenaStreaksHelp` = I18nKey("arena:arenaStreaksHelp")
    val `noBerserkAllowed` = I18nKey("arena:noBerserkAllowed")
    val `noArenaStreaks` = I18nKey("arena:noArenaStreaks")
    val `averagePerformance` = I18nKey("arena:averagePerformance")
    val `averageScore` = I18nKey("arena:averageScore")
    val `myTournaments` = I18nKey("arena:myTournaments")
    val `drawingWithinNbMoves` = I18nKey("arena:drawingWithinNbMoves")
    val `viewAllXTeams` = I18nKey("arena:viewAllXTeams")

  object emails:
    val `emailConfirm_subject` = I18nKey("emails:emailConfirm_subject")
    val `emailConfirm_click` = I18nKey("emails:emailConfirm_click")
    val `emailConfirm_ignore` = I18nKey("emails:emailConfirm_ignore")
    val `passwordReset_subject` = I18nKey("emails:passwordReset_subject")
    val `passwordReset_intro` = I18nKey("emails:passwordReset_intro")
    val `passwordReset_clickOrIgnore` = I18nKey("emails:passwordReset_clickOrIgnore")
    val `emailChange_subject` = I18nKey("emails:emailChange_subject")
    val `emailChange_intro` = I18nKey("emails:emailChange_intro")
    val `emailChange_click` = I18nKey("emails:emailChange_click")
    val `welcome_subject` = I18nKey("emails:welcome_subject")
    val `welcome_text` = I18nKey("emails:welcome_text")
    val `logInToLichess` = I18nKey("emails:logInToLichess")
    val `common_orPaste` = I18nKey("emails:common_orPaste")
    val `common_note` = I18nKey("emails:common_note")
    val `common_contact` = I18nKey("emails:common_contact")

  object learn:
    val `learnChess` = I18nKey("learn:learnChess")
    val `byPlaying` = I18nKey("learn:byPlaying")
    val `menu` = I18nKey("learn:menu")
    val `progressX` = I18nKey("learn:progressX")
    val `resetMyProgress` = I18nKey("learn:resetMyProgress")
    val `youWillLoseAllYourProgress` = I18nKey("learn:youWillLoseAllYourProgress")
    val `play` = I18nKey("learn:play")
    val `chessPieces` = I18nKey("learn:chessPieces")
    val `theRook` = I18nKey("learn:theRook")
    val `itMovesInStraightLines` = I18nKey("learn:itMovesInStraightLines")
    val `rookIntro` = I18nKey("learn:rookIntro")
    val `rookGoal` = I18nKey("learn:rookGoal")
    val `grabAllTheStars` = I18nKey("learn:grabAllTheStars")
    val `theFewerMoves` = I18nKey("learn:theFewerMoves")
    val `useTwoRooks` = I18nKey("learn:useTwoRooks")
    val `rookComplete` = I18nKey("learn:rookComplete")
    val `theBishop` = I18nKey("learn:theBishop")
    val `itMovesDiagonally` = I18nKey("learn:itMovesDiagonally")
    val `bishopIntro` = I18nKey("learn:bishopIntro")
    val `youNeedBothBishops` = I18nKey("learn:youNeedBothBishops")
    val `bishopComplete` = I18nKey("learn:bishopComplete")
    val `theQueen` = I18nKey("learn:theQueen")
    val `queenCombinesRookAndBishop` = I18nKey("learn:queenCombinesRookAndBishop")
    val `queenIntro` = I18nKey("learn:queenIntro")
    val `queenComplete` = I18nKey("learn:queenComplete")
    val `theKing` = I18nKey("learn:theKing")
    val `theMostImportantPiece` = I18nKey("learn:theMostImportantPiece")
    val `kingIntro` = I18nKey("learn:kingIntro")
    val `theKingIsSlow` = I18nKey("learn:theKingIsSlow")
    val `lastOne` = I18nKey("learn:lastOne")
    val `kingComplete` = I18nKey("learn:kingComplete")
    val `theKnight` = I18nKey("learn:theKnight")
    val `itMovesInAnLShape` = I18nKey("learn:itMovesInAnLShape")
    val `knightIntro` = I18nKey("learn:knightIntro")
    val `knightsHaveAFancyWay` = I18nKey("learn:knightsHaveAFancyWay")
    val `knightsCanJumpOverObstacles` = I18nKey("learn:knightsCanJumpOverObstacles")
    val `knightComplete` = I18nKey("learn:knightComplete")
    val `thePawn` = I18nKey("learn:thePawn")
    val `itMovesForwardOnly` = I18nKey("learn:itMovesForwardOnly")
    val `pawnIntro` = I18nKey("learn:pawnIntro")
    val `pawnsMoveOneSquareOnly` = I18nKey("learn:pawnsMoveOneSquareOnly")
    val `mostOfTheTimePromotingToAQueenIsBest` = I18nKey("learn:mostOfTheTimePromotingToAQueenIsBest")
    val `pawnsMoveForward` = I18nKey("learn:pawnsMoveForward")
    val `captureThenPromote` = I18nKey("learn:captureThenPromote")
    val `useAllThePawns` = I18nKey("learn:useAllThePawns")
    val `aPawnOnTheSecondRank` = I18nKey("learn:aPawnOnTheSecondRank")
    val `grabAllTheStarsNoNeedToPromote` = I18nKey("learn:grabAllTheStarsNoNeedToPromote")
    val `pawnComplete` = I18nKey("learn:pawnComplete")
    val `pawnPromotion` = I18nKey("learn:pawnPromotion")
    val `yourPawnReachedTheEndOfTheBoard` = I18nKey("learn:yourPawnReachedTheEndOfTheBoard")
    val `itNowPromotesToAStrongerPiece` = I18nKey("learn:itNowPromotesToAStrongerPiece")
    val `selectThePieceYouWant` = I18nKey("learn:selectThePieceYouWant")
    val `fundamentals` = I18nKey("learn:fundamentals")
    val `capture` = I18nKey("learn:capture")
    val `takeTheEnemyPieces` = I18nKey("learn:takeTheEnemyPieces")
    val `captureIntro` = I18nKey("learn:captureIntro")
    val `takeTheBlackPieces` = I18nKey("learn:takeTheBlackPieces")
    val `takeTheBlackPiecesAndDontLoseYours` = I18nKey("learn:takeTheBlackPiecesAndDontLoseYours")
    val `captureComplete` = I18nKey("learn:captureComplete")
    val `protection` = I18nKey("learn:protection")
    val `keepYourPiecesSafe` = I18nKey("learn:keepYourPiecesSafe")
    val `protectionIntro` = I18nKey("learn:protectionIntro")
    val `protectionComplete` = I18nKey("learn:protectionComplete")
    val `escape` = I18nKey("learn:escape")
    val `noEscape` = I18nKey("learn:noEscape")
    val `dontLetThemTakeAnyUndefendedPiece` = I18nKey("learn:dontLetThemTakeAnyUndefendedPiece")
    val `combat` = I18nKey("learn:combat")
    val `captureAndDefendPieces` = I18nKey("learn:captureAndDefendPieces")
    val `combatIntro` = I18nKey("learn:combatIntro")
    val `combatComplete` = I18nKey("learn:combatComplete")
    val `checkInOne` = I18nKey("learn:checkInOne")
    val `attackTheOpponentsKing` = I18nKey("learn:attackTheOpponentsKing")
    val `checkInOneIntro` = I18nKey("learn:checkInOneIntro")
    val `checkInOneGoal` = I18nKey("learn:checkInOneGoal")
    val `checkInOneComplete` = I18nKey("learn:checkInOneComplete")
    val `outOfCheck` = I18nKey("learn:outOfCheck")
    val `defendYourKing` = I18nKey("learn:defendYourKing")
    val `outOfCheckIntro` = I18nKey("learn:outOfCheckIntro")
    val `escapeWithTheKing` = I18nKey("learn:escapeWithTheKing")
    val `theKingCannotEscapeButBlock` = I18nKey("learn:theKingCannotEscapeButBlock")
    val `youCanGetOutOfCheckByTaking` = I18nKey("learn:youCanGetOutOfCheckByTaking")
    val `thisKnightIsCheckingThroughYourDefenses` = I18nKey("learn:thisKnightIsCheckingThroughYourDefenses")
    val `escapeOrBlock` = I18nKey("learn:escapeOrBlock")
    val `outOfCheckComplete` = I18nKey("learn:outOfCheckComplete")
    val `mateInOne` = I18nKey("learn:mateInOne")
    val `defeatTheOpponentsKing` = I18nKey("learn:defeatTheOpponentsKing")
    val `mateInOneIntro` = I18nKey("learn:mateInOneIntro")
    val `attackYourOpponentsKing` = I18nKey("learn:attackYourOpponentsKing")
    val `mateInOneComplete` = I18nKey("learn:mateInOneComplete")
    val `intermediate` = I18nKey("learn:intermediate")
    val `boardSetup` = I18nKey("learn:boardSetup")
    val `howTheGameStarts` = I18nKey("learn:howTheGameStarts")
    val `boardSetupIntro` = I18nKey("learn:boardSetupIntro")
    val `thisIsTheInitialPosition` = I18nKey("learn:thisIsTheInitialPosition")
    val `firstPlaceTheRooks` = I18nKey("learn:firstPlaceTheRooks")
    val `thenPlaceTheKnights` = I18nKey("learn:thenPlaceTheKnights")
    val `placeTheBishops` = I18nKey("learn:placeTheBishops")
    val `placeTheQueen` = I18nKey("learn:placeTheQueen")
    val `placeTheKing` = I18nKey("learn:placeTheKing")
    val `pawnsFormTheFrontLine` = I18nKey("learn:pawnsFormTheFrontLine")
    val `boardSetupComplete` = I18nKey("learn:boardSetupComplete")
    val `castling` = I18nKey("learn:castling")
    val `theSpecialKingMove` = I18nKey("learn:theSpecialKingMove")
    val `castlingIntro` = I18nKey("learn:castlingIntro")
    val `castleKingSide` = I18nKey("learn:castleKingSide")
    val `castleQueenSide` = I18nKey("learn:castleQueenSide")
    val `theKnightIsInTheWay` = I18nKey("learn:theKnightIsInTheWay")
    val `castleKingSideMovePiecesFirst` = I18nKey("learn:castleKingSideMovePiecesFirst")
    val `castleQueenSideMovePiecesFirst` = I18nKey("learn:castleQueenSideMovePiecesFirst")
    val `youCannotCastleIfMoved` = I18nKey("learn:youCannotCastleIfMoved")
    val `youCannotCastleIfAttacked` = I18nKey("learn:youCannotCastleIfAttacked")
    val `findAWayToCastleKingSide` = I18nKey("learn:findAWayToCastleKingSide")
    val `findAWayToCastleQueenSide` = I18nKey("learn:findAWayToCastleQueenSide")
    val `castlingComplete` = I18nKey("learn:castlingComplete")
    val `enPassant` = I18nKey("learn:enPassant")
    val `theSpecialPawnMove` = I18nKey("learn:theSpecialPawnMove")
    val `enPassantIntro` = I18nKey("learn:enPassantIntro")
    val `blackJustMovedThePawnByTwoSquares` = I18nKey("learn:blackJustMovedThePawnByTwoSquares")
    val `enPassantOnlyWorksImmediately` = I18nKey("learn:enPassantOnlyWorksImmediately")
    val `enPassantOnlyWorksOnFifthRank` = I18nKey("learn:enPassantOnlyWorksOnFifthRank")
    val `takeAllThePawnsEnPassant` = I18nKey("learn:takeAllThePawnsEnPassant")
    val `enPassantComplete` = I18nKey("learn:enPassantComplete")
    val `stalemate` = I18nKey("learn:stalemate")
    val `theGameIsADraw` = I18nKey("learn:theGameIsADraw")
    val `stalemateIntro` = I18nKey("learn:stalemateIntro")
    val `stalemateGoal` = I18nKey("learn:stalemateGoal")
    val `stalemateComplete` = I18nKey("learn:stalemateComplete")
    val `advanced` = I18nKey("learn:advanced")
    val `pieceValue` = I18nKey("learn:pieceValue")
    val `evaluatePieceStrength` = I18nKey("learn:evaluatePieceStrength")
    val `pieceValueIntro` = I18nKey("learn:pieceValueIntro")
    val `queenOverBishop` = I18nKey("learn:queenOverBishop")
    val `pieceValueExchange` = I18nKey("learn:pieceValueExchange")
    val `pieceValueLegal` = I18nKey("learn:pieceValueLegal")
    val `takeThePieceWithTheHighestValue` = I18nKey("learn:takeThePieceWithTheHighestValue")
    val `pieceValueComplete` = I18nKey("learn:pieceValueComplete")
    val `checkInTwo` = I18nKey("learn:checkInTwo")
    val `twoMovesToGiveCheck` = I18nKey("learn:twoMovesToGiveCheck")
    val `checkInTwoIntro` = I18nKey("learn:checkInTwoIntro")
    val `checkInTwoGoal` = I18nKey("learn:checkInTwoGoal")
    val `checkInTwoComplete` = I18nKey("learn:checkInTwoComplete")
    val `whatNext` = I18nKey("learn:whatNext")
    val `youKnowHowToPlayChess` = I18nKey("learn:youKnowHowToPlayChess")
    val `register` = I18nKey("learn:register")
    val `getAFreeLichessAccount` = I18nKey("learn:getAFreeLichessAccount")
    val `practice` = I18nKey("learn:practice")
    val `learnCommonChessPositions` = I18nKey("learn:learnCommonChessPositions")
    val `puzzles` = I18nKey("learn:puzzles")
    val `exerciseYourTacticalSkills` = I18nKey("learn:exerciseYourTacticalSkills")
    val `videos` = I18nKey("learn:videos")
    val `watchInstructiveChessVideos` = I18nKey("learn:watchInstructiveChessVideos")
    val `playPeople` = I18nKey("learn:playPeople")
    val `opponentsFromAroundTheWorld` = I18nKey("learn:opponentsFromAroundTheWorld")
    val `playMachine` = I18nKey("learn:playMachine")
    val `testYourSkillsWithTheComputer` = I18nKey("learn:testYourSkillsWithTheComputer")
    val `letsGo` = I18nKey("learn:letsGo")
    val `stageX` = I18nKey("learn:stageX")
    val `awesome` = I18nKey("learn:awesome")
    val `excellent` = I18nKey("learn:excellent")
    val `greatJob` = I18nKey("learn:greatJob")
    val `perfect` = I18nKey("learn:perfect")
    val `outstanding` = I18nKey("learn:outstanding")
    val `wayToGo` = I18nKey("learn:wayToGo")
    val `yesYesYes` = I18nKey("learn:yesYesYes")
    val `youreGoodAtThis` = I18nKey("learn:youreGoodAtThis")
    val `nailedIt` = I18nKey("learn:nailedIt")
    val `rightOn` = I18nKey("learn:rightOn")
    val `stageXComplete` = I18nKey("learn:stageXComplete")
    val `next` = I18nKey("learn:next")
    val `nextX` = I18nKey("learn:nextX")
    val `backToMenu` = I18nKey("learn:backToMenu")
    val `puzzleFailed` = I18nKey("learn:puzzleFailed")
    val `retry` = I18nKey("learn:retry")

  object activity:
    val `activity` = I18nKey("activity:activity")
    val `hostedALiveStream` = I18nKey("activity:hostedALiveStream")
    val `rankedInSwissTournament` = I18nKey("activity:rankedInSwissTournament")
    val `signedUp` = I18nKey("activity:signedUp")
    val `supportedNbMonths` = I18nKey("activity:supportedNbMonths")
    val `practicedNbPositions` = I18nKey("activity:practicedNbPositions")
    val `solvedNbPuzzles` = I18nKey("activity:solvedNbPuzzles")
    val `playedNbGames` = I18nKey("activity:playedNbGames")
    val `postedNbMessages` = I18nKey("activity:postedNbMessages")
    val `playedNbMoves` = I18nKey("activity:playedNbMoves")
    val `inNbCorrespondenceGames` = I18nKey("activity:inNbCorrespondenceGames")
    val `completedNbGames` = I18nKey("activity:completedNbGames")
    val `followedNbPlayers` = I18nKey("activity:followedNbPlayers")
    val `gainedNbFollowers` = I18nKey("activity:gainedNbFollowers")
    val `hostedNbSimuls` = I18nKey("activity:hostedNbSimuls")
    val `joinedNbSimuls` = I18nKey("activity:joinedNbSimuls")
    val `createdNbStudies` = I18nKey("activity:createdNbStudies")
    val `competedInNbTournaments` = I18nKey("activity:competedInNbTournaments")
    val `rankedInTournament` = I18nKey("activity:rankedInTournament")
    val `competedInNbSwissTournaments` = I18nKey("activity:competedInNbSwissTournaments")
    val `joinedNbTeams` = I18nKey("activity:joinedNbTeams")

  object coordinates:
    val `coordinates` = I18nKey("coordinates:coordinates")
    val `coordinateTraining` = I18nKey("coordinates:coordinateTraining")
    val `averageScoreAsWhiteX` = I18nKey("coordinates:averageScoreAsWhiteX")
    val `averageScoreAsBlackX` = I18nKey("coordinates:averageScoreAsBlackX")
    val `knowingTheChessBoard` = I18nKey("coordinates:knowingTheChessBoard")
    val `mostChessCourses` = I18nKey("coordinates:mostChessCourses")
    val `talkToYourChessFriends` = I18nKey("coordinates:talkToYourChessFriends")
    val `youCanAnalyseAGameMoreEffectively` = I18nKey("coordinates:youCanAnalyseAGameMoreEffectively")
    val `aCoordinateAppears` = I18nKey("coordinates:aCoordinateAppears")
    val `aSquareIsHighlightedExplanation` = I18nKey("coordinates:aSquareIsHighlightedExplanation")
    val `youHaveThirtySeconds` = I18nKey("coordinates:youHaveThirtySeconds")
    val `goAsLongAsYouWant` = I18nKey("coordinates:goAsLongAsYouWant")
    val `showCoordinates` = I18nKey("coordinates:showCoordinates")
    val `showPieces` = I18nKey("coordinates:showPieces")
    val `startTraining` = I18nKey("coordinates:startTraining")
    val `findSquare` = I18nKey("coordinates:findSquare")
    val `nameSquare` = I18nKey("coordinates:nameSquare")

  object study:
    val `private` = I18nKey("study:private")
    val `myStudies` = I18nKey("study:myStudies")
    val `studiesIContributeTo` = I18nKey("study:studiesIContributeTo")
    val `myPublicStudies` = I18nKey("study:myPublicStudies")
    val `myPrivateStudies` = I18nKey("study:myPrivateStudies")
    val `myFavoriteStudies` = I18nKey("study:myFavoriteStudies")
    val `whatAreStudies` = I18nKey("study:whatAreStudies")
    val `allStudies` = I18nKey("study:allStudies")
    val `studiesCreatedByX` = I18nKey("study:studiesCreatedByX")
    val `noneYet` = I18nKey("study:noneYet")
    val `hot` = I18nKey("study:hot")
    val `dateAddedNewest` = I18nKey("study:dateAddedNewest")
    val `dateAddedOldest` = I18nKey("study:dateAddedOldest")
    val `recentlyUpdated` = I18nKey("study:recentlyUpdated")
    val `mostPopular` = I18nKey("study:mostPopular")
    val `alphabetical` = I18nKey("study:alphabetical")
    val `addNewChapter` = I18nKey("study:addNewChapter")
    val `addMembers` = I18nKey("study:addMembers")
    val `inviteToTheStudy` = I18nKey("study:inviteToTheStudy")
    val `pleaseOnlyInvitePeopleYouKnow` = I18nKey("study:pleaseOnlyInvitePeopleYouKnow")
    val `searchByUsername` = I18nKey("study:searchByUsername")
    val `spectator` = I18nKey("study:spectator")
    val `contributor` = I18nKey("study:contributor")
    val `kick` = I18nKey("study:kick")
    val `leaveTheStudy` = I18nKey("study:leaveTheStudy")
    val `youAreNowAContributor` = I18nKey("study:youAreNowAContributor")
    val `youAreNowASpectator` = I18nKey("study:youAreNowASpectator")
    val `pgnTags` = I18nKey("study:pgnTags")
    val `like` = I18nKey("study:like")
    val `unlike` = I18nKey("study:unlike")
    val `newTag` = I18nKey("study:newTag")
    val `commentThisPosition` = I18nKey("study:commentThisPosition")
    val `commentThisMove` = I18nKey("study:commentThisMove")
    val `annotateWithGlyphs` = I18nKey("study:annotateWithGlyphs")
    val `theChapterIsTooShortToBeAnalysed` = I18nKey("study:theChapterIsTooShortToBeAnalysed")
    val `onlyContributorsCanRequestAnalysis` = I18nKey("study:onlyContributorsCanRequestAnalysis")
    val `getAFullComputerAnalysis` = I18nKey("study:getAFullComputerAnalysis")
    val `makeSureTheChapterIsComplete` = I18nKey("study:makeSureTheChapterIsComplete")
    val `allSyncMembersRemainOnTheSamePosition` = I18nKey("study:allSyncMembersRemainOnTheSamePosition")
    val `shareChanges` = I18nKey("study:shareChanges")
    val `playing` = I18nKey("study:playing")
    val `first` = I18nKey("study:first")
    val `previous` = I18nKey("study:previous")
    val `next` = I18nKey("study:next")
    val `last` = I18nKey("study:last")
    val `shareAndExport` = I18nKey("study:shareAndExport")
    val `cloneStudy` = I18nKey("study:cloneStudy")
    val `studyPgn` = I18nKey("study:studyPgn")
    val `downloadAllGames` = I18nKey("study:downloadAllGames")
    val `chapterPgn` = I18nKey("study:chapterPgn")
    val `copyChapterPgn` = I18nKey("study:copyChapterPgn")
    val `copyChapterPgnDescription` = I18nKey("study:copyChapterPgnDescription")
    val `downloadGame` = I18nKey("study:downloadGame")
    val `studyUrl` = I18nKey("study:studyUrl")
    val `currentChapterUrl` = I18nKey("study:currentChapterUrl")
    val `youCanPasteThisInTheForumToEmbed` = I18nKey("study:youCanPasteThisInTheForumToEmbed")
    val `startAtInitialPosition` = I18nKey("study:startAtInitialPosition")
    val `startAtX` = I18nKey("study:startAtX")
    val `embedInYourWebsite` = I18nKey("study:embedInYourWebsite")
    val `readMoreAboutEmbedding` = I18nKey("study:readMoreAboutEmbedding")
    val `onlyPublicStudiesCanBeEmbedded` = I18nKey("study:onlyPublicStudiesCanBeEmbedded")
    val `open` = I18nKey("study:open")
    val `xBroughtToYouByY` = I18nKey("study:xBroughtToYouByY")
    val `studyNotFound` = I18nKey("study:studyNotFound")
    val `editChapter` = I18nKey("study:editChapter")
    val `newChapter` = I18nKey("study:newChapter")
    val `importFromChapterX` = I18nKey("study:importFromChapterX")
    val `orientation` = I18nKey("study:orientation")
    val `analysisMode` = I18nKey("study:analysisMode")
    val `pinnedChapterComment` = I18nKey("study:pinnedChapterComment")
    val `saveChapter` = I18nKey("study:saveChapter")
    val `clearAnnotations` = I18nKey("study:clearAnnotations")
    val `clearVariations` = I18nKey("study:clearVariations")
    val `deleteChapter` = I18nKey("study:deleteChapter")
    val `deleteThisChapter` = I18nKey("study:deleteThisChapter")
    val `clearAllCommentsInThisChapter` = I18nKey("study:clearAllCommentsInThisChapter")
    val `rightUnderTheBoard` = I18nKey("study:rightUnderTheBoard")
    val `noPinnedComment` = I18nKey("study:noPinnedComment")
    val `normalAnalysis` = I18nKey("study:normalAnalysis")
    val `hideNextMoves` = I18nKey("study:hideNextMoves")
    val `interactiveLesson` = I18nKey("study:interactiveLesson")
    val `chapterX` = I18nKey("study:chapterX")
    val `empty` = I18nKey("study:empty")
    val `startFromInitialPosition` = I18nKey("study:startFromInitialPosition")
    val `editor` = I18nKey("study:editor")
    val `startFromCustomPosition` = I18nKey("study:startFromCustomPosition")
    val `loadAGameByUrl` = I18nKey("study:loadAGameByUrl")
    val `loadAPositionFromFen` = I18nKey("study:loadAPositionFromFen")
    val `loadAGameFromPgn` = I18nKey("study:loadAGameFromPgn")
    val `automatic` = I18nKey("study:automatic")
    val `urlOfTheGame` = I18nKey("study:urlOfTheGame")
    val `loadAGameFromXOrY` = I18nKey("study:loadAGameFromXOrY")
    val `createChapter` = I18nKey("study:createChapter")
    val `createStudy` = I18nKey("study:createStudy")
    val `editStudy` = I18nKey("study:editStudy")
    val `visibility` = I18nKey("study:visibility")
    val `public` = I18nKey("study:public")
    val `unlisted` = I18nKey("study:unlisted")
    val `inviteOnly` = I18nKey("study:inviteOnly")
    val `allowCloning` = I18nKey("study:allowCloning")
    val `nobody` = I18nKey("study:nobody")
    val `onlyMe` = I18nKey("study:onlyMe")
    val `contributors` = I18nKey("study:contributors")
    val `members` = I18nKey("study:members")
    val `everyone` = I18nKey("study:everyone")
    val `enableSync` = I18nKey("study:enableSync")
    val `yesKeepEveryoneOnTheSamePosition` = I18nKey("study:yesKeepEveryoneOnTheSamePosition")
    val `noLetPeopleBrowseFreely` = I18nKey("study:noLetPeopleBrowseFreely")
    val `pinnedStudyComment` = I18nKey("study:pinnedStudyComment")
    val `start` = I18nKey("study:start")
    val `save` = I18nKey("study:save")
    val `clearChat` = I18nKey("study:clearChat")
    val `deleteTheStudyChatHistory` = I18nKey("study:deleteTheStudyChatHistory")
    val `deleteStudy` = I18nKey("study:deleteStudy")
    val `confirmDeleteStudy` = I18nKey("study:confirmDeleteStudy")
    val `whereDoYouWantToStudyThat` = I18nKey("study:whereDoYouWantToStudyThat")
    val `goodMove` = I18nKey("study:goodMove")
    val `mistake` = I18nKey("study:mistake")
    val `brilliantMove` = I18nKey("study:brilliantMove")
    val `blunder` = I18nKey("study:blunder")
    val `interestingMove` = I18nKey("study:interestingMove")
    val `dubiousMove` = I18nKey("study:dubiousMove")
    val `onlyMove` = I18nKey("study:onlyMove")
    val `zugzwang` = I18nKey("study:zugzwang")
    val `equalPosition` = I18nKey("study:equalPosition")
    val `unclearPosition` = I18nKey("study:unclearPosition")
    val `whiteIsSlightlyBetter` = I18nKey("study:whiteIsSlightlyBetter")
    val `blackIsSlightlyBetter` = I18nKey("study:blackIsSlightlyBetter")
    val `whiteIsBetter` = I18nKey("study:whiteIsBetter")
    val `blackIsBetter` = I18nKey("study:blackIsBetter")
    val `whiteIsWinning` = I18nKey("study:whiteIsWinning")
    val `blackIsWinning` = I18nKey("study:blackIsWinning")
    val `novelty` = I18nKey("study:novelty")
    val `development` = I18nKey("study:development")
    val `initiative` = I18nKey("study:initiative")
    val `attack` = I18nKey("study:attack")
    val `counterplay` = I18nKey("study:counterplay")
    val `timeTrouble` = I18nKey("study:timeTrouble")
    val `withCompensation` = I18nKey("study:withCompensation")
    val `withTheIdea` = I18nKey("study:withTheIdea")
    val `nextChapter` = I18nKey("study:nextChapter")
    val `prevChapter` = I18nKey("study:prevChapter")
    val `studyActions` = I18nKey("study:studyActions")
    val `topics` = I18nKey("study:topics")
    val `myTopics` = I18nKey("study:myTopics")
    val `popularTopics` = I18nKey("study:popularTopics")
    val `manageTopics` = I18nKey("study:manageTopics")
    val `back` = I18nKey("study:back")
    val `playAgain` = I18nKey("study:playAgain")
    val `whatWouldYouPlay` = I18nKey("study:whatWouldYouPlay")
    val `youCompletedThisLesson` = I18nKey("study:youCompletedThisLesson")
    val `nbChapters` = I18nKey("study:nbChapters")
    val `nbGames` = I18nKey("study:nbGames")
    val `nbMembers` = I18nKey("study:nbMembers")
    val `pasteYourPgnTextHereUpToNbGames` = I18nKey("study:pasteYourPgnTextHereUpToNbGames")

  object clas:
    val `lichessClasses` = I18nKey("class:lichessClasses")
    val `teachClassesOfChessStudents` = I18nKey("class:teachClassesOfChessStudents")
    val `features` = I18nKey("class:features")
    val `quicklyGenerateSafeUsernames` = I18nKey("class:quicklyGenerateSafeUsernames")
    val `trackStudentProgress` = I18nKey("class:trackStudentProgress")
    val `messageAllStudents` = I18nKey("class:messageAllStudents")
    val `freeForAllForever` = I18nKey("class:freeForAllForever")
    val `applyToBeLichessTeacher` = I18nKey("class:applyToBeLichessTeacher")
    val `noClassesYet` = I18nKey("class:noClassesYet")
    val `teachersX` = I18nKey("class:teachersX")
    val `newClass` = I18nKey("class:newClass")
    val `closeClass` = I18nKey("class:closeClass")
    val `removedByX` = I18nKey("class:removedByX")
    val `reopen` = I18nKey("class:reopen")
    val `removeStudent` = I18nKey("class:removeStudent")
    val `removedStudents` = I18nKey("class:removedStudents")
    val `inviteTheStudentBack` = I18nKey("class:inviteTheStudentBack")
    val `sendAMessage` = I18nKey("class:sendAMessage")
    val `aLinkToTheClassWillBeAdded` = I18nKey("class:aLinkToTheClassWillBeAdded")
    val `className` = I18nKey("class:className")
    val `classDescription` = I18nKey("class:classDescription")
    val `visibleByBothStudentsAndTeachers` = I18nKey("class:visibleByBothStudentsAndTeachers")
    val `teachersOfTheClass` = I18nKey("class:teachersOfTheClass")
    val `addLichessUsernames` = I18nKey("class:addLichessUsernames")
    val `resetPassword` = I18nKey("class:resetPassword")
    val `makeSureToCopy` = I18nKey("class:makeSureToCopy")
    val `passwordX` = I18nKey("class:passwordX")
    val `generateANewPassword` = I18nKey("class:generateANewPassword")
    val `invitedToXByY` = I18nKey("class:invitedToXByY")
    val `realName` = I18nKey("class:realName")
    val `privateWillNeverBeShown` = I18nKey("class:privateWillNeverBeShown")
    val `addStudent` = I18nKey("class:addStudent")
    val `lichessProfileXCreatedForY` = I18nKey("class:lichessProfileXCreatedForY")
    val `studentCredentials` = I18nKey("class:studentCredentials")
    val `inviteALichessAccount` = I18nKey("class:inviteALichessAccount")
    val `inviteDesc1` = I18nKey("class:inviteDesc1")
    val `inviteDesc2` = I18nKey("class:inviteDesc2")
    val `inviteDesc3` = I18nKey("class:inviteDesc3")
    val `inviteDesc4` = I18nKey("class:inviteDesc4")
    val `createANewLichessAccount` = I18nKey("class:createANewLichessAccount")
    val `createDesc1` = I18nKey("class:createDesc1")
    val `createDesc2` = I18nKey("class:createDesc2")
    val `createDesc3` = I18nKey("class:createDesc3")
    val `createDesc4` = I18nKey("class:createDesc4")
    val `createStudentWarning` = I18nKey("class:createStudentWarning")
    val `lichessUsername` = I18nKey("class:lichessUsername")
    val `generateANewUsername` = I18nKey("class:generateANewUsername")
    val `welcomeToClass` = I18nKey("class:welcomeToClass")
    val `invitationToClass` = I18nKey("class:invitationToClass")
    val `clickToViewInvitation` = I18nKey("class:clickToViewInvitation")
    val `onlyVisibleToTeachers` = I18nKey("class:onlyVisibleToTeachers")
    val `lastActiveDate` = I18nKey("class:lastActiveDate")
    val `managed` = I18nKey("class:managed")
    val `thisStudentAccountIsManaged` = I18nKey("class:thisStudentAccountIsManaged")
    val `upgradeFromManaged` = I18nKey("class:upgradeFromManaged")
    val `release` = I18nKey("class:release")
    val `releaseTheAccount` = I18nKey("class:releaseTheAccount")
    val `releaseDesc1` = I18nKey("class:releaseDesc1")
    val `releaseDesc2` = I18nKey("class:releaseDesc2")
    val `realUniqueEmail` = I18nKey("class:realUniqueEmail")
    val `closeStudent` = I18nKey("class:closeStudent")
    val `closeTheAccount` = I18nKey("class:closeTheAccount")
    val `closeDesc1` = I18nKey("class:closeDesc1")
    val `closeDesc2` = I18nKey("class:closeDesc2")
    val `teachers` = I18nKey("class:teachers")
    val `students` = I18nKey("class:students")
    val `progress` = I18nKey("class:progress")
    val `noStudents` = I18nKey("class:noStudents")
    val `noRemovedStudents` = I18nKey("class:noRemovedStudents")
    val `overDays` = I18nKey("class:overDays")
    val `timePlaying` = I18nKey("class:timePlaying")
    val `variantXOverLastY` = I18nKey("class:variantXOverLastY")
    val `winrate` = I18nKey("class:winrate")
    val `na` = I18nKey("class:na")
    val `overview` = I18nKey("class:overview")
    val `news` = I18nKey("class:news")
    val `classNews` = I18nKey("class:classNews")
    val `editNews` = I18nKey("class:editNews")
    val `notifyAllStudents` = I18nKey("class:notifyAllStudents")
    val `nothingHere` = I18nKey("class:nothingHere")
    val `newsEdit1` = I18nKey("class:newsEdit1")
    val `newsEdit2` = I18nKey("class:newsEdit2")
    val `newsEdit3` = I18nKey("class:newsEdit3")
    val `invite` = I18nKey("class:invite")
    val `youHaveBeenInvitedByX` = I18nKey("class:youHaveBeenInvitedByX")
    val `youAcceptedThisInvitation` = I18nKey("class:youAcceptedThisInvitation")
    val `youDeclinedThisInvitation` = I18nKey("class:youDeclinedThisInvitation")
    val `orSeparator` = I18nKey("class:orSeparator")
    val `createMultipleAccounts` = I18nKey("class:createMultipleAccounts")
    val `multipleAccsFormDescription` = I18nKey("class:multipleAccsFormDescription")
    val `useThisForm` = I18nKey("class:useThisForm")
    val `maxStudentsNote` = I18nKey("class:maxStudentsNote")
    val `createMoreClasses` = I18nKey("class:createMoreClasses")
    val `studentsRealNamesOnePerLine` = I18nKey("class:studentsRealNamesOnePerLine")
    val `xisNowAStudentOfTheClass` = I18nKey("class:xisNowAStudentOfTheClass")
    val `anInvitationHasBeenSentToX` = I18nKey("class:anInvitationHasBeenSentToX")
    val `xAlreadyHasAPendingInvitation` = I18nKey("class:xAlreadyHasAPendingInvitation")
    val `xIsAKidAccountWarning` = I18nKey("class:xIsAKidAccountWarning")
    val `nbPendingInvitations` = I18nKey("class:nbPendingInvitations")
    val `nbTeachers` = I18nKey("class:nbTeachers")
    val `nbStudents` = I18nKey("class:nbStudents")

  object contact:
    val `contact` = I18nKey("contact:contact")
    val `contactLichess` = I18nKey("contact:contactLichess")
    val `whatCanWeHelpYouWith` = I18nKey("contact:whatCanWeHelpYouWith")
    val `visitThisPage` = I18nKey("contact:visitThisPage")
    val `iCantLogIn` = I18nKey("contact:iCantLogIn")
    val `noConfirmationEmail` = I18nKey("contact:noConfirmationEmail")
    val `forgotPassword` = I18nKey("contact:forgotPassword")
    val `forgotUsername` = I18nKey("contact:forgotUsername")
    val `youCanLoginWithEmail` = I18nKey("contact:youCanLoginWithEmail")
    val `lost2FA` = I18nKey("contact:lost2FA")
    val `doPasswordReset` = I18nKey("contact:doPasswordReset")
    val `accountSupport` = I18nKey("contact:accountSupport")
    val `wantTitle` = I18nKey("contact:wantTitle")
    val `visitTitleConfirmation` = I18nKey("contact:visitTitleConfirmation")
    val `wantCloseAccount` = I18nKey("contact:wantCloseAccount")
    val `closeYourAccount` = I18nKey("contact:closeYourAccount")
    val `doNotAskByEmail` = I18nKey("contact:doNotAskByEmail")
    val `wantReopen` = I18nKey("contact:wantReopen")
    val `reopenOnThisPage` = I18nKey("contact:reopenOnThisPage")
    val `doNotAskByEmailToReopen` = I18nKey("contact:doNotAskByEmailToReopen")
    val `wantChangeUsername` = I18nKey("contact:wantChangeUsername")
    val `changeUsernameCase` = I18nKey("contact:changeUsernameCase")
    val `cantChangeMore` = I18nKey("contact:cantChangeMore")
    val `orCloseAccount` = I18nKey("contact:orCloseAccount")
    val `wantClearHistory` = I18nKey("contact:wantClearHistory")
    val `cantClearHistory` = I18nKey("contact:cantClearHistory")
    val `wantReport` = I18nKey("contact:wantReport")
    val `toReportAPlayerUseForm` = I18nKey("contact:toReportAPlayerUseForm")
    val `youCanAlsoReachReportPage` = I18nKey("contact:youCanAlsoReachReportPage")
    val `doNotReportInForum` = I18nKey("contact:doNotReportInForum")
    val `doNotSendReportEmails` = I18nKey("contact:doNotSendReportEmails")
    val `doNotMessageModerators` = I18nKey("contact:doNotMessageModerators")
    val `onlyReports` = I18nKey("contact:onlyReports")
    val `wantReportBug` = I18nKey("contact:wantReportBug")
    val `reportBugInForum` = I18nKey("contact:reportBugInForum")
    val `reportWebsiteIssue` = I18nKey("contact:reportWebsiteIssue")
    val `reportMobileIssue` = I18nKey("contact:reportMobileIssue")
    val `reportBugInDiscord` = I18nKey("contact:reportBugInDiscord")
    val `howToReportBug` = I18nKey("contact:howToReportBug")
    val `illegalPawnCapture` = I18nKey("contact:illegalPawnCapture")
    val `calledEnPassant` = I18nKey("contact:calledEnPassant")
    val `tryEnPassant` = I18nKey("contact:tryEnPassant")
    val `illegalCastling` = I18nKey("contact:illegalCastling")
    val `castlingPrevented` = I18nKey("contact:castlingPrevented")
    val `castlingRules` = I18nKey("contact:castlingRules")
    val `tryCastling` = I18nKey("contact:tryCastling")
    val `castlingImported` = I18nKey("contact:castlingImported")
    val `insufficientMaterial` = I18nKey("contact:insufficientMaterial")
    val `fideMate` = I18nKey("contact:fideMate")
    val `knightMate` = I18nKey("contact:knightMate")
    val `noRatingPoints` = I18nKey("contact:noRatingPoints")
    val `ratedGame` = I18nKey("contact:ratedGame")
    val `botRatingAbuse` = I18nKey("contact:botRatingAbuse")
    val `errorPage` = I18nKey("contact:errorPage")
    val `reportErrorPage` = I18nKey("contact:reportErrorPage")
    val `wantBroadcastTournament` = I18nKey("contact:wantBroadcastTournament")
    val `learnHowToMakeBroadcasts` = I18nKey("contact:learnHowToMakeBroadcasts")
    val `contactAboutOfficialBroadcasts` = I18nKey("contact:contactAboutOfficialBroadcasts")
    val `banAppeal` = I18nKey("contact:banAppeal")
    val `engineAppeal` = I18nKey("contact:engineAppeal")
    val `sendAppealTo` = I18nKey("contact:sendAppealTo")
    val `falsePositives` = I18nKey("contact:falsePositives")
    val `ifLegit` = I18nKey("contact:ifLegit")
    val `accountLost` = I18nKey("contact:accountLost")
    val `doNotDeny` = I18nKey("contact:doNotDeny")
    val `otherRestriction` = I18nKey("contact:otherRestriction")
    val `collaboration` = I18nKey("contact:collaboration")
    val `monetizing` = I18nKey("contact:monetizing")
    val `buyingLichess` = I18nKey("contact:buyingLichess")
    val `authorizationToUse` = I18nKey("contact:authorizationToUse")
    val `welcomeToUse` = I18nKey("contact:welcomeToUse")
    val `videosAndBooks` = I18nKey("contact:videosAndBooks")
    val `creditAppreciated` = I18nKey("contact:creditAppreciated")
    val `noneOfTheAbove` = I18nKey("contact:noneOfTheAbove")
    val `sendEmailAt` = I18nKey("contact:sendEmailAt")
    val `explainYourRequest` = I18nKey("contact:explainYourRequest")

  object patron:
    val `donate` = I18nKey("patron:donate")
    val `donateAsX` = I18nKey("patron:donateAsX")
    val `lichessPatron` = I18nKey("patron:lichessPatron")
    val `freeAccount` = I18nKey("patron:freeAccount")
    val `becomePatron` = I18nKey("patron:becomePatron")
    val `xBecamePatron` = I18nKey("patron:xBecamePatron")
    val `newPatrons` = I18nKey("patron:newPatrons")
    val `freeChess` = I18nKey("patron:freeChess")
    val `noAdsNoSubs` = I18nKey("patron:noAdsNoSubs")
    val `thankYou` = I18nKey("patron:thankYou")
    val `youHaveLifetime` = I18nKey("patron:youHaveLifetime")
    val `patronUntil` = I18nKey("patron:patronUntil")
    val `ifNotRenewedThenAccountWillRevert` = I18nKey("patron:ifNotRenewedThenAccountWillRevert")
    val `weAreNonProfit` = I18nKey("patron:weAreNonProfit")
    val `weRelyOnSupport` = I18nKey("patron:weRelyOnSupport")
    val `lifetime` = I18nKey("patron:lifetime")
    val `payLifetimeOnce` = I18nKey("patron:payLifetimeOnce")
    val `lifetimePatron` = I18nKey("patron:lifetimePatron")
    val `monthly` = I18nKey("patron:monthly")
    val `recurringBilling` = I18nKey("patron:recurringBilling")
    val `onetime` = I18nKey("patron:onetime")
    val `singleDonation` = I18nKey("patron:singleDonation")
    val `otherAmount` = I18nKey("patron:otherAmount")
    val `pleaseEnterAmountInX` = I18nKey("patron:pleaseEnterAmountInX")
    val `withCreditCard` = I18nKey("patron:withCreditCard")
    val `logInToDonate` = I18nKey("patron:logInToDonate")
    val `weAreSmallTeam` = I18nKey("patron:weAreSmallTeam")
    val `celebratedPatrons` = I18nKey("patron:celebratedPatrons")
    val `whereMoneyGoes` = I18nKey("patron:whereMoneyGoes")
    val `serversAndDeveloper` = I18nKey("patron:serversAndDeveloper")
    val `costBreakdown` = I18nKey("patron:costBreakdown")
    val `officialNonProfit` = I18nKey("patron:officialNonProfit")
    val `actOfCreation` = I18nKey("patron:actOfCreation")
    val `changeMonthlySupport` = I18nKey("patron:changeMonthlySupport")
    val `changeOrContact` = I18nKey("patron:changeOrContact")
    val `contactSupport` = I18nKey("patron:contactSupport")
    val `otherMethods` = I18nKey("patron:otherMethods")
    val `lichessIsRegisteredWith` = I18nKey("patron:lichessIsRegisteredWith")
    val `bankTransfers` = I18nKey("patron:bankTransfers")
    val `onlyDonationFromAbove` = I18nKey("patron:onlyDonationFromAbove")
    val `patronFeatures` = I18nKey("patron:patronFeatures")
    val `noPatronFeatures` = I18nKey("patron:noPatronFeatures")
    val `featuresComparison` = I18nKey("patron:featuresComparison")
    val `youSupportWith` = I18nKey("patron:youSupportWith")
    val `tyvm` = I18nKey("patron:tyvm")
    val `currentStatus` = I18nKey("patron:currentStatus")
    val `nextPayment` = I18nKey("patron:nextPayment")
    val `youWillBeChargedXOnY` = I18nKey("patron:youWillBeChargedXOnY")
    val `makeAdditionalDonation` = I18nKey("patron:makeAdditionalDonation")
    val `giftPatronWings` = I18nKey("patron:giftPatronWings")
    val `update` = I18nKey("patron:update")
    val `changeMonthlyAmount` = I18nKey("patron:changeMonthlyAmount")
    val `cancelSupport` = I18nKey("patron:cancelSupport")
    val `xOrY` = I18nKey("patron:xOrY")
    val `decideHowMuch` = I18nKey("patron:decideHowMuch")
    val `stopPayments` = I18nKey("patron:stopPayments")
    val `stopPaymentsPayPal` = I18nKey("patron:stopPaymentsPayPal")
    val `noLongerSupport` = I18nKey("patron:noLongerSupport")
    val `viewOthers` = I18nKey("patron:viewOthers")
    val `date` = I18nKey("patron:date")
    val `amount` = I18nKey("patron:amount")
    val `transactionCompleted` = I18nKey("patron:transactionCompleted")
    val `permanentPatron` = I18nKey("patron:permanentPatron")
    val `checkOutProfile` = I18nKey("patron:checkOutProfile")
    val `nowLifetime` = I18nKey("patron:nowLifetime")
    val `nowOneMonth` = I18nKey("patron:nowOneMonth")
    val `downgradeNextMonth` = I18nKey("patron:downgradeNextMonth")
    val `changeCurrency` = I18nKey("patron:changeCurrency")
    val `xIsPatronForNbMonths` = I18nKey("patron:xIsPatronForNbMonths")
    val `patronForMonths` = I18nKey("patron:patronForMonths")

  object coach:
    val `lichessCoaches` = I18nKey("coach:lichessCoaches")
    val `lichessCoach` = I18nKey("coach:lichessCoach")
    val `areYouCoach` = I18nKey("coach:areYouCoach")
    val `nmOrFideTitle` = I18nKey("coach:nmOrFideTitle")
    val `confirmTitle` = I18nKey("coach:confirmTitle")
    val `sendApplication` = I18nKey("coach:sendApplication")
    val `location` = I18nKey("coach:location")
    val `languages` = I18nKey("coach:languages")
    val `rating` = I18nKey("coach:rating")
    val `hourlyRate` = I18nKey("coach:hourlyRate")
    val `availability` = I18nKey("coach:availability")
    val `accepting` = I18nKey("coach:accepting")
    val `notAccepting` = I18nKey("coach:notAccepting")
    val `xCoachesStudents` = I18nKey("coach:xCoachesStudents")
    val `viewXProfile` = I18nKey("coach:viewXProfile")
    val `sendPM` = I18nKey("coach:sendPM")
    val `aboutMe` = I18nKey("coach:aboutMe")
    val `playingExperience` = I18nKey("coach:playingExperience")
    val `teachingExperience` = I18nKey("coach:teachingExperience")
    val `otherExperiences` = I18nKey("coach:otherExperiences")
    val `bestSkills` = I18nKey("coach:bestSkills")
    val `teachingMethod` = I18nKey("coach:teachingMethod")
    val `publicStudies` = I18nKey("coach:publicStudies")
    val `youtubeVideos` = I18nKey("coach:youtubeVideos")

  object broadcast:
    val `broadcasts` = I18nKey("broadcast:broadcasts")
    val `liveBroadcasts` = I18nKey("broadcast:liveBroadcasts")
    val `newBroadcast` = I18nKey("broadcast:newBroadcast")
    val `addRound` = I18nKey("broadcast:addRound")
    val `ongoing` = I18nKey("broadcast:ongoing")
    val `upcoming` = I18nKey("broadcast:upcoming")
    val `completed` = I18nKey("broadcast:completed")
    val `roundName` = I18nKey("broadcast:roundName")
    val `roundNumber` = I18nKey("broadcast:roundNumber")
    val `tournamentName` = I18nKey("broadcast:tournamentName")
    val `tournamentDescription` = I18nKey("broadcast:tournamentDescription")
    val `fullDescription` = I18nKey("broadcast:fullDescription")
    val `fullDescriptionHelp` = I18nKey("broadcast:fullDescriptionHelp")
    val `sourceUrlOrGameIds` = I18nKey("broadcast:sourceUrlOrGameIds")
    val `sourceUrlHelp` = I18nKey("broadcast:sourceUrlHelp")
    val `gameIdsHelp` = I18nKey("broadcast:gameIdsHelp")
    val `startDate` = I18nKey("broadcast:startDate")
    val `startDateHelp` = I18nKey("broadcast:startDateHelp")
    val `credits` = I18nKey("broadcast:credits")
    val `broadcastUrl` = I18nKey("broadcast:broadcastUrl")
    val `currentRoundUrl` = I18nKey("broadcast:currentRoundUrl")
    val `currentGameUrl` = I18nKey("broadcast:currentGameUrl")
    val `downloadAllRounds` = I18nKey("broadcast:downloadAllRounds")
    val `resetRound` = I18nKey("broadcast:resetRound")
    val `deleteRound` = I18nKey("broadcast:deleteRound")
    val `definitivelyDeleteRound` = I18nKey("broadcast:definitivelyDeleteRound")
    val `deleteAllGamesOfThisRound` = I18nKey("broadcast:deleteAllGamesOfThisRound")
    val `editRoundStudy` = I18nKey("broadcast:editRoundStudy")
    val `deleteTournament` = I18nKey("broadcast:deleteTournament")
    val `definitivelyDeleteTournament` = I18nKey("broadcast:definitivelyDeleteTournament")
    val `nbBroadcasts` = I18nKey("broadcast:nbBroadcasts")

  object streamer:
    val `lichessStreamers` = I18nKey("streamer:lichessStreamers")
    val `lichessStreamer` = I18nKey("streamer:lichessStreamer")
    val `live` = I18nKey("streamer:live")
    val `offline` = I18nKey("streamer:offline")
    val `currentlyStreaming` = I18nKey("streamer:currentlyStreaming")
    val `lastStream` = I18nKey("streamer:lastStream")
    val `becomeStreamer` = I18nKey("streamer:becomeStreamer")
    val `doYouHaveStream` = I18nKey("streamer:doYouHaveStream")
    val `hereWeGo` = I18nKey("streamer:hereWeGo")
    val `allStreamers` = I18nKey("streamer:allStreamers")
    val `editPage` = I18nKey("streamer:editPage")
    val `yourPage` = I18nKey("streamer:yourPage")
    val `downloadKit` = I18nKey("streamer:downloadKit")
    val `xIsStreaming` = I18nKey("streamer:xIsStreaming")
    val `rules` = I18nKey("streamer:rules")
    val `rule1` = I18nKey("streamer:rule1")
    val `rule2` = I18nKey("streamer:rule2")
    val `rule3` = I18nKey("streamer:rule3")
    val `rule4` = I18nKey("streamer:rule4")
    val `streamingFairplayFAQ` = I18nKey("streamer:streamingFairplayFAQ")
    val `perks` = I18nKey("streamer:perks")
    val `perk1` = I18nKey("streamer:perk1")
    val `perk2` = I18nKey("streamer:perk2")
    val `perk3` = I18nKey("streamer:perk3")
    val `perk4` = I18nKey("streamer:perk4")
    val `approved` = I18nKey("streamer:approved")
    val `pendingReview` = I18nKey("streamer:pendingReview")
    val `pleaseFillIn` = I18nKey("streamer:pleaseFillIn")
    val `whenReady` = I18nKey("streamer:whenReady")
    val `requestReview` = I18nKey("streamer:requestReview")
    val `streamerLanguageSettings` = I18nKey("streamer:streamerLanguageSettings")
    val `twitchUsername` = I18nKey("streamer:twitchUsername")
    val `optionalOrEmpty` = I18nKey("streamer:optionalOrEmpty")
    val `youTubeChannelId` = I18nKey("streamer:youTubeChannelId")
    val `streamerName` = I18nKey("streamer:streamerName")
    val `visibility` = I18nKey("streamer:visibility")
    val `whenApproved` = I18nKey("streamer:whenApproved")
    val `headline` = I18nKey("streamer:headline")
    val `tellUsAboutTheStream` = I18nKey("streamer:tellUsAboutTheStream")
    val `longDescription` = I18nKey("streamer:longDescription")
    val `xStreamerPicture` = I18nKey("streamer:xStreamerPicture")
    val `changePicture` = I18nKey("streamer:changePicture")
    val `uploadPicture` = I18nKey("streamer:uploadPicture")
    val `maxSize` = I18nKey("streamer:maxSize")
    val `keepItShort` = I18nKey("streamer:keepItShort")

  object tfa:
    val `twoFactorAuth` = I18nKey("tfa:twoFactorAuth")
    val `twoFactorHelp` = I18nKey("tfa:twoFactorHelp")
    val `twoFactorApp` = I18nKey("tfa:twoFactorApp")
    val `scanTheCode` = I18nKey("tfa:scanTheCode")
    val `enterPassword` = I18nKey("tfa:enterPassword")
    val `ifYouCannotScanEnterX` = I18nKey("tfa:ifYouCannotScanEnterX")
    val `authenticationCode` = I18nKey("tfa:authenticationCode")
    val `ifYouLoseAccess` = I18nKey("tfa:ifYouLoseAccess")
    val `enableTwoFactor` = I18nKey("tfa:enableTwoFactor")
    val `disableTwoFactor` = I18nKey("tfa:disableTwoFactor")
    val `twoFactorEnabled` = I18nKey("tfa:twoFactorEnabled")
    val `twoFactorDisable` = I18nKey("tfa:twoFactorDisable")
    val `openTwoFactorApp` = I18nKey("tfa:openTwoFactorApp")
    val `setupReminder` = I18nKey("tfa:setupReminder")

  object settings:
    val `settings` = I18nKey("settings:settings")
    val `closeAccount` = I18nKey("settings:closeAccount")
    val `managedAccountCannotBeClosed` = I18nKey("settings:managedAccountCannotBeClosed")
    val `closingIsDefinitive` = I18nKey("settings:closingIsDefinitive")
    val `cantOpenSimilarAccount` = I18nKey("settings:cantOpenSimilarAccount")
    val `changedMindDoNotCloseAccount` = I18nKey("settings:changedMindDoNotCloseAccount")
    val `closeAccountExplanation` = I18nKey("settings:closeAccountExplanation")
    val `thisAccountIsClosed` = I18nKey("settings:thisAccountIsClosed")

  object preferences:
    val `preferences` = I18nKey("preferences:preferences")
    val `display` = I18nKey("preferences:display")
    val `privacy` = I18nKey("preferences:privacy")
    val `notifications` = I18nKey("preferences:notifications")
    val `pieceAnimation` = I18nKey("preferences:pieceAnimation")
    val `materialDifference` = I18nKey("preferences:materialDifference")
    val `boardHighlights` = I18nKey("preferences:boardHighlights")
    val `pieceDestinations` = I18nKey("preferences:pieceDestinations")
    val `boardCoordinates` = I18nKey("preferences:boardCoordinates")
    val `moveListWhilePlaying` = I18nKey("preferences:moveListWhilePlaying")
    val `pgnPieceNotation` = I18nKey("preferences:pgnPieceNotation")
    val `chessPieceSymbol` = I18nKey("preferences:chessPieceSymbol")
    val `pgnLetter` = I18nKey("preferences:pgnLetter")
    val `zenMode` = I18nKey("preferences:zenMode")
    val `showPlayerRatings` = I18nKey("preferences:showPlayerRatings")
    val `explainShowPlayerRatings` = I18nKey("preferences:explainShowPlayerRatings")
    val `displayBoardResizeHandle` = I18nKey("preferences:displayBoardResizeHandle")
    val `onlyOnInitialPosition` = I18nKey("preferences:onlyOnInitialPosition")
    val `blindfoldChess` = I18nKey("preferences:blindfoldChess")
    val `chessClock` = I18nKey("preferences:chessClock")
    val `tenthsOfSeconds` = I18nKey("preferences:tenthsOfSeconds")
    val `whenTimeRemainingLessThanTenSeconds` = I18nKey("preferences:whenTimeRemainingLessThanTenSeconds")
    val `horizontalGreenProgressBars` = I18nKey("preferences:horizontalGreenProgressBars")
    val `soundWhenTimeGetsCritical` = I18nKey("preferences:soundWhenTimeGetsCritical")
    val `giveMoreTime` = I18nKey("preferences:giveMoreTime")
    val `gameBehavior` = I18nKey("preferences:gameBehavior")
    val `howDoYouMovePieces` = I18nKey("preferences:howDoYouMovePieces")
    val `clickTwoSquares` = I18nKey("preferences:clickTwoSquares")
    val `dragPiece` = I18nKey("preferences:dragPiece")
    val `bothClicksAndDrag` = I18nKey("preferences:bothClicksAndDrag")
    val `premovesPlayingDuringOpponentTurn` = I18nKey("preferences:premovesPlayingDuringOpponentTurn")
    val `takebacksWithOpponentApproval` = I18nKey("preferences:takebacksWithOpponentApproval")
    val `inCasualGamesOnly` = I18nKey("preferences:inCasualGamesOnly")
    val `promoteToQueenAutomatically` = I18nKey("preferences:promoteToQueenAutomatically")
    val `explainPromoteToQueenAutomatically` = I18nKey("preferences:explainPromoteToQueenAutomatically")
    val `whenPremoving` = I18nKey("preferences:whenPremoving")
    val `claimDrawOnThreefoldRepetitionAutomatically` = I18nKey("preferences:claimDrawOnThreefoldRepetitionAutomatically")
    val `whenTimeRemainingLessThanThirtySeconds` = I18nKey("preferences:whenTimeRemainingLessThanThirtySeconds")
    val `moveConfirmation` = I18nKey("preferences:moveConfirmation")
    val `explainCanThenBeTemporarilyDisabled` = I18nKey("preferences:explainCanThenBeTemporarilyDisabled")
    val `inCorrespondenceGames` = I18nKey("preferences:inCorrespondenceGames")
    val `correspondenceAndUnlimited` = I18nKey("preferences:correspondenceAndUnlimited")
    val `confirmResignationAndDrawOffers` = I18nKey("preferences:confirmResignationAndDrawOffers")
    val `castleByMovingTheKingTwoSquaresOrOntoTheRook` = I18nKey("preferences:castleByMovingTheKingTwoSquaresOrOntoTheRook")
    val `castleByMovingTwoSquares` = I18nKey("preferences:castleByMovingTwoSquares")
    val `castleByMovingOntoTheRook` = I18nKey("preferences:castleByMovingOntoTheRook")
    val `inputMovesWithTheKeyboard` = I18nKey("preferences:inputMovesWithTheKeyboard")
    val `snapArrowsToValidMoves` = I18nKey("preferences:snapArrowsToValidMoves")
    val `sayGgWpAfterLosingOrDrawing` = I18nKey("preferences:sayGgWpAfterLosingOrDrawing")
    val `yourPreferencesHaveBeenSaved` = I18nKey("preferences:yourPreferencesHaveBeenSaved")
    val `scrollOnTheBoardToReplayMoves` = I18nKey("preferences:scrollOnTheBoardToReplayMoves")
    val `correspondenceEmailNotification` = I18nKey("preferences:correspondenceEmailNotification")
    val `notifyStreamStart` = I18nKey("preferences:notifyStreamStart")
    val `notifyInboxMsg` = I18nKey("preferences:notifyInboxMsg")
    val `notifyForumMention` = I18nKey("preferences:notifyForumMention")
    val `notifyInvitedStudy` = I18nKey("preferences:notifyInvitedStudy")
    val `notifyGameEvent` = I18nKey("preferences:notifyGameEvent")
    val `notifyChallenge` = I18nKey("preferences:notifyChallenge")
    val `notifyTournamentSoon` = I18nKey("preferences:notifyTournamentSoon")
    val `notifyTimeAlarm` = I18nKey("preferences:notifyTimeAlarm")
    val `notifyBell` = I18nKey("preferences:notifyBell")
    val `notifyPush` = I18nKey("preferences:notifyPush")
    val `notifyWeb` = I18nKey("preferences:notifyWeb")
    val `notifyDevice` = I18nKey("preferences:notifyDevice")
    val `bellNotificationSound` = I18nKey("preferences:bellNotificationSound")

  object team:
    val `team` = I18nKey("team:team")
    val `teams` = I18nKey("team:teams")
    val `allTeams` = I18nKey("team:allTeams")
    val `leaderTeams` = I18nKey("team:leaderTeams")
    val `newTeam` = I18nKey("team:newTeam")
    val `myTeams` = I18nKey("team:myTeams")
    val `noTeamFound` = I18nKey("team:noTeamFound")
    val `joinTeam` = I18nKey("team:joinTeam")
    val `onlyLeaderLeavesTeam` = I18nKey("team:onlyLeaderLeavesTeam")
    val `quitTeam` = I18nKey("team:quitTeam")
    val `manuallyReviewAdmissionRequests` = I18nKey("team:manuallyReviewAdmissionRequests")
    val `manuallyReviewAdmissionRequestsHelp` = I18nKey("team:manuallyReviewAdmissionRequestsHelp")
    val `teamRecentMembers` = I18nKey("team:teamRecentMembers")
    val `kickSomeone` = I18nKey("team:kickSomeone")
    val `whoToKick` = I18nKey("team:whoToKick")
    val `willBeReviewed` = I18nKey("team:willBeReviewed")
    val `beingReviewed` = I18nKey("team:beingReviewed")
    val `requestDeclined` = I18nKey("team:requestDeclined")
    val `subToTeamMessages` = I18nKey("team:subToTeamMessages")
    val `teamBattle` = I18nKey("team:teamBattle")
    val `teamBattleOverview` = I18nKey("team:teamBattleOverview")
    val `teamTournament` = I18nKey("team:teamTournament")
    val `teamTournamentOverview` = I18nKey("team:teamTournamentOverview")
    val `swissTournamentOverview` = I18nKey("team:swissTournamentOverview")
    val `messageAllMembers` = I18nKey("team:messageAllMembers")
    val `messageAllMembersOverview` = I18nKey("team:messageAllMembersOverview")
    val `messageAllMembersLongDescription` = I18nKey("team:messageAllMembersLongDescription")
    val `teamsIlead` = I18nKey("team:teamsIlead")
    val `youWayWantToLinkOneOfTheseTournaments` = I18nKey("team:youWayWantToLinkOneOfTheseTournaments")
    val `usersWhoCanManageThisTeam` = I18nKey("team:usersWhoCanManageThisTeam")
    val `leadersChat` = I18nKey("team:leadersChat")
    val `closeTeam` = I18nKey("team:closeTeam")
    val `closeTeamDescription` = I18nKey("team:closeTeamDescription")
    val `entryCode` = I18nKey("team:entryCode")
    val `entryCodeDescriptionForLeader` = I18nKey("team:entryCodeDescriptionForLeader")
    val `incorrectEntryCode` = I18nKey("team:incorrectEntryCode")
    val `teamAlreadyExists` = I18nKey("team:teamAlreadyExists")
    val `upcomingTourns` = I18nKey("team:upcomingTourns")
    val `completedTourns` = I18nKey("team:completedTourns")
    val `declinedRequests` = I18nKey("team:declinedRequests")
    val `joinLichessVariantTeam` = I18nKey("team:joinLichessVariantTeam")
    val `teamPage` = I18nKey("team:teamPage")
    val `nbMembers` = I18nKey("team:nbMembers")
    val `teamLeaders` = I18nKey("team:teamLeaders")
    val `xJoinRequests` = I18nKey("team:xJoinRequests")

  object perfStat:
    val `perfStats` = I18nKey("perfStat:perfStats")
    val `viewTheGames` = I18nKey("perfStat:viewTheGames")
    val `provisional` = I18nKey("perfStat:provisional")
    val `notEnoughRatedGames` = I18nKey("perfStat:notEnoughRatedGames")
    val `progressOverLastXGames` = I18nKey("perfStat:progressOverLastXGames")
    val `ratingDeviation` = I18nKey("perfStat:ratingDeviation")
    val `ratingDeviationTooltip` = I18nKey("perfStat:ratingDeviationTooltip")
    val `totalGames` = I18nKey("perfStat:totalGames")
    val `ratedGames` = I18nKey("perfStat:ratedGames")
    val `tournamentGames` = I18nKey("perfStat:tournamentGames")
    val `berserkedGames` = I18nKey("perfStat:berserkedGames")
    val `timeSpentPlaying` = I18nKey("perfStat:timeSpentPlaying")
    val `averageOpponent` = I18nKey("perfStat:averageOpponent")
    val `victories` = I18nKey("perfStat:victories")
    val `defeats` = I18nKey("perfStat:defeats")
    val `disconnections` = I18nKey("perfStat:disconnections")
    val `notEnoughGames` = I18nKey("perfStat:notEnoughGames")
    val `highestRating` = I18nKey("perfStat:highestRating")
    val `lowestRating` = I18nKey("perfStat:lowestRating")
    val `fromXToY` = I18nKey("perfStat:fromXToY")
    val `winningStreak` = I18nKey("perfStat:winningStreak")
    val `losingStreak` = I18nKey("perfStat:losingStreak")
    val `longestStreak` = I18nKey("perfStat:longestStreak")
    val `currentStreak` = I18nKey("perfStat:currentStreak")
    val `bestRated` = I18nKey("perfStat:bestRated")
    val `worstRated` = I18nKey("perfStat:worstRated")
    val `gamesInARow` = I18nKey("perfStat:gamesInARow")
    val `lessThanOneHour` = I18nKey("perfStat:lessThanOneHour")
    val `maxTimePlaying` = I18nKey("perfStat:maxTimePlaying")
    val `now` = I18nKey("perfStat:now")

  object search:
    val `search` = I18nKey("search:search")
    val `advancedSearch` = I18nKey("search:advancedSearch")
    val `opponentName` = I18nKey("search:opponentName")
    val `loser` = I18nKey("search:loser")
    val `from` = I18nKey("search:from")
    val `to` = I18nKey("search:to")
    val `humanOrComputer` = I18nKey("search:humanOrComputer")
    val `aiLevel` = I18nKey("search:aiLevel")
    val `source` = I18nKey("search:source")
    val `nbTurns` = I18nKey("search:nbTurns")
    val `result` = I18nKey("search:result")
    val `winnerColor` = I18nKey("search:winnerColor")
    val `date` = I18nKey("search:date")
    val `sortBy` = I18nKey("search:sortBy")
    val `analysis` = I18nKey("search:analysis")
    val `onlyAnalysed` = I18nKey("search:onlyAnalysed")
    val `color` = I18nKey("search:color")
    val `evaluation` = I18nKey("search:evaluation")
    val `maxNumber` = I18nKey("search:maxNumber")
    val `maxNumberExplanation` = I18nKey("search:maxNumberExplanation")
    val `include` = I18nKey("search:include")
    val `descending` = I18nKey("search:descending")
    val `ascending` = I18nKey("search:ascending")
    val `ratingExplanation` = I18nKey("search:ratingExplanation")
    val `searchInXGames` = I18nKey("search:searchInXGames")
    val `xGamesFound` = I18nKey("search:xGamesFound")
    val `gamesFound` = I18nKey("search:gamesFound")

  object tourname:
    val `hourlyRapidArena` = I18nKey("tourname:hourlyRapidArena")
    val `hourlyRapid` = I18nKey("tourname:hourlyRapid")
    val `hourlyXArena` = I18nKey("tourname:hourlyXArena")
    val `hourlyX` = I18nKey("tourname:hourlyX")
    val `dailyRapidArena` = I18nKey("tourname:dailyRapidArena")
    val `dailyRapid` = I18nKey("tourname:dailyRapid")
    val `dailyClassicalArena` = I18nKey("tourname:dailyClassicalArena")
    val `dailyClassical` = I18nKey("tourname:dailyClassical")
    val `dailyXArena` = I18nKey("tourname:dailyXArena")
    val `dailyX` = I18nKey("tourname:dailyX")
    val `easternRapidArena` = I18nKey("tourname:easternRapidArena")
    val `easternRapid` = I18nKey("tourname:easternRapid")
    val `easternClassicalArena` = I18nKey("tourname:easternClassicalArena")
    val `easternClassical` = I18nKey("tourname:easternClassical")
    val `easternXArena` = I18nKey("tourname:easternXArena")
    val `easternX` = I18nKey("tourname:easternX")
    val `weeklyRapidArena` = I18nKey("tourname:weeklyRapidArena")
    val `weeklyRapid` = I18nKey("tourname:weeklyRapid")
    val `weeklyClassicalArena` = I18nKey("tourname:weeklyClassicalArena")
    val `weeklyClassical` = I18nKey("tourname:weeklyClassical")
    val `weeklyXArena` = I18nKey("tourname:weeklyXArena")
    val `weeklyX` = I18nKey("tourname:weeklyX")
    val `monthlyRapidArena` = I18nKey("tourname:monthlyRapidArena")
    val `monthlyRapid` = I18nKey("tourname:monthlyRapid")
    val `monthlyClassicalArena` = I18nKey("tourname:monthlyClassicalArena")
    val `monthlyClassical` = I18nKey("tourname:monthlyClassical")
    val `monthlyXArena` = I18nKey("tourname:monthlyXArena")
    val `monthlyX` = I18nKey("tourname:monthlyX")
    val `yearlyRapidArena` = I18nKey("tourname:yearlyRapidArena")
    val `yearlyRapid` = I18nKey("tourname:yearlyRapid")
    val `yearlyClassicalArena` = I18nKey("tourname:yearlyClassicalArena")
    val `yearlyClassical` = I18nKey("tourname:yearlyClassical")
    val `yearlyXArena` = I18nKey("tourname:yearlyXArena")
    val `yearlyX` = I18nKey("tourname:yearlyX")
    val `rapidShieldArena` = I18nKey("tourname:rapidShieldArena")
    val `rapidShield` = I18nKey("tourname:rapidShield")
    val `classicalShieldArena` = I18nKey("tourname:classicalShieldArena")
    val `classicalShield` = I18nKey("tourname:classicalShield")
    val `xShieldArena` = I18nKey("tourname:xShieldArena")
    val `xShield` = I18nKey("tourname:xShield")
    val `xTeamBattle` = I18nKey("tourname:xTeamBattle")
    val `eliteXArena` = I18nKey("tourname:eliteXArena")
    val `eliteX` = I18nKey("tourname:eliteX")
    val `xArena` = I18nKey("tourname:xArena")

  object faq:
    val `faqAbbreviation` = I18nKey("faq:faqAbbreviation")
    val `frequentlyAskedQuestions` = I18nKey("faq:frequentlyAskedQuestions")
    val `whyIsLichessCalledLichess` = I18nKey("faq:whyIsLichessCalledLichess")
    val `lichessCombinationLiveLightLibrePronounced` = I18nKey("faq:lichessCombinationLiveLightLibrePronounced")
    val `leechess` = I18nKey("faq:leechess")
    val `hearItPronouncedBySpecialist` = I18nKey("faq:hearItPronouncedBySpecialist")
    val `whyLiveLightLibre` = I18nKey("faq:whyLiveLightLibre")
    val `whyIsLilaCalledLila` = I18nKey("faq:whyIsLilaCalledLila")
    val `howCanIContributeToLichess` = I18nKey("faq:howCanIContributeToLichess")
    val `lichessPoweredByDonationsAndVolunteers` = I18nKey("faq:lichessPoweredByDonationsAndVolunteers")
    val `findMoreAndSeeHowHelp` = I18nKey("faq:findMoreAndSeeHowHelp")
    val `beingAPatron` = I18nKey("faq:beingAPatron")
    val `breakdownOfOurCosts` = I18nKey("faq:breakdownOfOurCosts")
    val `otherWaysToHelp` = I18nKey("faq:otherWaysToHelp")
    val `areThereWebsitesBasedOnLichess` = I18nKey("faq:areThereWebsitesBasedOnLichess")
    val `yesLichessInspiredOtherOpenSourceWebsites` = I18nKey("faq:yesLichessInspiredOtherOpenSourceWebsites")
    val `keyboardShortcuts` = I18nKey("faq:keyboardShortcuts")
    val `keyboardShortcutsExplanation` = I18nKey("faq:keyboardShortcutsExplanation")
    val `fairPlay` = I18nKey("faq:fairPlay")
    val `whenAmIEligibleRatinRefund` = I18nKey("faq:whenAmIEligibleRatinRefund")
    val `ratingRefundExplanation` = I18nKey("faq:ratingRefundExplanation")
    val `preventLeavingGameWithoutResigning` = I18nKey("faq:preventLeavingGameWithoutResigning")
    val `leavingGameWithoutResigningExplanation` = I18nKey("faq:leavingGameWithoutResigningExplanation")
    val `howCanIBecomeModerator` = I18nKey("faq:howCanIBecomeModerator")
    val `youCannotApply` = I18nKey("faq:youCannotApply")
    val `isCorrespondenceDifferent` = I18nKey("faq:isCorrespondenceDifferent")
    val `pleaseReadFairPlayPage` = I18nKey("faq:pleaseReadFairPlayPage")
    val `fairPlayPage` = I18nKey("faq:fairPlayPage")
    val `youCanUseOpeningBookNoEngine` = I18nKey("faq:youCanUseOpeningBookNoEngine")
    val `gameplay` = I18nKey("faq:gameplay")
    val `howBulletBlitzEtcDecided` = I18nKey("faq:howBulletBlitzEtcDecided")
    val `basedOnGameDuration` = I18nKey("faq:basedOnGameDuration")
    val `durationFormula` = I18nKey("faq:durationFormula")
    val `inferiorThanXsEqualYtimeControl` = I18nKey("faq:inferiorThanXsEqualYtimeControl")
    val `superiorThanXsEqualYtimeControl` = I18nKey("faq:superiorThanXsEqualYtimeControl")
    val `whatVariantsCanIplay` = I18nKey("faq:whatVariantsCanIplay")
    val `lichessSupportChessAnd` = I18nKey("faq:lichessSupportChessAnd")
    val `eightVariants` = I18nKey("faq:eightVariants")
    val `whatIsACPL` = I18nKey("faq:whatIsACPL")
    val `acplExplanation` = I18nKey("faq:acplExplanation")
    val `insufficientMaterial` = I18nKey("faq:insufficientMaterial")
    val `lichessFollowFIDErules` = I18nKey("faq:lichessFollowFIDErules")
    val `fideHandbookX` = I18nKey("faq:fideHandbookX")
    val `discoveringEnPassant` = I18nKey("faq:discoveringEnPassant")
    val `explainingEnPassant` = I18nKey("faq:explainingEnPassant")
    val `goodIntroduction` = I18nKey("faq:goodIntroduction")
    val `lichessTraining` = I18nKey("faq:lichessTraining")
    val `watchIMRosenCheckmate` = I18nKey("faq:watchIMRosenCheckmate")
    val `threefoldRepetition` = I18nKey("faq:threefoldRepetition")
    val `threefoldRepetitionExplanation` = I18nKey("faq:threefoldRepetitionExplanation")
    val `threefoldRepetitionLowerCase` = I18nKey("faq:threefoldRepetitionLowerCase")
    val `notRepeatedMoves` = I18nKey("faq:notRepeatedMoves")
    val `repeatedPositionsThatMatters` = I18nKey("faq:repeatedPositionsThatMatters")
    val `positions` = I18nKey("faq:positions")
    val `weRepeatedthreeTimesPosButNoDraw` = I18nKey("faq:weRepeatedthreeTimesPosButNoDraw")
    val `threeFoldHasToBeClaimed` = I18nKey("faq:threeFoldHasToBeClaimed")
    val `configure` = I18nKey("faq:configure")
    val `accounts` = I18nKey("faq:accounts")
    val `titlesAvailableOnLichess` = I18nKey("faq:titlesAvailableOnLichess")
    val `lichessRecognizeAllOTBtitles` = I18nKey("faq:lichessRecognizeAllOTBtitles")
    val `showYourTitle` = I18nKey("faq:showYourTitle")
    val `asWellAsManyNMtitles` = I18nKey("faq:asWellAsManyNMtitles")
    val `verificationForm` = I18nKey("faq:verificationForm")
    val `canIbecomeLM` = I18nKey("faq:canIbecomeLM")
    val `noUpperCaseDot` = I18nKey("faq:noUpperCaseDot")
    val `lMtitleComesToYouDoNotRequestIt` = I18nKey("faq:lMtitleComesToYouDoNotRequestIt")
    val `whatUsernameCanIchoose` = I18nKey("faq:whatUsernameCanIchoose")
    val `usernamesNotOffensive` = I18nKey("faq:usernamesNotOffensive")
    val `guidelines` = I18nKey("faq:guidelines")
    val `canIChangeMyUsername` = I18nKey("faq:canIChangeMyUsername")
    val `usernamesCannotBeChanged` = I18nKey("faq:usernamesCannotBeChanged")
    val `uniqueTrophies` = I18nKey("faq:uniqueTrophies")
    val `ownerUniqueTrophies` = I18nKey("faq:ownerUniqueTrophies")
    val `wayOfBerserkExplanation` = I18nKey("faq:wayOfBerserkExplanation")
    val `aHourlyBulletTournament` = I18nKey("faq:aHourlyBulletTournament")
    val `goldenZeeExplanation` = I18nKey("faq:goldenZeeExplanation")
    val `lichessRatings` = I18nKey("faq:lichessRatings")
    val `whichRatingSystemUsedByLichess` = I18nKey("faq:whichRatingSystemUsedByLichess")
    val `ratingSystemUsedByLichess` = I18nKey("faq:ratingSystemUsedByLichess")
    val `whatIsProvisionalRating` = I18nKey("faq:whatIsProvisionalRating")
    val `provisionalRatingExplanation` = I18nKey("faq:provisionalRatingExplanation")
    val `notPlayedEnoughRatedGamesAgainstX` = I18nKey("faq:notPlayedEnoughRatedGamesAgainstX")
    val `similarOpponents` = I18nKey("faq:similarOpponents")
    val `notPlayedRecently` = I18nKey("faq:notPlayedRecently")
    val `ratingDeviationMorethanOneHundredTen` = I18nKey("faq:ratingDeviationMorethanOneHundredTen")
    val `howDoLeaderoardsWork` = I18nKey("faq:howDoLeaderoardsWork")
    val `inOrderToAppearsYouMust` = I18nKey("faq:inOrderToAppearsYouMust")
    val `ratingLeaderboards` = I18nKey("faq:ratingLeaderboards")
    val `havePlayedMoreThanThirtyGamesInThatRating` = I18nKey("faq:havePlayedMoreThanThirtyGamesInThatRating")
    val `havePlayedARatedGameAtLeastOneWeekAgo` = I18nKey("faq:havePlayedARatedGameAtLeastOneWeekAgo")
    val `ratingDeviationLowerThanXinChessYinVariants` = I18nKey("faq:ratingDeviationLowerThanXinChessYinVariants")
    val `beInTopTen` = I18nKey("faq:beInTopTen")
    val `secondRequirementToStopOldPlayersTrustingLeaderboards` = I18nKey("faq:secondRequirementToStopOldPlayersTrustingLeaderboards")
    val `whyAreRatingHigher` = I18nKey("faq:whyAreRatingHigher")
    val `whyAreRatingHigherExplanation` = I18nKey("faq:whyAreRatingHigherExplanation")
    val `howToHideRatingWhilePlaying` = I18nKey("faq:howToHideRatingWhilePlaying")
    val `enableZenMode` = I18nKey("faq:enableZenMode")
    val `displayPreferences` = I18nKey("faq:displayPreferences")
    val `connexionLostCanIGetMyRatingBack` = I18nKey("faq:connexionLostCanIGetMyRatingBack")
    val `weCannotDoThatEvenIfItIsServerSideButThatsRare` = I18nKey("faq:weCannotDoThatEvenIfItIsServerSideButThatsRare")
    val `howToThreeDots` = I18nKey("faq:howToThreeDots")
    val `enableDisableNotificationPopUps` = I18nKey("faq:enableDisableNotificationPopUps")
    val `viewSiteInformationPopUp` = I18nKey("faq:viewSiteInformationPopUp")
    val `lichessCanOptionnalySendPopUps` = I18nKey("faq:lichessCanOptionnalySendPopUps")

  object lag:
    val `isLichessLagging` = I18nKey("lag:isLichessLagging")
    val `measurementInProgressThreeDot` = I18nKey("lag:measurementInProgressThreeDot")
    val `noAndYourNetworkIsGood` = I18nKey("lag:noAndYourNetworkIsGood")
    val `noAndYourNetworkIsBad` = I18nKey("lag:noAndYourNetworkIsBad")
    val `yesItWillBeFixedSoon` = I18nKey("lag:yesItWillBeFixedSoon")
    val `andNowTheLongAnswerLagComposedOfTwoValues` = I18nKey("lag:andNowTheLongAnswerLagComposedOfTwoValues")
    val `lichessServerLatency` = I18nKey("lag:lichessServerLatency")
    val `lichessServerLatencyExplanation` = I18nKey("lag:lichessServerLatencyExplanation")
    val `networkBetweenLichessAndYou` = I18nKey("lag:networkBetweenLichessAndYou")
    val `networkBetweenLichessAndYouExplanation` = I18nKey("lag:networkBetweenLichessAndYouExplanation")
    val `youCanFindTheseValuesAtAnyTimeByClickingOnYourUsername` = I18nKey("lag:youCanFindTheseValuesAtAnyTimeByClickingOnYourUsername")
    val `lagCompensation` = I18nKey("lag:lagCompensation")
    val `lagCompensationExplanation` = I18nKey("lag:lagCompensationExplanation")

  object swiss:
    val `swissTournaments` = I18nKey("swiss:swissTournaments")
    val `roundsAreStartedManually` = I18nKey("swiss:roundsAreStartedManually")
    val `startingIn` = I18nKey("swiss:startingIn")
    val `nextRound` = I18nKey("swiss:nextRound")
    val `tournStartDate` = I18nKey("swiss:tournStartDate")
    val `numberOfRounds` = I18nKey("swiss:numberOfRounds")
    val `numberOfRoundsHelp` = I18nKey("swiss:numberOfRoundsHelp")
    val `roundInterval` = I18nKey("swiss:roundInterval")
    val `forbiddenPairings` = I18nKey("swiss:forbiddenPairings")
    val `forbiddenPairingsHelp` = I18nKey("swiss:forbiddenPairingsHelp")
    val `newSwiss` = I18nKey("swiss:newSwiss")
    val `swissVsArenaQ` = I18nKey("swiss:swissVsArenaQ")
    val `swissVsArenaA` = I18nKey("swiss:swissVsArenaA")
    val `pointsCalculationQ` = I18nKey("swiss:pointsCalculationQ")
    val `pointsCalculationA` = I18nKey("swiss:pointsCalculationA")
    val `tiebreaksCalculationQ` = I18nKey("swiss:tiebreaksCalculationQ")
    val `sonnebornBergerScore` = I18nKey("swiss:sonnebornBergerScore")
    val `tiebreaksCalculationA` = I18nKey("swiss:tiebreaksCalculationA")
    val `pairingsQ` = I18nKey("swiss:pairingsQ")
    val `dutchSystem` = I18nKey("swiss:dutchSystem")
    val `FIDEHandbook` = I18nKey("swiss:FIDEHandbook")
    val `pairingsA` = I18nKey("swiss:pairingsA")
    val `moreRoundsThanPlayersQ` = I18nKey("swiss:moreRoundsThanPlayersQ")
    val `moreRoundsThanPlayersA` = I18nKey("swiss:moreRoundsThanPlayersA")
    val `restrictedToTeamsQ` = I18nKey("swiss:restrictedToTeamsQ")
    val `restrictedToTeamsA` = I18nKey("swiss:restrictedToTeamsA")
    val `numberOfByesQ` = I18nKey("swiss:numberOfByesQ")
    val `numberOfByesA` = I18nKey("swiss:numberOfByesA")
    val `earlyDrawsQ` = I18nKey("swiss:earlyDrawsQ")
    val `earlyDrawsA` = I18nKey("swiss:earlyDrawsA")
    val `whatIfOneDoesntPlayQ` = I18nKey("swiss:whatIfOneDoesntPlayQ")
    val `whatIfOneDoesntPlayA` = I18nKey("swiss:whatIfOneDoesntPlayA")
    val `protectionAgainstNoShowQ` = I18nKey("swiss:protectionAgainstNoShowQ")
    val `protectionAgainstNoShowA` = I18nKey("swiss:protectionAgainstNoShowA")
    val `lateJoinQ` = I18nKey("swiss:lateJoinQ")
    val `lateJoinA` = I18nKey("swiss:lateJoinA")
    val `willSwissReplaceArenasQ` = I18nKey("swiss:willSwissReplaceArenasQ")
    val `willSwissReplaceArenasA` = I18nKey("swiss:willSwissReplaceArenasA")
    val `roundRobinQ` = I18nKey("swiss:roundRobinQ")
    val `roundRobinA` = I18nKey("swiss:roundRobinA")
    val `otherSystemsQ` = I18nKey("swiss:otherSystemsQ")
    val `otherSystemsA` = I18nKey("swiss:otherSystemsA")
    val `swissDescription` = I18nKey("swiss:swissDescription")
    val `teamOnly` = I18nKey("swiss:teamOnly")
    val `joinOrCreateTeam` = I18nKey("swiss:joinOrCreateTeam")
    val `nowPlaying` = I18nKey("swiss:nowPlaying")
    val `startingSoon` = I18nKey("swiss:startingSoon")
    val `comparison` = I18nKey("swiss:comparison")
    val `tournDuration` = I18nKey("swiss:tournDuration")
    val `predefinedDuration` = I18nKey("swiss:predefinedDuration")
    val `durationUnknown` = I18nKey("swiss:durationUnknown")
    val `numberOfGames` = I18nKey("swiss:numberOfGames")
    val `numberOfGamesAsManyAsPossible` = I18nKey("swiss:numberOfGamesAsManyAsPossible")
    val `numberOfGamesPreDefined` = I18nKey("swiss:numberOfGamesPreDefined")
    val `pairingSystem` = I18nKey("swiss:pairingSystem")
    val `pairingSystemArena` = I18nKey("swiss:pairingSystemArena")
    val `pairingSystemSwiss` = I18nKey("swiss:pairingSystemSwiss")
    val `pairingWaitTime` = I18nKey("swiss:pairingWaitTime")
    val `pairingWaitTimeArena` = I18nKey("swiss:pairingWaitTimeArena")
    val `pairingWaitTimeSwiss` = I18nKey("swiss:pairingWaitTimeSwiss")
    val `identicalPairing` = I18nKey("swiss:identicalPairing")
    val `possibleButNotConsecutive` = I18nKey("swiss:possibleButNotConsecutive")
    val `identicalForbidden` = I18nKey("swiss:identicalForbidden")
    val `lateJoin` = I18nKey("swiss:lateJoin")
    val `lateJoinUntil` = I18nKey("swiss:lateJoinUntil")
    val `pause` = I18nKey("swiss:pause")
    val `pauseSwiss` = I18nKey("swiss:pauseSwiss")
    val `streaksAndBerserk` = I18nKey("swiss:streaksAndBerserk")
    val `similarToOTB` = I18nKey("swiss:similarToOTB")
    val `unlimitedAndFree` = I18nKey("swiss:unlimitedAndFree")
    val `predefinedUsers` = I18nKey("swiss:predefinedUsers")
    val `forbiddedUsers` = I18nKey("swiss:forbiddedUsers")
    val `playYourGames` = I18nKey("swiss:playYourGames")
    val `viewAllXRounds` = I18nKey("swiss:viewAllXRounds")
    val `nbRounds` = I18nKey("swiss:nbRounds")
    val `xRoundsSwiss` = I18nKey("swiss:xRoundsSwiss")
    val `oneRoundEveryXDays` = I18nKey("swiss:oneRoundEveryXDays")
    val `xSecondsBetweenRounds` = I18nKey("swiss:xSecondsBetweenRounds")
    val `xMinutesBetweenRounds` = I18nKey("swiss:xMinutesBetweenRounds")
    val `ongoingGames` = I18nKey("swiss:ongoingGames")

  object puzzle:
    val `puzzles` = I18nKey("puzzle:puzzles")
    val `puzzleThemes` = I18nKey("puzzle:puzzleThemes")
    val `recommended` = I18nKey("puzzle:recommended")
    val `phases` = I18nKey("puzzle:phases")
    val `motifs` = I18nKey("puzzle:motifs")
    val `advanced` = I18nKey("puzzle:advanced")
    val `lengths` = I18nKey("puzzle:lengths")
    val `mates` = I18nKey("puzzle:mates")
    val `goals` = I18nKey("puzzle:goals")
    val `origin` = I18nKey("puzzle:origin")
    val `specialMoves` = I18nKey("puzzle:specialMoves")
    val `didYouLikeThisPuzzle` = I18nKey("puzzle:didYouLikeThisPuzzle")
    val `voteToLoadNextOne` = I18nKey("puzzle:voteToLoadNextOne")
    val `upVote` = I18nKey("puzzle:upVote")
    val `downVote` = I18nKey("puzzle:downVote")
    val `yourPuzzleRatingWillNotChange` = I18nKey("puzzle:yourPuzzleRatingWillNotChange")
    val `findTheBestMoveForWhite` = I18nKey("puzzle:findTheBestMoveForWhite")
    val `findTheBestMoveForBlack` = I18nKey("puzzle:findTheBestMoveForBlack")
    val `toGetPersonalizedPuzzles` = I18nKey("puzzle:toGetPersonalizedPuzzles")
    val `puzzleId` = I18nKey("puzzle:puzzleId")
    val `puzzleOfTheDay` = I18nKey("puzzle:puzzleOfTheDay")
    val `dailyPuzzle` = I18nKey("puzzle:dailyPuzzle")
    val `clickToSolve` = I18nKey("puzzle:clickToSolve")
    val `goodMove` = I18nKey("puzzle:goodMove")
    val `bestMove` = I18nKey("puzzle:bestMove")
    val `keepGoing` = I18nKey("puzzle:keepGoing")
    val `puzzleSuccess` = I18nKey("puzzle:puzzleSuccess")
    val `puzzleComplete` = I18nKey("puzzle:puzzleComplete")
    val `byOpenings` = I18nKey("puzzle:byOpenings")
    val `puzzlesByOpenings` = I18nKey("puzzle:puzzlesByOpenings")
    val `openingsYouPlayedTheMost` = I18nKey("puzzle:openingsYouPlayedTheMost")
    val `useFindInPage` = I18nKey("puzzle:useFindInPage")
    val `useCtrlF` = I18nKey("puzzle:useCtrlF")
    val `notTheMove` = I18nKey("puzzle:notTheMove")
    val `trySomethingElse` = I18nKey("puzzle:trySomethingElse")
    val `ratingX` = I18nKey("puzzle:ratingX")
    val `hidden` = I18nKey("puzzle:hidden")
    val `fromGameLink` = I18nKey("puzzle:fromGameLink")
    val `continueTraining` = I18nKey("puzzle:continueTraining")
    val `difficultyLevel` = I18nKey("puzzle:difficultyLevel")
    val `normal` = I18nKey("puzzle:normal")
    val `easier` = I18nKey("puzzle:easier")
    val `easiest` = I18nKey("puzzle:easiest")
    val `harder` = I18nKey("puzzle:harder")
    val `hardest` = I18nKey("puzzle:hardest")
    val `example` = I18nKey("puzzle:example")
    val `addAnotherTheme` = I18nKey("puzzle:addAnotherTheme")
    val `nextPuzzle` = I18nKey("puzzle:nextPuzzle")
    val `jumpToNextPuzzleImmediately` = I18nKey("puzzle:jumpToNextPuzzleImmediately")
    val `puzzleDashboard` = I18nKey("puzzle:puzzleDashboard")
    val `improvementAreas` = I18nKey("puzzle:improvementAreas")
    val `strengths` = I18nKey("puzzle:strengths")
    val `history` = I18nKey("puzzle:history")
    val `solved` = I18nKey("puzzle:solved")
    val `failed` = I18nKey("puzzle:failed")
    val `streakDescription` = I18nKey("puzzle:streakDescription")
    val `yourStreakX` = I18nKey("puzzle:yourStreakX")
    val `streakSkipExplanation` = I18nKey("puzzle:streakSkipExplanation")
    val `continueTheStreak` = I18nKey("puzzle:continueTheStreak")
    val `newStreak` = I18nKey("puzzle:newStreak")
    val `fromMyGames` = I18nKey("puzzle:fromMyGames")
    val `lookupOfPlayer` = I18nKey("puzzle:lookupOfPlayer")
    val `fromXGames` = I18nKey("puzzle:fromXGames")
    val `searchPuzzles` = I18nKey("puzzle:searchPuzzles")
    val `fromMyGamesNone` = I18nKey("puzzle:fromMyGamesNone")
    val `fromXGamesFound` = I18nKey("puzzle:fromXGamesFound")
    val `puzzleDashboardDescription` = I18nKey("puzzle:puzzleDashboardDescription")
    val `percentSolved` = I18nKey("puzzle:percentSolved")
    val `noPuzzlesToShow` = I18nKey("puzzle:noPuzzlesToShow")
    val `improvementAreasDescription` = I18nKey("puzzle:improvementAreasDescription")
    val `strengthDescription` = I18nKey("puzzle:strengthDescription")
    val `playedXTimes` = I18nKey("puzzle:playedXTimes")
    val `nbPointsBelowYourPuzzleRating` = I18nKey("puzzle:nbPointsBelowYourPuzzleRating")
    val `nbPointsAboveYourPuzzleRating` = I18nKey("puzzle:nbPointsAboveYourPuzzleRating")
    val `nbPlayed` = I18nKey("puzzle:nbPlayed")
    val `nbToReplay` = I18nKey("puzzle:nbToReplay")

  object puzzleTheme:
    val `advancedPawn` = I18nKey("puzzleTheme:advancedPawn")
    val `advancedPawnDescription` = I18nKey("puzzleTheme:advancedPawnDescription")
    val `advantage` = I18nKey("puzzleTheme:advantage")
    val `advantageDescription` = I18nKey("puzzleTheme:advantageDescription")
    val `anastasiaMate` = I18nKey("puzzleTheme:anastasiaMate")
    val `anastasiaMateDescription` = I18nKey("puzzleTheme:anastasiaMateDescription")
    val `arabianMate` = I18nKey("puzzleTheme:arabianMate")
    val `arabianMateDescription` = I18nKey("puzzleTheme:arabianMateDescription")
    val `attackingF2F7` = I18nKey("puzzleTheme:attackingF2F7")
    val `attackingF2F7Description` = I18nKey("puzzleTheme:attackingF2F7Description")
    val `attraction` = I18nKey("puzzleTheme:attraction")
    val `attractionDescription` = I18nKey("puzzleTheme:attractionDescription")
    val `backRankMate` = I18nKey("puzzleTheme:backRankMate")
    val `backRankMateDescription` = I18nKey("puzzleTheme:backRankMateDescription")
    val `bishopEndgame` = I18nKey("puzzleTheme:bishopEndgame")
    val `bishopEndgameDescription` = I18nKey("puzzleTheme:bishopEndgameDescription")
    val `bodenMate` = I18nKey("puzzleTheme:bodenMate")
    val `bodenMateDescription` = I18nKey("puzzleTheme:bodenMateDescription")
    val `castling` = I18nKey("puzzleTheme:castling")
    val `castlingDescription` = I18nKey("puzzleTheme:castlingDescription")
    val `capturingDefender` = I18nKey("puzzleTheme:capturingDefender")
    val `capturingDefenderDescription` = I18nKey("puzzleTheme:capturingDefenderDescription")
    val `crushing` = I18nKey("puzzleTheme:crushing")
    val `crushingDescription` = I18nKey("puzzleTheme:crushingDescription")
    val `doubleBishopMate` = I18nKey("puzzleTheme:doubleBishopMate")
    val `doubleBishopMateDescription` = I18nKey("puzzleTheme:doubleBishopMateDescription")
    val `dovetailMate` = I18nKey("puzzleTheme:dovetailMate")
    val `dovetailMateDescription` = I18nKey("puzzleTheme:dovetailMateDescription")
    val `equality` = I18nKey("puzzleTheme:equality")
    val `equalityDescription` = I18nKey("puzzleTheme:equalityDescription")
    val `kingsideAttack` = I18nKey("puzzleTheme:kingsideAttack")
    val `kingsideAttackDescription` = I18nKey("puzzleTheme:kingsideAttackDescription")
    val `clearance` = I18nKey("puzzleTheme:clearance")
    val `clearanceDescription` = I18nKey("puzzleTheme:clearanceDescription")
    val `defensiveMove` = I18nKey("puzzleTheme:defensiveMove")
    val `defensiveMoveDescription` = I18nKey("puzzleTheme:defensiveMoveDescription")
    val `deflection` = I18nKey("puzzleTheme:deflection")
    val `deflectionDescription` = I18nKey("puzzleTheme:deflectionDescription")
    val `discoveredAttack` = I18nKey("puzzleTheme:discoveredAttack")
    val `discoveredAttackDescription` = I18nKey("puzzleTheme:discoveredAttackDescription")
    val `doubleCheck` = I18nKey("puzzleTheme:doubleCheck")
    val `doubleCheckDescription` = I18nKey("puzzleTheme:doubleCheckDescription")
    val `endgame` = I18nKey("puzzleTheme:endgame")
    val `endgameDescription` = I18nKey("puzzleTheme:endgameDescription")
    val `enPassantDescription` = I18nKey("puzzleTheme:enPassantDescription")
    val `exposedKing` = I18nKey("puzzleTheme:exposedKing")
    val `exposedKingDescription` = I18nKey("puzzleTheme:exposedKingDescription")
    val `fork` = I18nKey("puzzleTheme:fork")
    val `forkDescription` = I18nKey("puzzleTheme:forkDescription")
    val `hangingPiece` = I18nKey("puzzleTheme:hangingPiece")
    val `hangingPieceDescription` = I18nKey("puzzleTheme:hangingPieceDescription")
    val `hookMate` = I18nKey("puzzleTheme:hookMate")
    val `hookMateDescription` = I18nKey("puzzleTheme:hookMateDescription")
    val `interference` = I18nKey("puzzleTheme:interference")
    val `interferenceDescription` = I18nKey("puzzleTheme:interferenceDescription")
    val `intermezzo` = I18nKey("puzzleTheme:intermezzo")
    val `intermezzoDescription` = I18nKey("puzzleTheme:intermezzoDescription")
    val `knightEndgame` = I18nKey("puzzleTheme:knightEndgame")
    val `knightEndgameDescription` = I18nKey("puzzleTheme:knightEndgameDescription")
    val `long` = I18nKey("puzzleTheme:long")
    val `longDescription` = I18nKey("puzzleTheme:longDescription")
    val `master` = I18nKey("puzzleTheme:master")
    val `masterDescription` = I18nKey("puzzleTheme:masterDescription")
    val `masterVsMaster` = I18nKey("puzzleTheme:masterVsMaster")
    val `masterVsMasterDescription` = I18nKey("puzzleTheme:masterVsMasterDescription")
    val `mate` = I18nKey("puzzleTheme:mate")
    val `mateDescription` = I18nKey("puzzleTheme:mateDescription")
    val `mateIn1` = I18nKey("puzzleTheme:mateIn1")
    val `mateIn1Description` = I18nKey("puzzleTheme:mateIn1Description")
    val `mateIn2` = I18nKey("puzzleTheme:mateIn2")
    val `mateIn2Description` = I18nKey("puzzleTheme:mateIn2Description")
    val `mateIn3` = I18nKey("puzzleTheme:mateIn3")
    val `mateIn3Description` = I18nKey("puzzleTheme:mateIn3Description")
    val `mateIn4` = I18nKey("puzzleTheme:mateIn4")
    val `mateIn4Description` = I18nKey("puzzleTheme:mateIn4Description")
    val `mateIn5` = I18nKey("puzzleTheme:mateIn5")
    val `mateIn5Description` = I18nKey("puzzleTheme:mateIn5Description")
    val `middlegame` = I18nKey("puzzleTheme:middlegame")
    val `middlegameDescription` = I18nKey("puzzleTheme:middlegameDescription")
    val `oneMove` = I18nKey("puzzleTheme:oneMove")
    val `oneMoveDescription` = I18nKey("puzzleTheme:oneMoveDescription")
    val `opening` = I18nKey("puzzleTheme:opening")
    val `openingDescription` = I18nKey("puzzleTheme:openingDescription")
    val `pawnEndgame` = I18nKey("puzzleTheme:pawnEndgame")
    val `pawnEndgameDescription` = I18nKey("puzzleTheme:pawnEndgameDescription")
    val `pin` = I18nKey("puzzleTheme:pin")
    val `pinDescription` = I18nKey("puzzleTheme:pinDescription")
    val `promotion` = I18nKey("puzzleTheme:promotion")
    val `promotionDescription` = I18nKey("puzzleTheme:promotionDescription")
    val `queenEndgame` = I18nKey("puzzleTheme:queenEndgame")
    val `queenEndgameDescription` = I18nKey("puzzleTheme:queenEndgameDescription")
    val `queenRookEndgame` = I18nKey("puzzleTheme:queenRookEndgame")
    val `queenRookEndgameDescription` = I18nKey("puzzleTheme:queenRookEndgameDescription")
    val `queensideAttack` = I18nKey("puzzleTheme:queensideAttack")
    val `queensideAttackDescription` = I18nKey("puzzleTheme:queensideAttackDescription")
    val `quietMove` = I18nKey("puzzleTheme:quietMove")
    val `quietMoveDescription` = I18nKey("puzzleTheme:quietMoveDescription")
    val `rookEndgame` = I18nKey("puzzleTheme:rookEndgame")
    val `rookEndgameDescription` = I18nKey("puzzleTheme:rookEndgameDescription")
    val `sacrifice` = I18nKey("puzzleTheme:sacrifice")
    val `sacrificeDescription` = I18nKey("puzzleTheme:sacrificeDescription")
    val `short` = I18nKey("puzzleTheme:short")
    val `shortDescription` = I18nKey("puzzleTheme:shortDescription")
    val `skewer` = I18nKey("puzzleTheme:skewer")
    val `skewerDescription` = I18nKey("puzzleTheme:skewerDescription")
    val `smotheredMate` = I18nKey("puzzleTheme:smotheredMate")
    val `smotheredMateDescription` = I18nKey("puzzleTheme:smotheredMateDescription")
    val `superGM` = I18nKey("puzzleTheme:superGM")
    val `superGMDescription` = I18nKey("puzzleTheme:superGMDescription")
    val `trappedPiece` = I18nKey("puzzleTheme:trappedPiece")
    val `trappedPieceDescription` = I18nKey("puzzleTheme:trappedPieceDescription")
    val `underPromotion` = I18nKey("puzzleTheme:underPromotion")
    val `underPromotionDescription` = I18nKey("puzzleTheme:underPromotionDescription")
    val `veryLong` = I18nKey("puzzleTheme:veryLong")
    val `veryLongDescription` = I18nKey("puzzleTheme:veryLongDescription")
    val `xRayAttack` = I18nKey("puzzleTheme:xRayAttack")
    val `xRayAttackDescription` = I18nKey("puzzleTheme:xRayAttackDescription")
    val `zugzwang` = I18nKey("puzzleTheme:zugzwang")
    val `zugzwangDescription` = I18nKey("puzzleTheme:zugzwangDescription")
    val `healthyMix` = I18nKey("puzzleTheme:healthyMix")
    val `healthyMixDescription` = I18nKey("puzzleTheme:healthyMixDescription")
    val `playerGames` = I18nKey("puzzleTheme:playerGames")
    val `playerGamesDescription` = I18nKey("puzzleTheme:playerGamesDescription")
    val `puzzleDownloadInformation` = I18nKey("puzzleTheme:puzzleDownloadInformation")

  object challenge:
    val `challengesX` = I18nKey("challenge:challengesX")
    val `challengeToPlay` = I18nKey("challenge:challengeToPlay")
    val `challengeDeclined` = I18nKey("challenge:challengeDeclined")
    val `challengeAccepted` = I18nKey("challenge:challengeAccepted")
    val `challengeCanceled` = I18nKey("challenge:challengeCanceled")
    val `registerToSendChallenges` = I18nKey("challenge:registerToSendChallenges")
    val `youCannotChallengeX` = I18nKey("challenge:youCannotChallengeX")
    val `xDoesNotAcceptChallenges` = I18nKey("challenge:xDoesNotAcceptChallenges")
    val `yourXRatingIsTooFarFromY` = I18nKey("challenge:yourXRatingIsTooFarFromY")
    val `cannotChallengeDueToProvisionalXRating` = I18nKey("challenge:cannotChallengeDueToProvisionalXRating")
    val `xOnlyAcceptsChallengesFromFriends` = I18nKey("challenge:xOnlyAcceptsChallengesFromFriends")
    val `declineGeneric` = I18nKey("challenge:declineGeneric")
    val `declineLater` = I18nKey("challenge:declineLater")
    val `declineTooFast` = I18nKey("challenge:declineTooFast")
    val `declineTooSlow` = I18nKey("challenge:declineTooSlow")
    val `declineTimeControl` = I18nKey("challenge:declineTimeControl")
    val `declineRated` = I18nKey("challenge:declineRated")
    val `declineCasual` = I18nKey("challenge:declineCasual")
    val `declineStandard` = I18nKey("challenge:declineStandard")
    val `declineVariant` = I18nKey("challenge:declineVariant")
    val `declineNoBot` = I18nKey("challenge:declineNoBot")
    val `declineOnlyBot` = I18nKey("challenge:declineOnlyBot")
    val `inviteLichessUser` = I18nKey("challenge:inviteLichessUser")

  object storm:
    val `moveToStart` = I18nKey("storm:moveToStart")
    val `youPlayTheWhitePiecesInAllPuzzles` = I18nKey("storm:youPlayTheWhitePiecesInAllPuzzles")
    val `youPlayTheBlackPiecesInAllPuzzles` = I18nKey("storm:youPlayTheBlackPiecesInAllPuzzles")
    val `puzzlesSolved` = I18nKey("storm:puzzlesSolved")
    val `newDailyHighscore` = I18nKey("storm:newDailyHighscore")
    val `newWeeklyHighscore` = I18nKey("storm:newWeeklyHighscore")
    val `newMonthlyHighscore` = I18nKey("storm:newMonthlyHighscore")
    val `newAllTimeHighscore` = I18nKey("storm:newAllTimeHighscore")
    val `previousHighscoreWasX` = I18nKey("storm:previousHighscoreWasX")
    val `playAgain` = I18nKey("storm:playAgain")
    val `highscoreX` = I18nKey("storm:highscoreX")
    val `score` = I18nKey("storm:score")
    val `moves` = I18nKey("storm:moves")
    val `accuracy` = I18nKey("storm:accuracy")
    val `combo` = I18nKey("storm:combo")
    val `time` = I18nKey("storm:time")
    val `timePerMove` = I18nKey("storm:timePerMove")
    val `highestSolved` = I18nKey("storm:highestSolved")
    val `puzzlesPlayed` = I18nKey("storm:puzzlesPlayed")
    val `newRun` = I18nKey("storm:newRun")
    val `endRun` = I18nKey("storm:endRun")
    val `highscores` = I18nKey("storm:highscores")
    val `viewBestRuns` = I18nKey("storm:viewBestRuns")
    val `bestRunOfDay` = I18nKey("storm:bestRunOfDay")
    val `runs` = I18nKey("storm:runs")
    val `getReady` = I18nKey("storm:getReady")
    val `waitingForMorePlayers` = I18nKey("storm:waitingForMorePlayers")
    val `raceComplete` = I18nKey("storm:raceComplete")
    val `spectating` = I18nKey("storm:spectating")
    val `joinTheRace` = I18nKey("storm:joinTheRace")
    val `startTheRace` = I18nKey("storm:startTheRace")
    val `yourRankX` = I18nKey("storm:yourRankX")
    val `waitForRematch` = I18nKey("storm:waitForRematch")
    val `nextRace` = I18nKey("storm:nextRace")
    val `joinRematch` = I18nKey("storm:joinRematch")
    val `waitingToStart` = I18nKey("storm:waitingToStart")
    val `createNewGame` = I18nKey("storm:createNewGame")
    val `joinPublicRace` = I18nKey("storm:joinPublicRace")
    val `raceYourFriends` = I18nKey("storm:raceYourFriends")
    val `skip` = I18nKey("storm:skip")
    val `skipHelp` = I18nKey("storm:skipHelp")
    val `skipExplanation` = I18nKey("storm:skipExplanation")
    val `failedPuzzles` = I18nKey("storm:failedPuzzles")
    val `slowPuzzles` = I18nKey("storm:slowPuzzles")
    val `skippedPuzzle` = I18nKey("storm:skippedPuzzle")
    val `thisWeek` = I18nKey("storm:thisWeek")
    val `thisMonth` = I18nKey("storm:thisMonth")
    val `allTime` = I18nKey("storm:allTime")
    val `clickToReload` = I18nKey("storm:clickToReload")
    val `thisRunHasExpired` = I18nKey("storm:thisRunHasExpired")
    val `thisRunWasOpenedInAnotherTab` = I18nKey("storm:thisRunWasOpenedInAnotherTab")
    val `xRuns` = I18nKey("storm:xRuns")
    val `playedNbRunsOfPuzzleStorm` = I18nKey("storm:playedNbRunsOfPuzzleStorm")

  object ublog:
    val `xBlog` = I18nKey("ublog:xBlog")
    val `newPost` = I18nKey("ublog:newPost")
    val `editYourBlogPost` = I18nKey("ublog:editYourBlogPost")
    val `saveDraft` = I18nKey("ublog:saveDraft")
    val `postTitle` = I18nKey("ublog:postTitle")
    val `postIntro` = I18nKey("ublog:postIntro")
    val `postBody` = I18nKey("ublog:postBody")
    val `drafts` = I18nKey("ublog:drafts")
    val `published` = I18nKey("ublog:published")
    val `createBlogDiscussion` = I18nKey("ublog:createBlogDiscussion")
    val `createBlogDiscussionHelp` = I18nKey("ublog:createBlogDiscussionHelp")
    val `publishOnYourBlog` = I18nKey("ublog:publishOnYourBlog")
    val `publishHelp` = I18nKey("ublog:publishHelp")
    val `xPublishedY` = I18nKey("ublog:xPublishedY")
    val `thisPostIsPublished` = I18nKey("ublog:thisPostIsPublished")
    val `thisIsADraft` = I18nKey("ublog:thisIsADraft")
    val `moreBlogPostsBy` = I18nKey("ublog:moreBlogPostsBy")
    val `noPostsInThisBlogYet` = I18nKey("ublog:noPostsInThisBlogYet")
    val `noDrafts` = I18nKey("ublog:noDrafts")
    val `latestBlogPosts` = I18nKey("ublog:latestBlogPosts")
    val `uploadAnImageForYourPost` = I18nKey("ublog:uploadAnImageForYourPost")
    val `imageAlt` = I18nKey("ublog:imageAlt")
    val `imageCredit` = I18nKey("ublog:imageCredit")
    val `deleteBlog` = I18nKey("ublog:deleteBlog")
    val `deleteImage` = I18nKey("ublog:deleteImage")
    val `safeToUseImages` = I18nKey("ublog:safeToUseImages")
    val `selectPostTopics` = I18nKey("ublog:selectPostTopics")
    val `useImagesYouMadeYourself` = I18nKey("ublog:useImagesYouMadeYourself")
    val `safeAndRespectfulContent` = I18nKey("ublog:safeAndRespectfulContent")
    val `inappropriateContentAccountClosed` = I18nKey("ublog:inappropriateContentAccountClosed")
    val `blogTips` = I18nKey("ublog:blogTips")
    val `publishedNbBlogPosts` = I18nKey("ublog:publishedNbBlogPosts")
    val `nbViews` = I18nKey("ublog:nbViews")
    val `viewAllNbPosts` = I18nKey("ublog:viewAllNbPosts")

  object insight:
    val `xChessInsights` = I18nKey("insight:xChessInsights")
    val `xHasNoChessInsights` = I18nKey("insight:xHasNoChessInsights")
    val `insightsAreProtected` = I18nKey("insight:insightsAreProtected")
    val `cantSeeInsights` = I18nKey("insight:cantSeeInsights")
    val `generateInsights` = I18nKey("insight:generateInsights")
    val `crunchingData` = I18nKey("insight:crunchingData")
    val `maybeAskThemToChangeTheir` = I18nKey("insight:maybeAskThemToChangeTheir")
    val `insightsSettings` = I18nKey("insight:insightsSettings")

  object keyboardMove:
    val `keyboardInputCommands` = I18nKey("keyboardMove:keyboardInputCommands")
    val `performAMove` = I18nKey("keyboardMove:performAMove")
    val `movePieceFromE2ToE4` = I18nKey("keyboardMove:movePieceFromE2ToE4")
    val `moveKnightToC3` = I18nKey("keyboardMove:moveKnightToC3")
    val `kingsideCastle` = I18nKey("keyboardMove:kingsideCastle")
    val `queensideCastle` = I18nKey("keyboardMove:queensideCastle")
    val `promoteC8ToQueen` = I18nKey("keyboardMove:promoteC8ToQueen")
    val `dropARookAtB4` = I18nKey("keyboardMove:dropARookAtB4")
    val `offerOrAcceptDraw` = I18nKey("keyboardMove:offerOrAcceptDraw")
    val `readOutClocks` = I18nKey("keyboardMove:readOutClocks")
    val `readOutOpponentName` = I18nKey("keyboardMove:readOutOpponentName")
    val `otherCommands` = I18nKey("keyboardMove:otherCommands")
    val `tips` = I18nKey("keyboardMove:tips")
    val `ifTheAboveMoveNotationIsUnfamiliar` = I18nKey("keyboardMove:ifTheAboveMoveNotationIsUnfamiliar")
    val `includingAXToIndicateACapture` = I18nKey("keyboardMove:includingAXToIndicateACapture")
    val `bothTheLetterOAndTheDigitZero` = I18nKey("keyboardMove:bothTheLetterOAndTheDigitZero")
    val `ifItIsLegalToCastleBothWays` = I18nKey("keyboardMove:ifItIsLegalToCastleBothWays")
    val `capitalizationOnlyMattersInAmbiguousSituations` = I18nKey("keyboardMove:capitalizationOnlyMattersInAmbiguousSituations")
    val `toPremoveSimplyTypeTheDesiredPremove` = I18nKey("keyboardMove:toPremoveSimplyTypeTheDesiredPremove")

  object timeago:
    val `justNow` = I18nKey("timeago:justNow")
    val `rightNow` = I18nKey("timeago:rightNow")
    val `inNbSeconds` = I18nKey("timeago:inNbSeconds")
    val `inNbMinutes` = I18nKey("timeago:inNbMinutes")
    val `inNbHours` = I18nKey("timeago:inNbHours")
    val `inNbDays` = I18nKey("timeago:inNbDays")
    val `inNbWeeks` = I18nKey("timeago:inNbWeeks")
    val `inNbMonths` = I18nKey("timeago:inNbMonths")
    val `inNbYears` = I18nKey("timeago:inNbYears")
    val `nbSecondsAgo` = I18nKey("timeago:nbSecondsAgo")
    val `nbMinutesAgo` = I18nKey("timeago:nbMinutesAgo")
    val `nbHoursAgo` = I18nKey("timeago:nbHoursAgo")
    val `nbDaysAgo` = I18nKey("timeago:nbDaysAgo")
    val `nbWeeksAgo` = I18nKey("timeago:nbWeeksAgo")
    val `nbMonthsAgo` = I18nKey("timeago:nbMonthsAgo")
    val `nbYearsAgo` = I18nKey("timeago:nbYearsAgo")

  object oauthScope:
    val `newAccessToken` = I18nKey("oauthScope:newAccessToken")
    val `tokenGrantsPermission` = I18nKey("oauthScope:tokenGrantsPermission")
    val `carefullySelect` = I18nKey("oauthScope:carefullySelect")
    val `tokenDescription` = I18nKey("oauthScope:tokenDescription")
    val `rememberTokenUse` = I18nKey("oauthScope:rememberTokenUse")
    val `whatTheTokenCanDo` = I18nKey("oauthScope:whatTheTokenCanDo")
    val `doNotShareIt` = I18nKey("oauthScope:doNotShareIt")
    val `copyTokenNow` = I18nKey("oauthScope:copyTokenNow")
    val `preferenceRead` = I18nKey("oauthScope:preferenceRead")
    val `preferenceWrite` = I18nKey("oauthScope:preferenceWrite")
    val `emailRead` = I18nKey("oauthScope:emailRead")
    val `challengeRead` = I18nKey("oauthScope:challengeRead")
    val `challengeWrite` = I18nKey("oauthScope:challengeWrite")
    val `challengeBulk` = I18nKey("oauthScope:challengeBulk")
    val `studyRead` = I18nKey("oauthScope:studyRead")
    val `studyWrite` = I18nKey("oauthScope:studyWrite")
    val `tournamentWrite` = I18nKey("oauthScope:tournamentWrite")
    val `racerWrite` = I18nKey("oauthScope:racerWrite")
    val `puzzleRead` = I18nKey("oauthScope:puzzleRead")
    val `teamRead` = I18nKey("oauthScope:teamRead")
    val `teamWrite` = I18nKey("oauthScope:teamWrite")
    val `teamLead` = I18nKey("oauthScope:teamLead")
    val `followRead` = I18nKey("oauthScope:followRead")
    val `followWrite` = I18nKey("oauthScope:followWrite")
    val `msgWrite` = I18nKey("oauthScope:msgWrite")
    val `boardPlay` = I18nKey("oauthScope:boardPlay")
    val `botPlay` = I18nKey("oauthScope:botPlay")
    val `engineRead` = I18nKey("oauthScope:engineRead")
    val `engineWrite` = I18nKey("oauthScope:engineWrite")
    val `webLogin` = I18nKey("oauthScope:webLogin")
    val `webMod` = I18nKey("oauthScope:webMod")

