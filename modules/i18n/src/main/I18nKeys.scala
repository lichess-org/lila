// Generated with bin/trans-dump.js
package lila.i18n

// format: OFF
object I18nKeys {

val `playWithAFriend` = new I18nKey("playWithAFriend")
val `playWithTheMachine` = new I18nKey("playWithTheMachine")
val `toInviteSomeoneToPlayGiveThisUrl` = new I18nKey("toInviteSomeoneToPlayGiveThisUrl")
val `gameOver` = new I18nKey("gameOver")
val `waitingForOpponent` = new I18nKey("waitingForOpponent")
val `waiting` = new I18nKey("waiting")
val `yourTurn` = new I18nKey("yourTurn")
val `aiNameLevelAiLevel` = new I18nKey("aiNameLevelAiLevel")
val `level` = new I18nKey("level")
val `strength` = new I18nKey("strength")
val `toggleTheChat` = new I18nKey("toggleTheChat")
val `toggleSound` = new I18nKey("toggleSound")
val `chat` = new I18nKey("chat")
val `resign` = new I18nKey("resign")
val `checkmate` = new I18nKey("checkmate")
val `stalemate` = new I18nKey("stalemate")
val `white` = new I18nKey("white")
val `black` = new I18nKey("black")
val `randomColor` = new I18nKey("randomColor")
val `createAGame` = new I18nKey("createAGame")
val `whiteIsVictorious` = new I18nKey("whiteIsVictorious")
val `blackIsVictorious` = new I18nKey("blackIsVictorious")
val `youPlayTheWhitePieces` = new I18nKey("youPlayTheWhitePieces")
val `youPlayTheBlackPieces` = new I18nKey("youPlayTheBlackPieces")
val `itsYourTurn` = new I18nKey("itsYourTurn")
val `kingInTheCenter` = new I18nKey("kingInTheCenter")
val `threeChecks` = new I18nKey("threeChecks")
val `raceFinished` = new I18nKey("raceFinished")
val `variantEnding` = new I18nKey("variantEnding")
val `newOpponent` = new I18nKey("newOpponent")
val `yourOpponentWantsToPlayANewGameWithYou` = new I18nKey("yourOpponentWantsToPlayANewGameWithYou")
val `joinTheGame` = new I18nKey("joinTheGame")
val `whitePlays` = new I18nKey("whitePlays")
val `blackPlays` = new I18nKey("blackPlays")
val `opponentLeftChoices` = new I18nKey("opponentLeftChoices")
val `makeYourOpponentResign` = new I18nKey("makeYourOpponentResign")
val `forceResignation` = new I18nKey("forceResignation")
val `forceDraw` = new I18nKey("forceDraw")
val `talkInChat` = new I18nKey("talkInChat")
val `theFirstPersonToComeOnThisUrlWillPlayWithYou` = new I18nKey("theFirstPersonToComeOnThisUrlWillPlayWithYou")
val `whiteResigned` = new I18nKey("whiteResigned")
val `blackResigned` = new I18nKey("blackResigned")
val `whiteLeftTheGame` = new I18nKey("whiteLeftTheGame")
val `blackLeftTheGame` = new I18nKey("blackLeftTheGame")
val `shareThisUrlToLetSpectatorsSeeTheGame` = new I18nKey("shareThisUrlToLetSpectatorsSeeTheGame")
val `theComputerAnalysisHasFailed` = new I18nKey("theComputerAnalysisHasFailed")
val `viewTheComputerAnalysis` = new I18nKey("viewTheComputerAnalysis")
val `requestAComputerAnalysis` = new I18nKey("requestAComputerAnalysis")
val `computerAnalysis` = new I18nKey("computerAnalysis")
val `computerAnalysisAvailable` = new I18nKey("computerAnalysisAvailable")
val `analysis` = new I18nKey("analysis")
val `depthX` = new I18nKey("depthX")
val `usingServerAnalysis` = new I18nKey("usingServerAnalysis")
val `loadingEngine` = new I18nKey("loadingEngine")
val `cloudAnalysis` = new I18nKey("cloudAnalysis")
val `goDeeper` = new I18nKey("goDeeper")
val `showThreat` = new I18nKey("showThreat")
val `inLocalBrowser` = new I18nKey("inLocalBrowser")
val `toggleLocalEvaluation` = new I18nKey("toggleLocalEvaluation")
val `promoteVariation` = new I18nKey("promoteVariation")
val `makeMainLine` = new I18nKey("makeMainLine")
val `deleteFromHere` = new I18nKey("deleteFromHere")
val `forceVariation` = new I18nKey("forceVariation")
val `move` = new I18nKey("move")
val `variantLoss` = new I18nKey("variantLoss")
val `variantWin` = new I18nKey("variantWin")
val `insufficientMaterial` = new I18nKey("insufficientMaterial")
val `pawnMove` = new I18nKey("pawnMove")
val `capture` = new I18nKey("capture")
val `close` = new I18nKey("close")
val `winning` = new I18nKey("winning")
val `losing` = new I18nKey("losing")
val `drawn` = new I18nKey("drawn")
val `unknown` = new I18nKey("unknown")
val `database` = new I18nKey("database")
val `whiteDrawBlack` = new I18nKey("whiteDrawBlack")
val `averageRatingX` = new I18nKey("averageRatingX")
val `recentGames` = new I18nKey("recentGames")
val `topGames` = new I18nKey("topGames")
val `masterDbExplanation` = new I18nKey("masterDbExplanation")
val `noGameFound` = new I18nKey("noGameFound")
val `maybeIncludeMoreGamesFromThePreferencesMenu` = new I18nKey("maybeIncludeMoreGamesFromThePreferencesMenu")
val `openingExplorer` = new I18nKey("openingExplorer")
val `xOpeningExplorer` = new I18nKey("xOpeningExplorer")
val `winPreventedBy50MoveRule` = new I18nKey("winPreventedBy50MoveRule")
val `lossSavedBy50MoveRule` = new I18nKey("lossSavedBy50MoveRule")
val `allSet` = new I18nKey("allSet")
val `importPgn` = new I18nKey("importPgn")
val `delete` = new I18nKey("delete")
val `deleteThisImportedGame` = new I18nKey("deleteThisImportedGame")
val `replayMode` = new I18nKey("replayMode")
val `realtimeReplay` = new I18nKey("realtimeReplay")
val `byCPL` = new I18nKey("byCPL")
val `openStudy` = new I18nKey("openStudy")
val `enable` = new I18nKey("enable")
val `bestMoveArrow` = new I18nKey("bestMoveArrow")
val `evaluationGauge` = new I18nKey("evaluationGauge")
val `multipleLines` = new I18nKey("multipleLines")
val `cpus` = new I18nKey("cpus")
val `memory` = new I18nKey("memory")
val `infiniteAnalysis` = new I18nKey("infiniteAnalysis")
val `removesTheDepthLimit` = new I18nKey("removesTheDepthLimit")
val `blunder` = new I18nKey("blunder")
val `mistake` = new I18nKey("mistake")
val `inaccuracy` = new I18nKey("inaccuracy")
val `moveTimes` = new I18nKey("moveTimes")
val `flipBoard` = new I18nKey("flipBoard")
val `threefoldRepetition` = new I18nKey("threefoldRepetition")
val `claimADraw` = new I18nKey("claimADraw")
val `offerDraw` = new I18nKey("offerDraw")
val `draw` = new I18nKey("draw")
val `currentGames` = new I18nKey("currentGames")
val `viewInFullSize` = new I18nKey("viewInFullSize")
val `logOut` = new I18nKey("logOut")
val `signIn` = new I18nKey("signIn")
val `youNeedAnAccountToDoThat` = new I18nKey("youNeedAnAccountToDoThat")
val `signUp` = new I18nKey("signUp")
val `computersAreNotAllowedToPlay` = new I18nKey("computersAreNotAllowedToPlay")
val `games` = new I18nKey("games")
val `forum` = new I18nKey("forum")
val `xPostedInForumY` = new I18nKey("xPostedInForumY")
val `latestForumPosts` = new I18nKey("latestForumPosts")
val `players` = new I18nKey("players")
val `friends` = new I18nKey("friends")
val `discussions` = new I18nKey("discussions")
val `today` = new I18nKey("today")
val `yesterday` = new I18nKey("yesterday")
val `minutesPerSide` = new I18nKey("minutesPerSide")
val `variant` = new I18nKey("variant")
val `variants` = new I18nKey("variants")
val `timeControl` = new I18nKey("timeControl")
val `realTime` = new I18nKey("realTime")
val `correspondence` = new I18nKey("correspondence")
val `daysPerTurn` = new I18nKey("daysPerTurn")
val `oneDay` = new I18nKey("oneDay")
val `time` = new I18nKey("time")
val `rating` = new I18nKey("rating")
val `ratingStats` = new I18nKey("ratingStats")
val `username` = new I18nKey("username")
val `usernameOrEmail` = new I18nKey("usernameOrEmail")
val `changeUsername` = new I18nKey("changeUsername")
val `changeUsernameNotSame` = new I18nKey("changeUsernameNotSame")
val `changeUsernameDescription` = new I18nKey("changeUsernameDescription")
val `password` = new I18nKey("password")
val `changePassword` = new I18nKey("changePassword")
val `changeEmail` = new I18nKey("changeEmail")
val `email` = new I18nKey("email")
val `passwordReset` = new I18nKey("passwordReset")
val `forgotPassword` = new I18nKey("forgotPassword")
val `rank` = new I18nKey("rank")
val `rankX` = new I18nKey("rankX")
val `gamesPlayed` = new I18nKey("gamesPlayed")
val `cancel` = new I18nKey("cancel")
val `whiteTimeOut` = new I18nKey("whiteTimeOut")
val `blackTimeOut` = new I18nKey("blackTimeOut")
val `drawOfferSent` = new I18nKey("drawOfferSent")
val `drawOfferDeclined` = new I18nKey("drawOfferDeclined")
val `drawOfferAccepted` = new I18nKey("drawOfferAccepted")
val `drawOfferCanceled` = new I18nKey("drawOfferCanceled")
val `whiteOffersDraw` = new I18nKey("whiteOffersDraw")
val `blackOffersDraw` = new I18nKey("blackOffersDraw")
val `whiteDeclinesDraw` = new I18nKey("whiteDeclinesDraw")
val `blackDeclinesDraw` = new I18nKey("blackDeclinesDraw")
val `yourOpponentOffersADraw` = new I18nKey("yourOpponentOffersADraw")
val `accept` = new I18nKey("accept")
val `decline` = new I18nKey("decline")
val `playingRightNow` = new I18nKey("playingRightNow")
val `eventInProgress` = new I18nKey("eventInProgress")
val `finished` = new I18nKey("finished")
val `finishesX` = new I18nKey("finishesX")
val `abortGame` = new I18nKey("abortGame")
val `gameAborted` = new I18nKey("gameAborted")
val `standard` = new I18nKey("standard")
val `unlimited` = new I18nKey("unlimited")
val `mode` = new I18nKey("mode")
val `casual` = new I18nKey("casual")
val `rated` = new I18nKey("rated")
val `casualTournament` = new I18nKey("casualTournament")
val `ratedTournament` = new I18nKey("ratedTournament")
val `thisGameIsRated` = new I18nKey("thisGameIsRated")
val `rematch` = new I18nKey("rematch")
val `rematchOfferSent` = new I18nKey("rematchOfferSent")
val `rematchOfferSentWhite` = new I18nKey("rematchOfferSentWhite")
val `rematchOfferSentBlack` = new I18nKey("rematchOfferSentBlack")
val `rematchOfferAccepted` = new I18nKey("rematchOfferAccepted")
val `rematchOfferCanceled` = new I18nKey("rematchOfferCanceled")
val `rematchOfferDeclined` = new I18nKey("rematchOfferDeclined")
val `cancelRematchOffer` = new I18nKey("cancelRematchOffer")
val `viewRematch` = new I18nKey("viewRematch")
val `confirmMove` = new I18nKey("confirmMove")
val `play` = new I18nKey("play")
val `inbox` = new I18nKey("inbox")
val `chatRoom` = new I18nKey("chatRoom")
val `loginToChat` = new I18nKey("loginToChat")
val `youHaveBeenTimedOut` = new I18nKey("youHaveBeenTimedOut")
val `spectatorRoom` = new I18nKey("spectatorRoom")
val `composeMessage` = new I18nKey("composeMessage")
val `noNewMessages` = new I18nKey("noNewMessages")
val `subject` = new I18nKey("subject")
val `recipient` = new I18nKey("recipient")
val `send` = new I18nKey("send")
val `incrementInSeconds` = new I18nKey("incrementInSeconds")
val `freeOnlineChess` = new I18nKey("freeOnlineChess")
val `spectators` = new I18nKey("spectators")
val `exportGames` = new I18nKey("exportGames")
val `ratingRange` = new I18nKey("ratingRange")
val `thisAccountViolatedTos` = new I18nKey("thisAccountViolatedTos")
val `thisPlayerArtificiallyIncreasesTheirRating` = new I18nKey("thisPlayerArtificiallyIncreasesTheirRating")
val `openingExplorerAndTablebase` = new I18nKey("openingExplorerAndTablebase")
val `takeback` = new I18nKey("takeback")
val `proposeATakeback` = new I18nKey("proposeATakeback")
val `takebackPropositionSent` = new I18nKey("takebackPropositionSent")
val `takebackPropositionDeclined` = new I18nKey("takebackPropositionDeclined")
val `takebackPropositionAccepted` = new I18nKey("takebackPropositionAccepted")
val `takebackPropositionCanceled` = new I18nKey("takebackPropositionCanceled")
val `yourOpponentProposesATakeback` = new I18nKey("yourOpponentProposesATakeback")
val `bookmarkThisGame` = new I18nKey("bookmarkThisGame")
val `tournament` = new I18nKey("tournament")
val `tournaments` = new I18nKey("tournaments")
val `tournamentPoints` = new I18nKey("tournamentPoints")
val `viewTournament` = new I18nKey("viewTournament")
val `backToTournament` = new I18nKey("backToTournament")
val `thematic` = new I18nKey("thematic")
val `yourPerfRatingIsProvisional` = new I18nKey("yourPerfRatingIsProvisional")
val `yourPerfRatingIsTooHigh` = new I18nKey("yourPerfRatingIsTooHigh")
val `yourTopWeeklyPerfRatingIsTooHigh` = new I18nKey("yourTopWeeklyPerfRatingIsTooHigh")
val `yourPerfRatingIsTooLow` = new I18nKey("yourPerfRatingIsTooLow")
val `ratedMoreThanInPerf` = new I18nKey("ratedMoreThanInPerf")
val `ratedLessThanInPerf` = new I18nKey("ratedLessThanInPerf")
val `mustBeInTeam` = new I18nKey("mustBeInTeam")
val `youAreNotInTeam` = new I18nKey("youAreNotInTeam")
val `backToGame` = new I18nKey("backToGame")
val `siteDescription` = new I18nKey("siteDescription")
val `xJoinedTeamY` = new I18nKey("xJoinedTeamY")
val `xCreatedTeamY` = new I18nKey("xCreatedTeamY")
val `xStartedStreaming` = new I18nKey("xStartedStreaming")
val `averageElo` = new I18nKey("averageElo")
val `location` = new I18nKey("location")
val `filterGames` = new I18nKey("filterGames")
val `reset` = new I18nKey("reset")
val `apply` = new I18nKey("apply")
val `save` = new I18nKey("save")
val `leaderboard` = new I18nKey("leaderboard")
val `pasteTheFenStringHere` = new I18nKey("pasteTheFenStringHere")
val `pasteThePgnStringHere` = new I18nKey("pasteThePgnStringHere")
val `fromPosition` = new I18nKey("fromPosition")
val `continueFromHere` = new I18nKey("continueFromHere")
val `toStudy` = new I18nKey("toStudy")
val `importGame` = new I18nKey("importGame")
val `importGameExplanation` = new I18nKey("importGameExplanation")
val `thisIsAChessCaptcha` = new I18nKey("thisIsAChessCaptcha")
val `clickOnTheBoardToMakeYourMove` = new I18nKey("clickOnTheBoardToMakeYourMove")
val `captcha.fail` = new I18nKey("captcha.fail")
val `notACheckmate` = new I18nKey("notACheckmate")
val `whiteCheckmatesInOneMove` = new I18nKey("whiteCheckmatesInOneMove")
val `blackCheckmatesInOneMove` = new I18nKey("blackCheckmatesInOneMove")
val `retry` = new I18nKey("retry")
val `reconnecting` = new I18nKey("reconnecting")
val `noFriendsOnline` = new I18nKey("noFriendsOnline")
val `findFriends` = new I18nKey("findFriends")
val `favoriteOpponents` = new I18nKey("favoriteOpponents")
val `follow` = new I18nKey("follow")
val `following` = new I18nKey("following")
val `unfollow` = new I18nKey("unfollow")
val `block` = new I18nKey("block")
val `blocked` = new I18nKey("blocked")
val `unblock` = new I18nKey("unblock")
val `followsYou` = new I18nKey("followsYou")
val `xStartedFollowingY` = new I18nKey("xStartedFollowingY")
val `more` = new I18nKey("more")
val `memberSince` = new I18nKey("memberSince")
val `lastSeenActive` = new I18nKey("lastSeenActive")
val `player` = new I18nKey("player")
val `list` = new I18nKey("list")
val `graph` = new I18nKey("graph")
val `required` = new I18nKey("required")
val `openTournaments` = new I18nKey("openTournaments")
val `duration` = new I18nKey("duration")
val `winner` = new I18nKey("winner")
val `standing` = new I18nKey("standing")
val `createANewTournament` = new I18nKey("createANewTournament")
val `tournamentCalendar` = new I18nKey("tournamentCalendar")
val `conditionOfEntry` = new I18nKey("conditionOfEntry")
val `advancedSettings` = new I18nKey("advancedSettings")
val `safeTournamentName` = new I18nKey("safeTournamentName")
val `inappropriateNameWarning` = new I18nKey("inappropriateNameWarning")
val `emptyTournamentName` = new I18nKey("emptyTournamentName")
val `recommendNotTouching` = new I18nKey("recommendNotTouching")
val `fewerPlayers` = new I18nKey("fewerPlayers")
val `showAdvancedSettings` = new I18nKey("showAdvancedSettings")
val `makePrivateTournament` = new I18nKey("makePrivateTournament")
val `join` = new I18nKey("join")
val `withdraw` = new I18nKey("withdraw")
val `points` = new I18nKey("points")
val `wins` = new I18nKey("wins")
val `losses` = new I18nKey("losses")
val `winStreak` = new I18nKey("winStreak")
val `createdBy` = new I18nKey("createdBy")
val `tournamentIsStarting` = new I18nKey("tournamentIsStarting")
val `tournamentPairingsAreNowClosed` = new I18nKey("tournamentPairingsAreNowClosed")
val `standByX` = new I18nKey("standByX")
val `youArePlaying` = new I18nKey("youArePlaying")
val `winRate` = new I18nKey("winRate")
val `berserkRate` = new I18nKey("berserkRate")
val `performance` = new I18nKey("performance")
val `tournamentComplete` = new I18nKey("tournamentComplete")
val `movesPlayed` = new I18nKey("movesPlayed")
val `whiteWins` = new I18nKey("whiteWins")
val `blackWins` = new I18nKey("blackWins")
val `draws` = new I18nKey("draws")
val `nextXTournament` = new I18nKey("nextXTournament")
val `averageOpponent` = new I18nKey("averageOpponent")
val `membersOnly` = new I18nKey("membersOnly")
val `boardEditor` = new I18nKey("boardEditor")
val `setTheBoard` = new I18nKey("setTheBoard")
val `popularOpenings` = new I18nKey("popularOpenings")
val `startPosition` = new I18nKey("startPosition")
val `clearBoard` = new I18nKey("clearBoard")
val `savePosition` = new I18nKey("savePosition")
val `loadPosition` = new I18nKey("loadPosition")
val `isPrivate` = new I18nKey("isPrivate")
val `reportXToModerators` = new I18nKey("reportXToModerators")
val `profileCompletion` = new I18nKey("profileCompletion")
val `xRating` = new I18nKey("xRating")
val `ifNoneLeaveEmpty` = new I18nKey("ifNoneLeaveEmpty")
val `gameCompletionRate` = new I18nKey("gameCompletionRate")
val `profile` = new I18nKey("profile")
val `editProfile` = new I18nKey("editProfile")
val `firstName` = new I18nKey("firstName")
val `lastName` = new I18nKey("lastName")
val `biography` = new I18nKey("biography")
val `country` = new I18nKey("country")
val `thankYou` = new I18nKey("thankYou")
val `socialMediaLinks` = new I18nKey("socialMediaLinks")
val `inlineNotation` = new I18nKey("inlineNotation")
val `watchLichessTV` = new I18nKey("watchLichessTV")
val `previouslyOnLichessTV` = new I18nKey("previouslyOnLichessTV")
val `onlinePlayers` = new I18nKey("onlinePlayers")
val `activeToday` = new I18nKey("activeToday")
val `activePlayers` = new I18nKey("activePlayers")
val `bewareTheGameIsRatedButHasNoClock` = new I18nKey("bewareTheGameIsRatedButHasNoClock")
val `success` = new I18nKey("success")
val `automaticallyProceedToNextGameAfterMoving` = new I18nKey("automaticallyProceedToNextGameAfterMoving")
val `autoSwitch` = new I18nKey("autoSwitch")
val `puzzles` = new I18nKey("puzzles")
val `latestUpdates` = new I18nKey("latestUpdates")
val `tournamentWinners` = new I18nKey("tournamentWinners")
val `name` = new I18nKey("name")
val `description` = new I18nKey("description")
val `descPrivate` = new I18nKey("descPrivate")
val `descPrivateHelp` = new I18nKey("descPrivateHelp")
val `no` = new I18nKey("no")
val `yes` = new I18nKey("yes")
val `help` = new I18nKey("help")
val `createANewTopic` = new I18nKey("createANewTopic")
val `topics` = new I18nKey("topics")
val `posts` = new I18nKey("posts")
val `lastPost` = new I18nKey("lastPost")
val `views` = new I18nKey("views")
val `replies` = new I18nKey("replies")
val `replyToThisTopic` = new I18nKey("replyToThisTopic")
val `reply` = new I18nKey("reply")
val `message` = new I18nKey("message")
val `createTheTopic` = new I18nKey("createTheTopic")
val `reportAUser` = new I18nKey("reportAUser")
val `user` = new I18nKey("user")
val `reason` = new I18nKey("reason")
val `whatIsIheMatter` = new I18nKey("whatIsIheMatter")
val `cheat` = new I18nKey("cheat")
val `insult` = new I18nKey("insult")
val `troll` = new I18nKey("troll")
val `ratingManipulation` = new I18nKey("ratingManipulation")
val `other` = new I18nKey("other")
val `reportDescriptionHelp` = new I18nKey("reportDescriptionHelp")
val `error.provideOneCheatedGameLink` = new I18nKey("error.provideOneCheatedGameLink")
val `by` = new I18nKey("by")
val `thisTopicIsNowClosed` = new I18nKey("thisTopicIsNowClosed")
val `theming` = new I18nKey("theming")
val `blog` = new I18nKey("blog")
val `questionsAndAnswers` = new I18nKey("questionsAndAnswers")
val `notes` = new I18nKey("notes")
val `typePrivateNotesHere` = new I18nKey("typePrivateNotesHere")
val `invalidUsernameOrPassword` = new I18nKey("invalidUsernameOrPassword")
val `incorrectPassword` = new I18nKey("incorrectPassword")
val `invalidAuthenticationCode` = new I18nKey("invalidAuthenticationCode")
val `emailMeALink` = new I18nKey("emailMeALink")
val `currentPassword` = new I18nKey("currentPassword")
val `newPassword` = new I18nKey("newPassword")
val `newPasswordAgain` = new I18nKey("newPasswordAgain")
val `newPasswordsDontMatch` = new I18nKey("newPasswordsDontMatch")
val `newPasswordStrength` = new I18nKey("newPasswordStrength")
val `clockInitialTime` = new I18nKey("clockInitialTime")
val `clockIncrement` = new I18nKey("clockIncrement")
val `privacy` = new I18nKey("privacy")
val `privacyPolicy` = new I18nKey("privacyPolicy")
val `letOtherPlayersFollowYou` = new I18nKey("letOtherPlayersFollowYou")
val `letOtherPlayersChallengeYou` = new I18nKey("letOtherPlayersChallengeYou")
val `letOtherPlayersInviteYouToStudy` = new I18nKey("letOtherPlayersInviteYouToStudy")
val `sound` = new I18nKey("sound")
val `none` = new I18nKey("none")
val `fast` = new I18nKey("fast")
val `normal` = new I18nKey("normal")
val `slow` = new I18nKey("slow")
val `insideTheBoard` = new I18nKey("insideTheBoard")
val `outsideTheBoard` = new I18nKey("outsideTheBoard")
val `onSlowGames` = new I18nKey("onSlowGames")
val `always` = new I18nKey("always")
val `never` = new I18nKey("never")
val `difficultyEasy` = new I18nKey("difficultyEasy")
val `difficultyNormal` = new I18nKey("difficultyNormal")
val `difficultyHard` = new I18nKey("difficultyHard")
val `xCompetesInY` = new I18nKey("xCompetesInY")
val `xAskedY` = new I18nKey("xAskedY")
val `xAnsweredY` = new I18nKey("xAnsweredY")
val `xCommentedY` = new I18nKey("xCommentedY")
val `victory` = new I18nKey("victory")
val `defeat` = new I18nKey("defeat")
val `victoryVsYInZ` = new I18nKey("victoryVsYInZ")
val `defeatVsYInZ` = new I18nKey("defeatVsYInZ")
val `drawVsYInZ` = new I18nKey("drawVsYInZ")
val `timeline` = new I18nKey("timeline")
val `starting` = new I18nKey("starting")
val `allInformationIsPublicAndOptional` = new I18nKey("allInformationIsPublicAndOptional")
val `yourCityRegionOrDepartment` = new I18nKey("yourCityRegionOrDepartment")
val `biographyDescription` = new I18nKey("biographyDescription")
val `listBlockedPlayers` = new I18nKey("listBlockedPlayers")
val `human` = new I18nKey("human")
val `computer` = new I18nKey("computer")
val `side` = new I18nKey("side")
val `clock` = new I18nKey("clock")
val `unauthorizedError` = new I18nKey("unauthorizedError")
val `noInternetConnection` = new I18nKey("noInternetConnection")
val `connectedToLichess` = new I18nKey("connectedToLichess")
val `signedOut` = new I18nKey("signedOut")
val `loginSuccessful` = new I18nKey("loginSuccessful")
val `playOnTheBoardOffline` = new I18nKey("playOnTheBoardOffline")
val `playOfflineComputer` = new I18nKey("playOfflineComputer")
val `opponent` = new I18nKey("opponent")
val `learnMenu` = new I18nKey("learnMenu")
val `studyMenu` = new I18nKey("studyMenu")
val `practice` = new I18nKey("practice")
val `community` = new I18nKey("community")
val `tools` = new I18nKey("tools")
val `increment` = new I18nKey("increment")
val `sharePGN` = new I18nKey("sharePGN")
val `playOnline` = new I18nKey("playOnline")
val `playOffline` = new I18nKey("playOffline")
val `allowAnalytics` = new I18nKey("allowAnalytics")
val `shareGameURL` = new I18nKey("shareGameURL")
val `error.required` = new I18nKey("error.required")
val `error.email` = new I18nKey("error.email")
val `error.email_acceptable` = new I18nKey("error.email_acceptable")
val `error.email_unique` = new I18nKey("error.email_unique")
val `error.email_different` = new I18nKey("error.email_different")
val `ifRatingIsPlusMinusX` = new I18nKey("ifRatingIsPlusMinusX")
val `onlyExistingConversations` = new I18nKey("onlyExistingConversations")
val `onlyFriends` = new I18nKey("onlyFriends")
val `menu` = new I18nKey("menu")
val `castling` = new I18nKey("castling")
val `whiteCastlingKingside` = new I18nKey("whiteCastlingKingside")
val `blackCastlingKingside` = new I18nKey("blackCastlingKingside")
val `tpTimeSpentPlaying` = new I18nKey("tpTimeSpentPlaying")
val `watchGames` = new I18nKey("watchGames")
val `tpTimeSpentOnTV` = new I18nKey("tpTimeSpentOnTV")
val `watch` = new I18nKey("watch")
val `videoLibrary` = new I18nKey("videoLibrary")
val `streamersMenu` = new I18nKey("streamersMenu")
val `mobileApp` = new I18nKey("mobileApp")
val `webmasters` = new I18nKey("webmasters")
val `about` = new I18nKey("about")
val `aboutX` = new I18nKey("aboutX")
val `xIsAFreeYLibreOpenSourceChessServer` = new I18nKey("xIsAFreeYLibreOpenSourceChessServer")
val `really` = new I18nKey("really")
val `contribute` = new I18nKey("contribute")
val `termsOfService` = new I18nKey("termsOfService")
val `sourceCode` = new I18nKey("sourceCode")
val `simultaneousExhibitions` = new I18nKey("simultaneousExhibitions")
val `host` = new I18nKey("host")
val `hostColorX` = new I18nKey("hostColorX")
val `createdSimuls` = new I18nKey("createdSimuls")
val `hostANewSimul` = new I18nKey("hostANewSimul")
val `noSimulFound` = new I18nKey("noSimulFound")
val `noSimulExplanation` = new I18nKey("noSimulExplanation")
val `returnToSimulHomepage` = new I18nKey("returnToSimulHomepage")
val `aboutSimul` = new I18nKey("aboutSimul")
val `aboutSimulImage` = new I18nKey("aboutSimulImage")
val `aboutSimulRealLife` = new I18nKey("aboutSimulRealLife")
val `aboutSimulRules` = new I18nKey("aboutSimulRules")
val `aboutSimulSettings` = new I18nKey("aboutSimulSettings")
val `create` = new I18nKey("create")
val `whenCreateSimul` = new I18nKey("whenCreateSimul")
val `simulVariantsHint` = new I18nKey("simulVariantsHint")
val `simulClockHint` = new I18nKey("simulClockHint")
val `simulAddExtraTime` = new I18nKey("simulAddExtraTime")
val `simulHostExtraTime` = new I18nKey("simulHostExtraTime")
val `lichessTournaments` = new I18nKey("lichessTournaments")
val `tournamentFAQ` = new I18nKey("tournamentFAQ")
val `tournamentOfficial` = new I18nKey("tournamentOfficial")
val `timeBeforeTournamentStarts` = new I18nKey("timeBeforeTournamentStarts")
val `averageCentipawnLoss` = new I18nKey("averageCentipawnLoss")
val `keyboardShortcuts` = new I18nKey("keyboardShortcuts")
val `keyMoveBackwardOrForward` = new I18nKey("keyMoveBackwardOrForward")
val `keyGoToStartOrEnd` = new I18nKey("keyGoToStartOrEnd")
val `keyShowOrHideComments` = new I18nKey("keyShowOrHideComments")
val `keyEnterOrExitVariation` = new I18nKey("keyEnterOrExitVariation")
val `newTournament` = new I18nKey("newTournament")
val `tournamentHomeTitle` = new I18nKey("tournamentHomeTitle")
val `tournamentHomeDescription` = new I18nKey("tournamentHomeDescription")
val `tournamentNotFound` = new I18nKey("tournamentNotFound")
val `tournamentDoesNotExist` = new I18nKey("tournamentDoesNotExist")
val `tournamentMayHaveBeenCanceled` = new I18nKey("tournamentMayHaveBeenCanceled")
val `returnToTournamentsHomepage` = new I18nKey("returnToTournamentsHomepage")
val `weeklyPerfTypeRatingDistribution` = new I18nKey("weeklyPerfTypeRatingDistribution")
val `yourPerfTypeRatingIsRating` = new I18nKey("yourPerfTypeRatingIsRating")
val `youAreBetterThanPercentOfPerfTypePlayers` = new I18nKey("youAreBetterThanPercentOfPerfTypePlayers")
val `userIsBetterThanPercentOfPerfTypePlayers` = new I18nKey("userIsBetterThanPercentOfPerfTypePlayers")
val `youDoNotHaveAnEstablishedPerfTypeRating` = new I18nKey("youDoNotHaveAnEstablishedPerfTypeRating")
val `yourRating` = new I18nKey("yourRating")
val `cumulative` = new I18nKey("cumulative")
val `glicko2Rating` = new I18nKey("glicko2Rating")
val `checkYourEmail` = new I18nKey("checkYourEmail")
val `weHaveSentYouAnEmailClickTheLink` = new I18nKey("weHaveSentYouAnEmailClickTheLink")
val `ifYouDoNotSeeTheEmailCheckOtherPlaces` = new I18nKey("ifYouDoNotSeeTheEmailCheckOtherPlaces")
val `weHaveSentYouAnEmailTo` = new I18nKey("weHaveSentYouAnEmailTo")
val `byRegisteringYouAgreeToBeBoundByOur` = new I18nKey("byRegisteringYouAgreeToBeBoundByOur")
val `readAboutOur` = new I18nKey("readAboutOur")
val `networkLagBetweenYouAndLichess` = new I18nKey("networkLagBetweenYouAndLichess")
val `timeToProcessAMoveOnLichessServer` = new I18nKey("timeToProcessAMoveOnLichessServer")
val `downloadAnnotated` = new I18nKey("downloadAnnotated")
val `downloadRaw` = new I18nKey("downloadRaw")
val `downloadImported` = new I18nKey("downloadImported")
val `printFriendlyPDF` = new I18nKey("printFriendlyPDF")
val `crosstable` = new I18nKey("crosstable")
val `youCanAlsoScrollOverTheBoardToMoveInTheGame` = new I18nKey("youCanAlsoScrollOverTheBoardToMoveInTheGame")
val `analysisShapesHowTo` = new I18nKey("analysisShapesHowTo")
val `letOtherPlayersMessageYou` = new I18nKey("letOtherPlayersMessageYou")
val `shareYourInsightsData` = new I18nKey("shareYourInsightsData")
val `withNobody` = new I18nKey("withNobody")
val `withFriends` = new I18nKey("withFriends")
val `withEverybody` = new I18nKey("withEverybody")
val `youHaveAlreadyRegisteredTheEmail` = new I18nKey("youHaveAlreadyRegisteredTheEmail")
val `kidMode` = new I18nKey("kidMode")
val `kidModeExplanation` = new I18nKey("kidModeExplanation")
val `inKidModeTheLichessLogoGetsIconX` = new I18nKey("inKidModeTheLichessLogoGetsIconX")
val `enableKidMode` = new I18nKey("enableKidMode")
val `disableKidMode` = new I18nKey("disableKidMode")
val `security` = new I18nKey("security")
val `thisIsAListOfDevicesThatHaveLoggedIntoYourAccount` = new I18nKey("thisIsAListOfDevicesThatHaveLoggedIntoYourAccount")
val `alternativelyYouCanX` = new I18nKey("alternativelyYouCanX")
val `revokeAllSessions` = new I18nKey("revokeAllSessions")
val `playChessEverywhere` = new I18nKey("playChessEverywhere")
val `asFreeAsLichess` = new I18nKey("asFreeAsLichess")
val `builtForTheLoveOfChessNotMoney` = new I18nKey("builtForTheLoveOfChessNotMoney")
val `everybodyGetsAllFeaturesForFree` = new I18nKey("everybodyGetsAllFeaturesForFree")
val `zeroAdvertisement` = new I18nKey("zeroAdvertisement")
val `fullFeatured` = new I18nKey("fullFeatured")
val `phoneAndTablet` = new I18nKey("phoneAndTablet")
val `bulletBlitzClassical` = new I18nKey("bulletBlitzClassical")
val `correspondenceChess` = new I18nKey("correspondenceChess")
val `onlineAndOfflinePlay` = new I18nKey("onlineAndOfflinePlay")
val `viewTheSolution` = new I18nKey("viewTheSolution")
val `followAndChallengeFriends` = new I18nKey("followAndChallengeFriends")
val `gameAnalysis` = new I18nKey("gameAnalysis")
val `xHostsY` = new I18nKey("xHostsY")
val `xJoinsY` = new I18nKey("xJoinsY")
val `xLikesY` = new I18nKey("xLikesY")
val `xCreatesStudyY` = new I18nKey("xCreatesStudyY")
val `quickPairing` = new I18nKey("quickPairing")
val `lobby` = new I18nKey("lobby")
val `anonymous` = new I18nKey("anonymous")
val `yourScore` = new I18nKey("yourScore")
val `language` = new I18nKey("language")
val `background` = new I18nKey("background")
val `light` = new I18nKey("light")
val `dark` = new I18nKey("dark")
val `transparent` = new I18nKey("transparent")
val `backgroundImageUrl` = new I18nKey("backgroundImageUrl")
val `boardGeometry` = new I18nKey("boardGeometry")
val `boardTheme` = new I18nKey("boardTheme")
val `boardSize` = new I18nKey("boardSize")
val `pieceSet` = new I18nKey("pieceSet")
val `embedInYourWebsite` = new I18nKey("embedInYourWebsite")
val `usernameAlreadyUsed` = new I18nKey("usernameAlreadyUsed")
val `usernamePrefixInvalid` = new I18nKey("usernamePrefixInvalid")
val `usernameSuffixInvalid` = new I18nKey("usernameSuffixInvalid")
val `usernameCharsInvalid` = new I18nKey("usernameCharsInvalid")
val `usernameUnacceptable` = new I18nKey("usernameUnacceptable")
val `directlySupportLichess` = new I18nKey("directlySupportLichess")
val `playChessInStyle` = new I18nKey("playChessInStyle")
val `chessBasics` = new I18nKey("chessBasics")
val `coaches` = new I18nKey("coaches")
val `invalidPgn` = new I18nKey("invalidPgn")
val `invalidFen` = new I18nKey("invalidFen")
val `error.minLength` = new I18nKey("error.minLength")
val `error.maxLength` = new I18nKey("error.maxLength")
val `error.min` = new I18nKey("error.min")
val `error.max` = new I18nKey("error.max")
val `error.unknown` = new I18nKey("error.unknown")
val `custom` = new I18nKey("custom")
val `notifications` = new I18nKey("notifications")
val `perfRatingX` = new I18nKey("perfRatingX")
val `practiceWithComputer` = new I18nKey("practiceWithComputer")
val `anotherWasX` = new I18nKey("anotherWasX")
val `bestWasX` = new I18nKey("bestWasX")
val `youBrowsedAway` = new I18nKey("youBrowsedAway")
val `resumePractice` = new I18nKey("resumePractice")
val `theGameIsADraw` = new I18nKey("theGameIsADraw")
val `computerThinking` = new I18nKey("computerThinking")
val `seeBestMove` = new I18nKey("seeBestMove")
val `hideBestMove` = new I18nKey("hideBestMove")
val `getAHint` = new I18nKey("getAHint")
val `evaluatingYourMove` = new I18nKey("evaluatingYourMove")
val `whiteWinsGame` = new I18nKey("whiteWinsGame")
val `blackWinsGame` = new I18nKey("blackWinsGame")
val `learnFromYourMistakes` = new I18nKey("learnFromYourMistakes")
val `learnFromThisMistake` = new I18nKey("learnFromThisMistake")
val `skipThisMove` = new I18nKey("skipThisMove")
val `next` = new I18nKey("next")
val `xWasPlayed` = new I18nKey("xWasPlayed")
val `findBetterMoveForWhite` = new I18nKey("findBetterMoveForWhite")
val `findBetterMoveForBlack` = new I18nKey("findBetterMoveForBlack")
val `resumeLearning` = new I18nKey("resumeLearning")
val `youCanDoBetter` = new I18nKey("youCanDoBetter")
val `tryAnotherMoveForWhite` = new I18nKey("tryAnotherMoveForWhite")
val `tryAnotherMoveForBlack` = new I18nKey("tryAnotherMoveForBlack")
val `solution` = new I18nKey("solution")
val `waitingForAnalysis` = new I18nKey("waitingForAnalysis")
val `noMistakesFoundForWhite` = new I18nKey("noMistakesFoundForWhite")
val `noMistakesFoundForBlack` = new I18nKey("noMistakesFoundForBlack")
val `doneReviewingWhiteMistakes` = new I18nKey("doneReviewingWhiteMistakes")
val `doneReviewingBlackMistakes` = new I18nKey("doneReviewingBlackMistakes")
val `doItAgain` = new I18nKey("doItAgain")
val `reviewWhiteMistakes` = new I18nKey("reviewWhiteMistakes")
val `reviewBlackMistakes` = new I18nKey("reviewBlackMistakes")
val `advantage` = new I18nKey("advantage")
val `opening` = new I18nKey("opening")
val `middlegame` = new I18nKey("middlegame")
val `endgame` = new I18nKey("endgame")
val `conditionalPremoves` = new I18nKey("conditionalPremoves")
val `addCurrentVariation` = new I18nKey("addCurrentVariation")
val `playVariationToCreateConditionalPremoves` = new I18nKey("playVariationToCreateConditionalPremoves")
val `noConditionalPremoves` = new I18nKey("noConditionalPremoves")
val `playX` = new I18nKey("playX")
val `sorry` = new I18nKey("sorry")
val `weHadToTimeYouOutForAWhile` = new I18nKey("weHadToTimeYouOutForAWhile")
val `timeoutExpires` = new I18nKey("timeoutExpires")
val `why` = new I18nKey("why")
val `pleasantChessExperience` = new I18nKey("pleasantChessExperience")
val `goodPractice` = new I18nKey("goodPractice")
val `potentialProblem` = new I18nKey("potentialProblem")
val `howToAvoidThis` = new I18nKey("howToAvoidThis")
val `playEveryGame` = new I18nKey("playEveryGame")
val `tryToWin` = new I18nKey("tryToWin")
val `resignLostGames` = new I18nKey("resignLostGames")
val `temporaryInconvenience` = new I18nKey("temporaryInconvenience")
val `wishYouGreatGames` = new I18nKey("wishYouGreatGames")
val `thankYouForReading` = new I18nKey("thankYouForReading")
val `lifetimeScore` = new I18nKey("lifetimeScore")
val `currentMatchScore` = new I18nKey("currentMatchScore")
val `agreementAssistance` = new I18nKey("agreementAssistance")
val `agreementNice` = new I18nKey("agreementNice")
val `agreementAccount` = new I18nKey("agreementAccount")
val `agreementPolicy` = new I18nKey("agreementPolicy")
val `searchOrStartNewDiscussion` = new I18nKey("searchOrStartNewDiscussion")
val `edit` = new I18nKey("edit")
val `rapid` = new I18nKey("rapid")
val `classical` = new I18nKey("classical")
val `ultraBulletDesc` = new I18nKey("ultraBulletDesc")
val `bulletDesc` = new I18nKey("bulletDesc")
val `blitzDesc` = new I18nKey("blitzDesc")
val `rapidDesc` = new I18nKey("rapidDesc")
val `classicalDesc` = new I18nKey("classicalDesc")
val `correspondenceDesc` = new I18nKey("correspondenceDesc")
val `puzzleDesc` = new I18nKey("puzzleDesc")
val `important` = new I18nKey("important")
val `yourQuestionMayHaveBeenAnswered` = new I18nKey("yourQuestionMayHaveBeenAnswered")
val `inTheFAQ` = new I18nKey("inTheFAQ")
val `toReportSomeoneForCheatingOrBadBehavior` = new I18nKey("toReportSomeoneForCheatingOrBadBehavior")
val `useTheReportForm` = new I18nKey("useTheReportForm")
val `toRequestSupport` = new I18nKey("toRequestSupport")
val `tryTheContactPage` = new I18nKey("tryTheContactPage")
val `thisTopicIsArchived` = new I18nKey("thisTopicIsArchived")
val `joinTheTeamXToPost` = new I18nKey("joinTheTeamXToPost")
val `teamNamedX` = new I18nKey("teamNamedX")
val `youCannotPostYetPlaySomeGames` = new I18nKey("youCannotPostYetPlaySomeGames")
val `subscribe` = new I18nKey("subscribe")
val `unsubscribe` = new I18nKey("unsubscribe")
val `mentionedYouInX` = new I18nKey("mentionedYouInX")
val `xMentionedYouInY` = new I18nKey("xMentionedYouInY")
val `invitedYouToX` = new I18nKey("invitedYouToX")
val `xInvitedYouToY` = new I18nKey("xInvitedYouToY")
val `youAreNowPartOfTeam` = new I18nKey("youAreNowPartOfTeam")
val `youHaveJoinedTeamX` = new I18nKey("youHaveJoinedTeamX")
val `someoneYouReportedWasBanned` = new I18nKey("someoneYouReportedWasBanned")
val `congratsYouWon` = new I18nKey("congratsYouWon")
val `gameVsX` = new I18nKey("gameVsX")
val `resVsX` = new I18nKey("resVsX")
val `youJustBecamePatron` = new I18nKey("youJustBecamePatron")
val `patronAccountExpired` = new I18nKey("patronAccountExpired")
val `pleaseReconsiderRenewIt` = new I18nKey("pleaseReconsiderRenewIt")
val `someoneReviewedYourCoachProfile` = new I18nKey("someoneReviewedYourCoachProfile")
val `newPendingReview` = new I18nKey("newPendingReview")
val `lostAgainstTOSViolator` = new I18nKey("lostAgainstTOSViolator")
val `refundXpointsTimeControlY` = new I18nKey("refundXpointsTimeControlY")
val `timeAlmostUp` = new I18nKey("timeAlmostUp")
val `opponentLeftCounter` = new I18nKey("opponentLeftCounter")
val `mateInXHalfMoves` = new I18nKey("mateInXHalfMoves")
val `nextCaptureOrPawnMoveInXHalfMoves` = new I18nKey("nextCaptureOrPawnMoveInXHalfMoves")
val `nbBlunders` = new I18nKey("nbBlunders")
val `nbMistakes` = new I18nKey("nbMistakes")
val `nbInaccuracies` = new I18nKey("nbInaccuracies")
val `nbPlayers` = new I18nKey("nbPlayers")
val `nbGames` = new I18nKey("nbGames")
val `nbBookmarks` = new I18nKey("nbBookmarks")
val `nbDays` = new I18nKey("nbDays")
val `nbHours` = new I18nKey("nbHours")
val `rankIsUpdatedEveryNbMinutes` = new I18nKey("rankIsUpdatedEveryNbMinutes")
val `nbPuzzles` = new I18nKey("nbPuzzles")
val `nbGamesWithYou` = new I18nKey("nbGamesWithYou")
val `nbRated` = new I18nKey("nbRated")
val `nbWins` = new I18nKey("nbWins")
val `nbLosses` = new I18nKey("nbLosses")
val `nbDraws` = new I18nKey("nbDraws")
val `nbPlaying` = new I18nKey("nbPlaying")
val `giveNbSeconds` = new I18nKey("giveNbSeconds")
val `nbTournamentPoints` = new I18nKey("nbTournamentPoints")
val `nbStudies` = new I18nKey("nbStudies")
val `moreThanNbRatedGames` = new I18nKey("moreThanNbRatedGames")
val `moreThanNbPerfRatedGames` = new I18nKey("moreThanNbPerfRatedGames")
val `needNbMorePerfGames` = new I18nKey("needNbMorePerfGames")
val `needNbMoreGames` = new I18nKey("needNbMoreGames")
val `nbImportedGames` = new I18nKey("nbImportedGames")
val `nbFriendsOnline` = new I18nKey("nbFriendsOnline")
val `nbFollowers` = new I18nKey("nbFollowers")
val `nbFollowing` = new I18nKey("nbFollowing")
val `lessThanNbMinutes` = new I18nKey("lessThanNbMinutes")
val `nbGamesInPlay` = new I18nKey("nbGamesInPlay")
val `maximumNbCharacters` = new I18nKey("maximumNbCharacters")
val `blocks` = new I18nKey("blocks")
val `nbForumPosts` = new I18nKey("nbForumPosts")
val `nbPerfTypePlayersThisWeek` = new I18nKey("nbPerfTypePlayersThisWeek")
val `availableInNbLanguages` = new I18nKey("availableInNbLanguages")
val `nbSecondsToPlayTheFirstMove` = new I18nKey("nbSecondsToPlayTheFirstMove")
val `nbSeconds` = new I18nKey("nbSeconds")
val `andSaveNbPremoveLines` = new I18nKey("andSaveNbPremoveLines")

object arena {
val `arenaTournaments` = new I18nKey("arena:arenaTournaments")
val `isItRated` = new I18nKey("arena:isItRated")
val `willBeNotified` = new I18nKey("arena:willBeNotified")
val `isRated` = new I18nKey("arena:isRated")
val `isNotRated` = new I18nKey("arena:isNotRated")
val `someRated` = new I18nKey("arena:someRated")
val `howAreScoresCalculated` = new I18nKey("arena:howAreScoresCalculated")
val `howAreScoresCalculatedAnswer` = new I18nKey("arena:howAreScoresCalculatedAnswer")
val `berserk` = new I18nKey("arena:berserk")
val `berserkAnswer` = new I18nKey("arena:berserkAnswer")
val `howIsTheWinnerDecided` = new I18nKey("arena:howIsTheWinnerDecided")
val `howIsTheWinnerDecidedAnswer` = new I18nKey("arena:howIsTheWinnerDecidedAnswer")
val `howDoesPairingWork` = new I18nKey("arena:howDoesPairingWork")
val `howDoesPairingWorkAnswer` = new I18nKey("arena:howDoesPairingWorkAnswer")
val `howDoesItEnd` = new I18nKey("arena:howDoesItEnd")
val `howDoesItEndAnswer` = new I18nKey("arena:howDoesItEndAnswer")
val `otherRules` = new I18nKey("arena:otherRules")
val `thereIsACountdown` = new I18nKey("arena:thereIsACountdown")
val `thisIsPrivate` = new I18nKey("arena:thisIsPrivate")
val `shareUrl` = new I18nKey("arena:shareUrl")
val `drawStreak` = new I18nKey("arena:drawStreak")
val `history` = new I18nKey("arena:history")
val `drawingWithinNbMoves` = new I18nKey("arena:drawingWithinNbMoves")
val `viewAllXTeams` = new I18nKey("arena:viewAllXTeams")
}

object emails {
val `emailConfirm_subject` = new I18nKey("emails:emailConfirm_subject")
val `emailConfirm_click` = new I18nKey("emails:emailConfirm_click")
val `emailConfirm_ignore` = new I18nKey("emails:emailConfirm_ignore")
val `passwordReset_subject` = new I18nKey("emails:passwordReset_subject")
val `passwordReset_intro` = new I18nKey("emails:passwordReset_intro")
val `passwordReset_clickOrIgnore` = new I18nKey("emails:passwordReset_clickOrIgnore")
val `emailChange_subject` = new I18nKey("emails:emailChange_subject")
val `emailChange_intro` = new I18nKey("emails:emailChange_intro")
val `emailChange_click` = new I18nKey("emails:emailChange_click")
val `welcome_subject` = new I18nKey("emails:welcome_subject")
val `welcome_text` = new I18nKey("emails:welcome_text")
val `logInToLichess` = new I18nKey("emails:logInToLichess")
val `common_orPaste` = new I18nKey("emails:common_orPaste")
val `common_note` = new I18nKey("emails:common_note")
val `common_contact` = new I18nKey("emails:common_contact")
}

object learn {
val `learnChess` = new I18nKey("learn:learnChess")
val `byPlaying` = new I18nKey("learn:byPlaying")
val `menu` = new I18nKey("learn:menu")
val `progressX` = new I18nKey("learn:progressX")
val `resetMyProgress` = new I18nKey("learn:resetMyProgress")
val `youWillLoseAllYourProgress` = new I18nKey("learn:youWillLoseAllYourProgress")
val `play` = new I18nKey("learn:play")
val `chessPieces` = new I18nKey("learn:chessPieces")
val `theRook` = new I18nKey("learn:theRook")
val `itMovesInStraightLines` = new I18nKey("learn:itMovesInStraightLines")
val `rookIntro` = new I18nKey("learn:rookIntro")
val `rookGoal` = new I18nKey("learn:rookGoal")
val `grabAllTheStars` = new I18nKey("learn:grabAllTheStars")
val `theFewerMoves` = new I18nKey("learn:theFewerMoves")
val `useTwoRooks` = new I18nKey("learn:useTwoRooks")
val `rookComplete` = new I18nKey("learn:rookComplete")
val `theBishop` = new I18nKey("learn:theBishop")
val `itMovesDiagonally` = new I18nKey("learn:itMovesDiagonally")
val `bishopIntro` = new I18nKey("learn:bishopIntro")
val `youNeedBothBishops` = new I18nKey("learn:youNeedBothBishops")
val `bishopComplete` = new I18nKey("learn:bishopComplete")
val `theQueen` = new I18nKey("learn:theQueen")
val `queenCombinesRookAndBishop` = new I18nKey("learn:queenCombinesRookAndBishop")
val `queenIntro` = new I18nKey("learn:queenIntro")
val `queenComplete` = new I18nKey("learn:queenComplete")
val `theKing` = new I18nKey("learn:theKing")
val `theMostImportantPiece` = new I18nKey("learn:theMostImportantPiece")
val `kingIntro` = new I18nKey("learn:kingIntro")
val `theKingIsSlow` = new I18nKey("learn:theKingIsSlow")
val `lastOne` = new I18nKey("learn:lastOne")
val `kingComplete` = new I18nKey("learn:kingComplete")
val `theKnight` = new I18nKey("learn:theKnight")
val `itMovesInAnLShape` = new I18nKey("learn:itMovesInAnLShape")
val `knightIntro` = new I18nKey("learn:knightIntro")
val `knightsHaveAFancyWay` = new I18nKey("learn:knightsHaveAFancyWay")
val `knightsCanJumpOverObstacles` = new I18nKey("learn:knightsCanJumpOverObstacles")
val `knightComplete` = new I18nKey("learn:knightComplete")
val `thePawn` = new I18nKey("learn:thePawn")
val `itMovesForwardOnly` = new I18nKey("learn:itMovesForwardOnly")
val `pawnIntro` = new I18nKey("learn:pawnIntro")
val `pawnsMoveOneSquareOnly` = new I18nKey("learn:pawnsMoveOneSquareOnly")
val `mostOfTheTimePromotingToAQueenIsBest` = new I18nKey("learn:mostOfTheTimePromotingToAQueenIsBest")
val `pawnsMoveForward` = new I18nKey("learn:pawnsMoveForward")
val `captureThenPromote` = new I18nKey("learn:captureThenPromote")
val `useAllThePawns` = new I18nKey("learn:useAllThePawns")
val `aPawnOnTheSecondRank` = new I18nKey("learn:aPawnOnTheSecondRank")
val `grabAllTheStarsNoNeedToPromote` = new I18nKey("learn:grabAllTheStarsNoNeedToPromote")
val `pawnComplete` = new I18nKey("learn:pawnComplete")
val `pawnPromotion` = new I18nKey("learn:pawnPromotion")
val `yourPawnReachedTheEndOfTheBoard` = new I18nKey("learn:yourPawnReachedTheEndOfTheBoard")
val `itNowPromotesToAStrongerPiece` = new I18nKey("learn:itNowPromotesToAStrongerPiece")
val `selectThePieceYouWant` = new I18nKey("learn:selectThePieceYouWant")
val `fundamentals` = new I18nKey("learn:fundamentals")
val `capture` = new I18nKey("learn:capture")
val `takeTheEnemyPieces` = new I18nKey("learn:takeTheEnemyPieces")
val `captureIntro` = new I18nKey("learn:captureIntro")
val `takeTheBlackPieces` = new I18nKey("learn:takeTheBlackPieces")
val `takeTheBlackPiecesAndDontLoseYours` = new I18nKey("learn:takeTheBlackPiecesAndDontLoseYours")
val `captureComplete` = new I18nKey("learn:captureComplete")
val `protection` = new I18nKey("learn:protection")
val `keepYourPiecesSafe` = new I18nKey("learn:keepYourPiecesSafe")
val `protectionIntro` = new I18nKey("learn:protectionIntro")
val `protectionComplete` = new I18nKey("learn:protectionComplete")
val `escape` = new I18nKey("learn:escape")
val `noEscape` = new I18nKey("learn:noEscape")
val `dontLetThemTakeAnyUndefendedPiece` = new I18nKey("learn:dontLetThemTakeAnyUndefendedPiece")
val `combat` = new I18nKey("learn:combat")
val `captureAndDefendPieces` = new I18nKey("learn:captureAndDefendPieces")
val `combatIntro` = new I18nKey("learn:combatIntro")
val `combatComplete` = new I18nKey("learn:combatComplete")
val `checkInOne` = new I18nKey("learn:checkInOne")
val `attackTheOpponentsKing` = new I18nKey("learn:attackTheOpponentsKing")
val `checkInOneIntro` = new I18nKey("learn:checkInOneIntro")
val `checkInOneGoal` = new I18nKey("learn:checkInOneGoal")
val `checkInOneComplete` = new I18nKey("learn:checkInOneComplete")
val `outOfCheck` = new I18nKey("learn:outOfCheck")
val `defendYourKing` = new I18nKey("learn:defendYourKing")
val `outOfCheckIntro` = new I18nKey("learn:outOfCheckIntro")
val `escapeWithTheKing` = new I18nKey("learn:escapeWithTheKing")
val `theKingCannotEscapeButBlock` = new I18nKey("learn:theKingCannotEscapeButBlock")
val `youCanGetOutOfCheckByTaking` = new I18nKey("learn:youCanGetOutOfCheckByTaking")
val `thisKnightIsCheckingThroughYourDefenses` = new I18nKey("learn:thisKnightIsCheckingThroughYourDefenses")
val `escapeOrBlock` = new I18nKey("learn:escapeOrBlock")
val `outOfCheckComplete` = new I18nKey("learn:outOfCheckComplete")
val `mateInOne` = new I18nKey("learn:mateInOne")
val `defeatTheOpponentsKing` = new I18nKey("learn:defeatTheOpponentsKing")
val `mateInOneIntro` = new I18nKey("learn:mateInOneIntro")
val `attackYourOpponentsKing` = new I18nKey("learn:attackYourOpponentsKing")
val `mateInOneComplete` = new I18nKey("learn:mateInOneComplete")
val `intermediate` = new I18nKey("learn:intermediate")
val `boardSetup` = new I18nKey("learn:boardSetup")
val `howTheGameStarts` = new I18nKey("learn:howTheGameStarts")
val `boardSetupIntro` = new I18nKey("learn:boardSetupIntro")
val `thisIsTheInitialPosition` = new I18nKey("learn:thisIsTheInitialPosition")
val `firstPlaceTheRooks` = new I18nKey("learn:firstPlaceTheRooks")
val `thenPlaceTheKnights` = new I18nKey("learn:thenPlaceTheKnights")
val `placeTheBishops` = new I18nKey("learn:placeTheBishops")
val `placeTheQueen` = new I18nKey("learn:placeTheQueen")
val `placeTheKing` = new I18nKey("learn:placeTheKing")
val `pawnsFormTheFrontLine` = new I18nKey("learn:pawnsFormTheFrontLine")
val `boardSetupComplete` = new I18nKey("learn:boardSetupComplete")
val `castling` = new I18nKey("learn:castling")
val `theSpecialKingMove` = new I18nKey("learn:theSpecialKingMove")
val `castlingIntro` = new I18nKey("learn:castlingIntro")
val `castleKingSide` = new I18nKey("learn:castleKingSide")
val `castleQueenSide` = new I18nKey("learn:castleQueenSide")
val `theKnightIsInTheWay` = new I18nKey("learn:theKnightIsInTheWay")
val `castleKingSideMovePiecesFirst` = new I18nKey("learn:castleKingSideMovePiecesFirst")
val `castleQueenSideMovePiecesFirst` = new I18nKey("learn:castleQueenSideMovePiecesFirst")
val `youCannotCastleIfMoved` = new I18nKey("learn:youCannotCastleIfMoved")
val `youCannotCastleIfAttacked` = new I18nKey("learn:youCannotCastleIfAttacked")
val `findAWayToCastleKingSide` = new I18nKey("learn:findAWayToCastleKingSide")
val `findAWayToCastleQueenSide` = new I18nKey("learn:findAWayToCastleQueenSide")
val `castlingComplete` = new I18nKey("learn:castlingComplete")
val `enPassant` = new I18nKey("learn:enPassant")
val `theSpecialPawnMove` = new I18nKey("learn:theSpecialPawnMove")
val `enPassantIntro` = new I18nKey("learn:enPassantIntro")
val `blackJustMovedThePawnByTwoSquares` = new I18nKey("learn:blackJustMovedThePawnByTwoSquares")
val `enPassantOnlyWorksImmediately` = new I18nKey("learn:enPassantOnlyWorksImmediately")
val `enPassantOnlyWorksOnFifthRank` = new I18nKey("learn:enPassantOnlyWorksOnFifthRank")
val `takeAllThePawnsEnPassant` = new I18nKey("learn:takeAllThePawnsEnPassant")
val `enPassantComplete` = new I18nKey("learn:enPassantComplete")
val `stalemate` = new I18nKey("learn:stalemate")
val `theGameIsADraw` = new I18nKey("learn:theGameIsADraw")
val `stalemateIntro` = new I18nKey("learn:stalemateIntro")
val `stalemateGoal` = new I18nKey("learn:stalemateGoal")
val `stalemateComplete` = new I18nKey("learn:stalemateComplete")
val `advanced` = new I18nKey("learn:advanced")
val `pieceValue` = new I18nKey("learn:pieceValue")
val `evaluatePieceStrength` = new I18nKey("learn:evaluatePieceStrength")
val `pieceValueIntro` = new I18nKey("learn:pieceValueIntro")
val `queenOverBishop` = new I18nKey("learn:queenOverBishop")
val `takeThePieceWithTheHighestValue` = new I18nKey("learn:takeThePieceWithTheHighestValue")
val `pieceValueComplete` = new I18nKey("learn:pieceValueComplete")
val `checkInTwo` = new I18nKey("learn:checkInTwo")
val `twoMovesToGiveCheck` = new I18nKey("learn:twoMovesToGiveCheck")
val `checkInTwoIntro` = new I18nKey("learn:checkInTwoIntro")
val `checkInTwoGoal` = new I18nKey("learn:checkInTwoGoal")
val `checkInTwoComplete` = new I18nKey("learn:checkInTwoComplete")
val `whatNext` = new I18nKey("learn:whatNext")
val `youKnowHowToPlayChess` = new I18nKey("learn:youKnowHowToPlayChess")
val `register` = new I18nKey("learn:register")
val `getAFreeLichessAccount` = new I18nKey("learn:getAFreeLichessAccount")
val `practice` = new I18nKey("learn:practice")
val `learnCommonChessPositions` = new I18nKey("learn:learnCommonChessPositions")
val `puzzles` = new I18nKey("learn:puzzles")
val `exerciseYourTacticalSkills` = new I18nKey("learn:exerciseYourTacticalSkills")
val `videos` = new I18nKey("learn:videos")
val `watchInstructiveChessVideos` = new I18nKey("learn:watchInstructiveChessVideos")
val `playPeople` = new I18nKey("learn:playPeople")
val `opponentsFromAroundTheWorld` = new I18nKey("learn:opponentsFromAroundTheWorld")
val `playMachine` = new I18nKey("learn:playMachine")
val `testYourSkillsWithTheComputer` = new I18nKey("learn:testYourSkillsWithTheComputer")
val `letsGo` = new I18nKey("learn:letsGo")
val `stageX` = new I18nKey("learn:stageX")
val `awesome` = new I18nKey("learn:awesome")
val `excellent` = new I18nKey("learn:excellent")
val `greatJob` = new I18nKey("learn:greatJob")
val `perfect` = new I18nKey("learn:perfect")
val `outstanding` = new I18nKey("learn:outstanding")
val `wayToGo` = new I18nKey("learn:wayToGo")
val `yesYesYes` = new I18nKey("learn:yesYesYes")
val `youreGoodAtThis` = new I18nKey("learn:youreGoodAtThis")
val `nailedIt` = new I18nKey("learn:nailedIt")
val `rightOn` = new I18nKey("learn:rightOn")
val `stageXComplete` = new I18nKey("learn:stageXComplete")
val `yourScore` = new I18nKey("learn:yourScore")
val `next` = new I18nKey("learn:next")
val `backToMenu` = new I18nKey("learn:backToMenu")
val `puzzleFailed` = new I18nKey("learn:puzzleFailed")
val `retry` = new I18nKey("learn:retry")
}

object activity {
val `activity` = new I18nKey("activity:activity")
val `hostedALiveStream` = new I18nKey("activity:hostedALiveStream")
val `rankedInSwissTournament` = new I18nKey("activity:rankedInSwissTournament")
val `signedUp` = new I18nKey("activity:signedUp")
val `supportedNbMonths` = new I18nKey("activity:supportedNbMonths")
val `practicedNbPositions` = new I18nKey("activity:practicedNbPositions")
val `solvedNbPuzzles` = new I18nKey("activity:solvedNbPuzzles")
val `playedNbGames` = new I18nKey("activity:playedNbGames")
val `postedNbMessages` = new I18nKey("activity:postedNbMessages")
val `playedNbMoves` = new I18nKey("activity:playedNbMoves")
val `inNbCorrespondenceGames` = new I18nKey("activity:inNbCorrespondenceGames")
val `completedNbGames` = new I18nKey("activity:completedNbGames")
val `followedNbPlayers` = new I18nKey("activity:followedNbPlayers")
val `gainedNbFollowers` = new I18nKey("activity:gainedNbFollowers")
val `hostedNbSimuls` = new I18nKey("activity:hostedNbSimuls")
val `joinedNbSimuls` = new I18nKey("activity:joinedNbSimuls")
val `createdNbStudies` = new I18nKey("activity:createdNbStudies")
val `competedInNbTournaments` = new I18nKey("activity:competedInNbTournaments")
val `rankedInTournament` = new I18nKey("activity:rankedInTournament")
val `competedInNbSwissTournaments` = new I18nKey("activity:competedInNbSwissTournaments")
val `joinedNbTeams` = new I18nKey("activity:joinedNbTeams")
}

object coordinates {
val `coordinates` = new I18nKey("coordinates:coordinates")
val `coordinateTraining` = new I18nKey("coordinates:coordinateTraining")
val `averageScoreAsWhiteX` = new I18nKey("coordinates:averageScoreAsWhiteX")
val `averageScoreAsBlackX` = new I18nKey("coordinates:averageScoreAsBlackX")
val `knowingTheChessBoard` = new I18nKey("coordinates:knowingTheChessBoard")
val `mostChessCourses` = new I18nKey("coordinates:mostChessCourses")
val `talkToYourChessFriends` = new I18nKey("coordinates:talkToYourChessFriends")
val `youCanAnalyseAGameMoreEffectively` = new I18nKey("coordinates:youCanAnalyseAGameMoreEffectively")
val `aSquareNameAppears` = new I18nKey("coordinates:aSquareNameAppears")
val `startTraining` = new I18nKey("coordinates:startTraining")
}

object study {
val `private` = new I18nKey("study:private")
val `myStudies` = new I18nKey("study:myStudies")
val `studiesIContributeTo` = new I18nKey("study:studiesIContributeTo")
val `myPublicStudies` = new I18nKey("study:myPublicStudies")
val `myPrivateStudies` = new I18nKey("study:myPrivateStudies")
val `myFavoriteStudies` = new I18nKey("study:myFavoriteStudies")
val `whatAreStudies` = new I18nKey("study:whatAreStudies")
val `allStudies` = new I18nKey("study:allStudies")
val `studiesCreatedByX` = new I18nKey("study:studiesCreatedByX")
val `noneYet` = new I18nKey("study:noneYet")
val `hot` = new I18nKey("study:hot")
val `dateAddedNewest` = new I18nKey("study:dateAddedNewest")
val `dateAddedOldest` = new I18nKey("study:dateAddedOldest")
val `recentlyUpdated` = new I18nKey("study:recentlyUpdated")
val `mostPopular` = new I18nKey("study:mostPopular")
val `addNewChapter` = new I18nKey("study:addNewChapter")
val `addMembers` = new I18nKey("study:addMembers")
val `inviteToTheStudy` = new I18nKey("study:inviteToTheStudy")
val `pleaseOnlyInvitePeopleYouKnow` = new I18nKey("study:pleaseOnlyInvitePeopleYouKnow")
val `searchByUsername` = new I18nKey("study:searchByUsername")
val `spectator` = new I18nKey("study:spectator")
val `contributor` = new I18nKey("study:contributor")
val `kick` = new I18nKey("study:kick")
val `leaveTheStudy` = new I18nKey("study:leaveTheStudy")
val `youAreNowAContributor` = new I18nKey("study:youAreNowAContributor")
val `youAreNowASpectator` = new I18nKey("study:youAreNowASpectator")
val `pgnTags` = new I18nKey("study:pgnTags")
val `like` = new I18nKey("study:like")
val `newTag` = new I18nKey("study:newTag")
val `commentThisPosition` = new I18nKey("study:commentThisPosition")
val `commentThisMove` = new I18nKey("study:commentThisMove")
val `annotateWithGlyphs` = new I18nKey("study:annotateWithGlyphs")
val `theChapterIsTooShortToBeAnalysed` = new I18nKey("study:theChapterIsTooShortToBeAnalysed")
val `onlyContributorsCanRequestAnalysis` = new I18nKey("study:onlyContributorsCanRequestAnalysis")
val `getAFullComputerAnalysis` = new I18nKey("study:getAFullComputerAnalysis")
val `makeSureTheChapterIsComplete` = new I18nKey("study:makeSureTheChapterIsComplete")
val `allSyncMembersRemainOnTheSamePosition` = new I18nKey("study:allSyncMembersRemainOnTheSamePosition")
val `shareChanges` = new I18nKey("study:shareChanges")
val `playing` = new I18nKey("study:playing")
val `first` = new I18nKey("study:first")
val `previous` = new I18nKey("study:previous")
val `next` = new I18nKey("study:next")
val `last` = new I18nKey("study:last")
val `shareAndExport` = new I18nKey("study:shareAndExport")
val `cloneStudy` = new I18nKey("study:cloneStudy")
val `studyPgn` = new I18nKey("study:studyPgn")
val `downloadAllGames` = new I18nKey("study:downloadAllGames")
val `chapterPgn` = new I18nKey("study:chapterPgn")
val `downloadGame` = new I18nKey("study:downloadGame")
val `studyUrl` = new I18nKey("study:studyUrl")
val `broadcastUrl` = new I18nKey("study:broadcastUrl")
val `currentChapterUrl` = new I18nKey("study:currentChapterUrl")
val `currentGameUrl` = new I18nKey("study:currentGameUrl")
val `youCanPasteThisInTheForumToEmbed` = new I18nKey("study:youCanPasteThisInTheForumToEmbed")
val `startAtInitialPosition` = new I18nKey("study:startAtInitialPosition")
val `startAtX` = new I18nKey("study:startAtX")
val `embedInYourWebsite` = new I18nKey("study:embedInYourWebsite")
val `readMoreAboutEmbedding` = new I18nKey("study:readMoreAboutEmbedding")
val `onlyPublicStudiesCanBeEmbedded` = new I18nKey("study:onlyPublicStudiesCanBeEmbedded")
val `open` = new I18nKey("study:open")
val `xBroughtToYouByY` = new I18nKey("study:xBroughtToYouByY")
val `studyNotFound` = new I18nKey("study:studyNotFound")
val `editChapter` = new I18nKey("study:editChapter")
val `newChapter` = new I18nKey("study:newChapter")
val `orientation` = new I18nKey("study:orientation")
val `analysisMode` = new I18nKey("study:analysisMode")
val `pinnedChapterComment` = new I18nKey("study:pinnedChapterComment")
val `saveChapter` = new I18nKey("study:saveChapter")
val `clearAnnotations` = new I18nKey("study:clearAnnotations")
val `deleteChapter` = new I18nKey("study:deleteChapter")
val `deleteThisChapter` = new I18nKey("study:deleteThisChapter")
val `clearAllCommentsInThisChapter` = new I18nKey("study:clearAllCommentsInThisChapter")
val `rightUnderTheBoard` = new I18nKey("study:rightUnderTheBoard")
val `noPinnedComment` = new I18nKey("study:noPinnedComment")
val `normalAnalysis` = new I18nKey("study:normalAnalysis")
val `hideNextMoves` = new I18nKey("study:hideNextMoves")
val `interactiveLesson` = new I18nKey("study:interactiveLesson")
val `chapterX` = new I18nKey("study:chapterX")
val `empty` = new I18nKey("study:empty")
val `startFromInitialPosition` = new I18nKey("study:startFromInitialPosition")
val `editor` = new I18nKey("study:editor")
val `startFromCustomPosition` = new I18nKey("study:startFromCustomPosition")
val `loadAGameByUrl` = new I18nKey("study:loadAGameByUrl")
val `loadAPositionFromFen` = new I18nKey("study:loadAPositionFromFen")
val `loadAGameFromPgn` = new I18nKey("study:loadAGameFromPgn")
val `automatic` = new I18nKey("study:automatic")
val `urlOfTheGame` = new I18nKey("study:urlOfTheGame")
val `loadAGameFromXOrY` = new I18nKey("study:loadAGameFromXOrY")
val `createChapter` = new I18nKey("study:createChapter")
val `configureLiveBroadcast` = new I18nKey("study:configureLiveBroadcast")
val `createStudy` = new I18nKey("study:createStudy")
val `editStudy` = new I18nKey("study:editStudy")
val `visibility` = new I18nKey("study:visibility")
val `public` = new I18nKey("study:public")
val `unlisted` = new I18nKey("study:unlisted")
val `inviteOnly` = new I18nKey("study:inviteOnly")
val `allowCloning` = new I18nKey("study:allowCloning")
val `nobody` = new I18nKey("study:nobody")
val `onlyMe` = new I18nKey("study:onlyMe")
val `contributors` = new I18nKey("study:contributors")
val `members` = new I18nKey("study:members")
val `everyone` = new I18nKey("study:everyone")
val `enableSync` = new I18nKey("study:enableSync")
val `yesKeepEveryoneOnTheSamePosition` = new I18nKey("study:yesKeepEveryoneOnTheSamePosition")
val `noLetPeopleBrowseFreely` = new I18nKey("study:noLetPeopleBrowseFreely")
val `pinnedStudyComment` = new I18nKey("study:pinnedStudyComment")
val `start` = new I18nKey("study:start")
val `save` = new I18nKey("study:save")
val `clearChat` = new I18nKey("study:clearChat")
val `deleteTheStudyChatHistory` = new I18nKey("study:deleteTheStudyChatHistory")
val `deleteStudy` = new I18nKey("study:deleteStudy")
val `deleteTheEntireStudy` = new I18nKey("study:deleteTheEntireStudy")
val `whereDoYouWantToStudyThat` = new I18nKey("study:whereDoYouWantToStudyThat")
val `nbChapters` = new I18nKey("study:nbChapters")
val `nbGames` = new I18nKey("study:nbGames")
val `nbMembers` = new I18nKey("study:nbMembers")
val `pasteYourPgnTextHereUpToNbGames` = new I18nKey("study:pasteYourPgnTextHereUpToNbGames")
}

object clas {
val `lichessClasses` = new I18nKey("class:lichessClasses")
val `teachClassesOfChessStudents` = new I18nKey("class:teachClassesOfChessStudents")
val `features` = new I18nKey("class:features")
val `quicklyGenerateSafeUsernames` = new I18nKey("class:quicklyGenerateSafeUsernames")
val `trackStudentProgress` = new I18nKey("class:trackStudentProgress")
val `messageAllStudents` = new I18nKey("class:messageAllStudents")
val `freeForAllForever` = new I18nKey("class:freeForAllForever")
val `applyToBeLichessTeacher` = new I18nKey("class:applyToBeLichessTeacher")
val `noClassesYet` = new I18nKey("class:noClassesYet")
val `teachersX` = new I18nKey("class:teachersX")
val `newClass` = new I18nKey("class:newClass")
val `closeClass` = new I18nKey("class:closeClass")
val `closedByX` = new I18nKey("class:closedByX")
val `reopen` = new I18nKey("class:reopen")
val `removeStudent` = new I18nKey("class:removeStudent")
val `removedStudents` = new I18nKey("class:removedStudents")
val `inviteTheStudentBack` = new I18nKey("class:inviteTheStudentBack")
val `sendAMessage` = new I18nKey("class:sendAMessage")
val `aLinkToTheClassWillBeAdded` = new I18nKey("class:aLinkToTheClassWillBeAdded")
val `className` = new I18nKey("class:className")
val `classDescription` = new I18nKey("class:classDescription")
val `visibleByBothStudentsAndTeachers` = new I18nKey("class:visibleByBothStudentsAndTeachers")
val `teachersOfTheClass` = new I18nKey("class:teachersOfTheClass")
val `addLichessUsernames` = new I18nKey("class:addLichessUsernames")
val `theyMustFirstApply` = new I18nKey("class:theyMustFirstApply")
val `resetPassword` = new I18nKey("class:resetPassword")
val `makeSureToCopy` = new I18nKey("class:makeSureToCopy")
val `passwordX` = new I18nKey("class:passwordX")
val `generateANewPassword` = new I18nKey("class:generateANewPassword")
val `invitedToXByY` = new I18nKey("class:invitedToXByY")
val `realName` = new I18nKey("class:realName")
val `privateWillNeverBeShown` = new I18nKey("class:privateWillNeverBeShown")
val `addStudent` = new I18nKey("class:addStudent")
val `lichessProfileXCreatedForY` = new I18nKey("class:lichessProfileXCreatedForY")
val `studentCredentials` = new I18nKey("class:studentCredentials")
val `inviteALichessAccount` = new I18nKey("class:inviteALichessAccount")
val `inviteDesc1` = new I18nKey("class:inviteDesc1")
val `inviteDesc2` = new I18nKey("class:inviteDesc2")
val `inviteDesc3` = new I18nKey("class:inviteDesc3")
val `inviteDesc4` = new I18nKey("class:inviteDesc4")
val `createANewLichessAccount` = new I18nKey("class:createANewLichessAccount")
val `createDesc1` = new I18nKey("class:createDesc1")
val `createDesc2` = new I18nKey("class:createDesc2")
val `createDesc3` = new I18nKey("class:createDesc3")
val `createDesc4` = new I18nKey("class:createDesc4")
val `lichessUsername` = new I18nKey("class:lichessUsername")
val `generateANewUsername` = new I18nKey("class:generateANewUsername")
val `welcomeToClass` = new I18nKey("class:welcomeToClass")
val `invitationToClass` = new I18nKey("class:invitationToClass")
val `clickToViewInvitation` = new I18nKey("class:clickToViewInvitation")
val `noPendingInvitations` = new I18nKey("class:noPendingInvitations")
val `onlyVisibleToTeachers` = new I18nKey("class:onlyVisibleToTeachers")
val `lastActiveDate` = new I18nKey("class:lastActiveDate")
val `managed` = new I18nKey("class:managed")
val `thisStudentAccountIsManaged` = new I18nKey("class:thisStudentAccountIsManaged")
val `upgradeFromManaged` = new I18nKey("class:upgradeFromManaged")
val `release` = new I18nKey("class:release")
val `releaseTheAccount` = new I18nKey("class:releaseTheAccount")
val `releaseDesc1` = new I18nKey("class:releaseDesc1")
val `releaseDesc2` = new I18nKey("class:releaseDesc2")
val `realUniqueEmail` = new I18nKey("class:realUniqueEmail")
val `teachers` = new I18nKey("class:teachers")
val `students` = new I18nKey("class:students")
val `progress` = new I18nKey("class:progress")
val `noStudents` = new I18nKey("class:noStudents")
val `noRemovedStudents` = new I18nKey("class:noRemovedStudents")
val `overDays` = new I18nKey("class:overDays")
val `timePlaying` = new I18nKey("class:timePlaying")
val `variantXOverLastY` = new I18nKey("class:variantXOverLastY")
val `winrate` = new I18nKey("class:winrate")
val `na` = new I18nKey("class:na")
val `news` = new I18nKey("class:news")
val `editNews` = new I18nKey("class:editNews")
val `notifyAllStudents` = new I18nKey("class:notifyAllStudents")
val `nothingHere` = new I18nKey("class:nothingHere")
val `newsEdit1` = new I18nKey("class:newsEdit1")
val `newsEdit2` = new I18nKey("class:newsEdit2")
val `newsEdit3` = new I18nKey("class:newsEdit3")
val `markdownAvailable` = new I18nKey("class:markdownAvailable")
val `nbPendingInvitations` = new I18nKey("class:nbPendingInvitations")
val `nbTeachers` = new I18nKey("class:nbTeachers")
val `nbStudents` = new I18nKey("class:nbStudents")
}

object contact {
val `contact` = new I18nKey("contact:contact")
val `contactLichess` = new I18nKey("contact:contactLichess")
val `whatCanWeHelpYouWith` = new I18nKey("contact:whatCanWeHelpYouWith")
val `visitThisPage` = new I18nKey("contact:visitThisPage")
val `iCantLogIn` = new I18nKey("contact:iCantLogIn")
val `noConfirmationEmail` = new I18nKey("contact:noConfirmationEmail")
val `forgotPassword` = new I18nKey("contact:forgotPassword")
val `forgotUsername` = new I18nKey("contact:forgotUsername")
val `youCanLoginWithEmail` = new I18nKey("contact:youCanLoginWithEmail")
val `lost2FA` = new I18nKey("contact:lost2FA")
val `doPasswordReset` = new I18nKey("contact:doPasswordReset")
val `accountSupport` = new I18nKey("contact:accountSupport")
val `wantTitle` = new I18nKey("contact:wantTitle")
val `visitTitleConfirmation` = new I18nKey("contact:visitTitleConfirmation")
val `wantCloseAccount` = new I18nKey("contact:wantCloseAccount")
val `closeYourAccount` = new I18nKey("contact:closeYourAccount")
val `doNotAskByEmail` = new I18nKey("contact:doNotAskByEmail")
val `wantReopen` = new I18nKey("contact:wantReopen")
val `reopenOnThisPage` = new I18nKey("contact:reopenOnThisPage")
val `doNotAskByEmailToReopen` = new I18nKey("contact:doNotAskByEmailToReopen")
val `wantChangeUsername` = new I18nKey("contact:wantChangeUsername")
val `changeUsernameCase` = new I18nKey("contact:changeUsernameCase")
val `cantChangeMore` = new I18nKey("contact:cantChangeMore")
val `orCloseAccount` = new I18nKey("contact:orCloseAccount")
val `wantClearHistory` = new I18nKey("contact:wantClearHistory")
val `cantClearHistory` = new I18nKey("contact:cantClearHistory")
val `wantReport` = new I18nKey("contact:wantReport")
val `toReportAPlayerUseForm` = new I18nKey("contact:toReportAPlayerUseForm")
val `youCanAlsoReachReportPage` = new I18nKey("contact:youCanAlsoReachReportPage")
val `doNotReportInForum` = new I18nKey("contact:doNotReportInForum")
val `doNotSendReportEmails` = new I18nKey("contact:doNotSendReportEmails")
val `doNotMessageModerators` = new I18nKey("contact:doNotMessageModerators")
val `onlyReports` = new I18nKey("contact:onlyReports")
val `wantReportBug` = new I18nKey("contact:wantReportBug")
val `reportBugInForum` = new I18nKey("contact:reportBugInForum")
val `reportWebsiteIssue` = new I18nKey("contact:reportWebsiteIssue")
val `reportMobileIssue` = new I18nKey("contact:reportMobileIssue")
val `reportBugInDiscord` = new I18nKey("contact:reportBugInDiscord")
val `howToReportBug` = new I18nKey("contact:howToReportBug")
val `illegalPawnCapture` = new I18nKey("contact:illegalPawnCapture")
val `calledEnPassant` = new I18nKey("contact:calledEnPassant")
val `tryEnPassant` = new I18nKey("contact:tryEnPassant")
val `illegalCastling` = new I18nKey("contact:illegalCastling")
val `castlingPrevented` = new I18nKey("contact:castlingPrevented")
val `castlingRules` = new I18nKey("contact:castlingRules")
val `tryCastling` = new I18nKey("contact:tryCastling")
val `castlingImported` = new I18nKey("contact:castlingImported")
val `insufficientMaterial` = new I18nKey("contact:insufficientMaterial")
val `fideMate` = new I18nKey("contact:fideMate")
val `knightMate` = new I18nKey("contact:knightMate")
val `noRatingPoints` = new I18nKey("contact:noRatingPoints")
val `ratedGame` = new I18nKey("contact:ratedGame")
val `errorPage` = new I18nKey("contact:errorPage")
val `reportErrorPage` = new I18nKey("contact:reportErrorPage")
val `banAppeal` = new I18nKey("contact:banAppeal")
val `engineAppeal` = new I18nKey("contact:engineAppeal")
val `sendAppealTo` = new I18nKey("contact:sendAppealTo")
val `falsePositives` = new I18nKey("contact:falsePositives")
val `ifLegit` = new I18nKey("contact:ifLegit")
val `accountLost` = new I18nKey("contact:accountLost")
val `doNotDeny` = new I18nKey("contact:doNotDeny")
val `otherRestriction` = new I18nKey("contact:otherRestriction")
val `collaboration` = new I18nKey("contact:collaboration")
val `monetizing` = new I18nKey("contact:monetizing")
val `buyingLichess` = new I18nKey("contact:buyingLichess")
val `authorizationToUse` = new I18nKey("contact:authorizationToUse")
val `welcomeToUse` = new I18nKey("contact:welcomeToUse")
val `videosAndBooks` = new I18nKey("contact:videosAndBooks")
val `creditAppreciated` = new I18nKey("contact:creditAppreciated")
val `noneOfTheAbove` = new I18nKey("contact:noneOfTheAbove")
val `sendEmailAt` = new I18nKey("contact:sendEmailAt")
val `explainYourRequest` = new I18nKey("contact:explainYourRequest")
}

object patron {
val `donate` = new I18nKey("patron:donate")
val `lichessPatron` = new I18nKey("patron:lichessPatron")
val `freeAccount` = new I18nKey("patron:freeAccount")
val `becomePatron` = new I18nKey("patron:becomePatron")
val `xBecamePatron` = new I18nKey("patron:xBecamePatron")
val `newPatrons` = new I18nKey("patron:newPatrons")
val `freeChess` = new I18nKey("patron:freeChess")
val `noAdsNoSubs` = new I18nKey("patron:noAdsNoSubs")
val `thankYou` = new I18nKey("patron:thankYou")
val `youHaveLifetime` = new I18nKey("patron:youHaveLifetime")
val `patronUntil` = new I18nKey("patron:patronUntil")
val `ifNotRenewed` = new I18nKey("patron:ifNotRenewed")
val `weAreNonProfit` = new I18nKey("patron:weAreNonProfit")
val `weRelyOnSupport` = new I18nKey("patron:weRelyOnSupport")
val `lifetime` = new I18nKey("patron:lifetime")
val `payLifetimeOnce` = new I18nKey("patron:payLifetimeOnce")
val `lifetimePatron` = new I18nKey("patron:lifetimePatron")
val `makeExtraDonation` = new I18nKey("patron:makeExtraDonation")
val `monthly` = new I18nKey("patron:monthly")
val `recurringBilling` = new I18nKey("patron:recurringBilling")
val `onetime` = new I18nKey("patron:onetime")
val `singleDonation` = new I18nKey("patron:singleDonation")
val `otherAmount` = new I18nKey("patron:otherAmount")
val `pleaseEnterAmount` = new I18nKey("patron:pleaseEnterAmount")
val `withCreditCard` = new I18nKey("patron:withCreditCard")
val `withPaypal` = new I18nKey("patron:withPaypal")
val `weAreSmallTeam` = new I18nKey("patron:weAreSmallTeam")
val `celebratedPatrons` = new I18nKey("patron:celebratedPatrons")
val `whereMoneyGoes` = new I18nKey("patron:whereMoneyGoes")
val `serversAndDeveloper` = new I18nKey("patron:serversAndDeveloper")
val `costBreakdown` = new I18nKey("patron:costBreakdown")
val `officialNonProfit` = new I18nKey("patron:officialNonProfit")
val `actOfCreation` = new I18nKey("patron:actOfCreation")
val `changeMonthlySupport` = new I18nKey("patron:changeMonthlySupport")
val `changeOrContact` = new I18nKey("patron:changeOrContact")
val `contactSupport` = new I18nKey("patron:contactSupport")
val `otherMethods` = new I18nKey("patron:otherMethods")
val `bankTransfers` = new I18nKey("patron:bankTransfers")
val `bitcoin` = new I18nKey("patron:bitcoin")
val `patronFeatures` = new I18nKey("patron:patronFeatures")
val `noPatronFeatures` = new I18nKey("patron:noPatronFeatures")
val `featuresComparison` = new I18nKey("patron:featuresComparison")
val `youSupportWith` = new I18nKey("patron:youSupportWith")
val `tyvm` = new I18nKey("patron:tyvm")
val `currentStatus` = new I18nKey("patron:currentStatus")
val `nextPayment` = new I18nKey("patron:nextPayment")
val `youWillBeChargedXOnY` = new I18nKey("patron:youWillBeChargedXOnY")
val `makeAdditionalDonation` = new I18nKey("patron:makeAdditionalDonation")
val `update` = new I18nKey("patron:update")
val `changeMonthlyAmount` = new I18nKey("patron:changeMonthlyAmount")
val `cancelSupport` = new I18nKey("patron:cancelSupport")
val `xOrY` = new I18nKey("patron:xOrY")
val `decideHowMuch` = new I18nKey("patron:decideHowMuch")
val `stopPayments` = new I18nKey("patron:stopPayments")
val `noLongerSupport` = new I18nKey("patron:noLongerSupport")
val `paymentHistory` = new I18nKey("patron:paymentHistory")
val `paid` = new I18nKey("patron:paid")
val `viewOthers` = new I18nKey("patron:viewOthers")
val `date` = new I18nKey("patron:date")
val `amount` = new I18nKey("patron:amount")
val `transactionCompleted` = new I18nKey("patron:transactionCompleted")
val `permanentPatron` = new I18nKey("patron:permanentPatron")
val `checkOutProfile` = new I18nKey("patron:checkOutProfile")
val `nowLifetime` = new I18nKey("patron:nowLifetime")
val `nowOneMonth` = new I18nKey("patron:nowOneMonth")
val `downgradeNextMonth` = new I18nKey("patron:downgradeNextMonth")
val `patronForMonths` = new I18nKey("patron:patronForMonths")
}

object coach {
val `lichessCoaches` = new I18nKey("coach:lichessCoaches")
val `lichessCoach` = new I18nKey("coach:lichessCoach")
val `areYouCoach` = new I18nKey("coach:areYouCoach")
val `nmOrFideTitle` = new I18nKey("coach:nmOrFideTitle")
val `confirmTitle` = new I18nKey("coach:confirmTitle")
val `sendApplication` = new I18nKey("coach:sendApplication")
val `location` = new I18nKey("coach:location")
val `languages` = new I18nKey("coach:languages")
val `rating` = new I18nKey("coach:rating")
val `hourlyRate` = new I18nKey("coach:hourlyRate")
val `availability` = new I18nKey("coach:availability")
val `accepting` = new I18nKey("coach:accepting")
val `notAccepting` = new I18nKey("coach:notAccepting")
val `xCoachesStudents` = new I18nKey("coach:xCoachesStudents")
val `viewXProfile` = new I18nKey("coach:viewXProfile")
val `sendPM` = new I18nKey("coach:sendPM")
val `aboutMe` = new I18nKey("coach:aboutMe")
val `playingExperience` = new I18nKey("coach:playingExperience")
val `teachingExperience` = new I18nKey("coach:teachingExperience")
val `otherExperiences` = new I18nKey("coach:otherExperiences")
val `bestSkills` = new I18nKey("coach:bestSkills")
val `teachingMethod` = new I18nKey("coach:teachingMethod")
val `publicStudies` = new I18nKey("coach:publicStudies")
val `youtubeVideos` = new I18nKey("coach:youtubeVideos")
val `thankYouForReview` = new I18nKey("coach:thankYouForReview")
val `xWillApproveIt` = new I18nKey("coach:xWillApproveIt")
val `reviewCoach` = new I18nKey("coach:reviewCoach")
val `describeExperienceWith` = new I18nKey("coach:describeExperienceWith")
val `studentReviews` = new I18nKey("coach:studentReviews")
}

object broadcast {
val `broadcasts` = new I18nKey("broadcast:broadcasts")
val `liveBroadcasts` = new I18nKey("broadcast:liveBroadcasts")
val `newBroadcast` = new I18nKey("broadcast:newBroadcast")
val `ongoing` = new I18nKey("broadcast:ongoing")
val `upcoming` = new I18nKey("broadcast:upcoming")
val `completed` = new I18nKey("broadcast:completed")
val `eventName` = new I18nKey("broadcast:eventName")
val `eventDescription` = new I18nKey("broadcast:eventDescription")
val `fullDescription` = new I18nKey("broadcast:fullDescription")
val `fullDescriptionHelp` = new I18nKey("broadcast:fullDescriptionHelp")
val `sourceUrlOrGameIds` = new I18nKey("broadcast:sourceUrlOrGameIds")
val `sourceUrlHelp` = new I18nKey("broadcast:sourceUrlHelp")
val `gameIdsHelp` = new I18nKey("broadcast:gameIdsHelp")
val `roundNumber` = new I18nKey("broadcast:roundNumber")
val `startDate` = new I18nKey("broadcast:startDate")
val `startDateHelp` = new I18nKey("broadcast:startDateHelp")
val `credits` = new I18nKey("broadcast:credits")
val `cloneBroadcast` = new I18nKey("broadcast:cloneBroadcast")
val `resetBroadcast` = new I18nKey("broadcast:resetBroadcast")
}

object streamer {
val `lichessStreamers` = new I18nKey("streamer:lichessStreamers")
val `lichessStreamer` = new I18nKey("streamer:lichessStreamer")
val `live` = new I18nKey("streamer:live")
val `offline` = new I18nKey("streamer:offline")
val `currentlyStreaming` = new I18nKey("streamer:currentlyStreaming")
val `lastStream` = new I18nKey("streamer:lastStream")
val `becomeStreamer` = new I18nKey("streamer:becomeStreamer")
val `doYouHaveStream` = new I18nKey("streamer:doYouHaveStream")
val `hereWeGo` = new I18nKey("streamer:hereWeGo")
val `allStreamers` = new I18nKey("streamer:allStreamers")
val `editPage` = new I18nKey("streamer:editPage")
val `yourPage` = new I18nKey("streamer:yourPage")
val `downloadKit` = new I18nKey("streamer:downloadKit")
val `xIsStreaming` = new I18nKey("streamer:xIsStreaming")
val `rules` = new I18nKey("streamer:rules")
val `rule1` = new I18nKey("streamer:rule1")
val `rule2` = new I18nKey("streamer:rule2")
val `rule3` = new I18nKey("streamer:rule3")
val `perks` = new I18nKey("streamer:perks")
val `perk1` = new I18nKey("streamer:perk1")
val `perk2` = new I18nKey("streamer:perk2")
val `perk3` = new I18nKey("streamer:perk3")
val `perk4` = new I18nKey("streamer:perk4")
val `approved` = new I18nKey("streamer:approved")
val `pendingReview` = new I18nKey("streamer:pendingReview")
val `pleaseFillIn` = new I18nKey("streamer:pleaseFillIn")
val `whenReady` = new I18nKey("streamer:whenReady")
val `requestReview` = new I18nKey("streamer:requestReview")
val `anotherLanguage` = new I18nKey("streamer:anotherLanguage")
val `twitchUsername` = new I18nKey("streamer:twitchUsername")
val `optionalOrEmpty` = new I18nKey("streamer:optionalOrEmpty")
val `youtubeChannel` = new I18nKey("streamer:youtubeChannel")
val `streamerName` = new I18nKey("streamer:streamerName")
val `visibility` = new I18nKey("streamer:visibility")
val `whenApproved` = new I18nKey("streamer:whenApproved")
val `headline` = new I18nKey("streamer:headline")
val `tellUsAboutTheStream` = new I18nKey("streamer:tellUsAboutTheStream")
val `longDescription` = new I18nKey("streamer:longDescription")
val `xStreamerPicture` = new I18nKey("streamer:xStreamerPicture")
val `changePicture` = new I18nKey("streamer:changePicture")
val `uploadPicture` = new I18nKey("streamer:uploadPicture")
val `deletePicture` = new I18nKey("streamer:deletePicture")
val `maxSize` = new I18nKey("streamer:maxSize")
val `installBlocker` = new I18nKey("streamer:installBlocker")
val `beSafe` = new I18nKey("streamer:beSafe")
val `keepItShort` = new I18nKey("streamer:keepItShort")
}

object tfa {
val `twoFactorAuth` = new I18nKey("tfa:twoFactorAuth")
val `twoFactorHelp` = new I18nKey("tfa:twoFactorHelp")
val `twoFactorApp` = new I18nKey("tfa:twoFactorApp")
val `scanTheCode` = new I18nKey("tfa:scanTheCode")
val `enterPassword` = new I18nKey("tfa:enterPassword")
val `ifYouCannotScanEnterX` = new I18nKey("tfa:ifYouCannotScanEnterX")
val `authenticationCode` = new I18nKey("tfa:authenticationCode")
val `ifYouLoseAccess` = new I18nKey("tfa:ifYouLoseAccess")
val `enableTwoFactor` = new I18nKey("tfa:enableTwoFactor")
val `disableTwoFactor` = new I18nKey("tfa:disableTwoFactor")
val `twoFactorEnabled` = new I18nKey("tfa:twoFactorEnabled")
val `twoFactorDisable` = new I18nKey("tfa:twoFactorDisable")
val `openTwoFactorApp` = new I18nKey("tfa:openTwoFactorApp")
}

object settings {
val `settings` = new I18nKey("settings:settings")
val `closeAccount` = new I18nKey("settings:closeAccount")
val `closingIsDefinitive` = new I18nKey("settings:closingIsDefinitive")
val `cantOpenSimilarAccount` = new I18nKey("settings:cantOpenSimilarAccount")
val `changedMindDoNotCloseAccount` = new I18nKey("settings:changedMindDoNotCloseAccount")
val `closeAccountExplanation` = new I18nKey("settings:closeAccountExplanation")
val `thisAccountIsClosed` = new I18nKey("settings:thisAccountIsClosed")
}

object preferences {
val `preferences` = new I18nKey("preferences:preferences")
val `gameDisplay` = new I18nKey("preferences:gameDisplay")
val `pieceAnimation` = new I18nKey("preferences:pieceAnimation")
val `materialDifference` = new I18nKey("preferences:materialDifference")
val `boardHighlights` = new I18nKey("preferences:boardHighlights")
val `pieceDestinations` = new I18nKey("preferences:pieceDestinations")
val `boardCoordinates` = new I18nKey("preferences:boardCoordinates")
val `moveListWhilePlaying` = new I18nKey("preferences:moveListWhilePlaying")
val `pgnPieceNotation` = new I18nKey("preferences:pgnPieceNotation")
val `chessPieceSymbol` = new I18nKey("preferences:chessPieceSymbol")
val `pgnLetter` = new I18nKey("preferences:pgnLetter")
val `zenMode` = new I18nKey("preferences:zenMode")
val `displayBoardResizeHandle` = new I18nKey("preferences:displayBoardResizeHandle")
val `onlyOnInitialPosition` = new I18nKey("preferences:onlyOnInitialPosition")
val `blindfoldChess` = new I18nKey("preferences:blindfoldChess")
val `chessClock` = new I18nKey("preferences:chessClock")
val `tenthsOfSeconds` = new I18nKey("preferences:tenthsOfSeconds")
val `whenTimeRemainingLessThanTenSeconds` = new I18nKey("preferences:whenTimeRemainingLessThanTenSeconds")
val `horizontalGreenProgressBars` = new I18nKey("preferences:horizontalGreenProgressBars")
val `soundWhenTimeGetsCritical` = new I18nKey("preferences:soundWhenTimeGetsCritical")
val `giveMoreTime` = new I18nKey("preferences:giveMoreTime")
val `gameBehavior` = new I18nKey("preferences:gameBehavior")
val `howDoYouMovePieces` = new I18nKey("preferences:howDoYouMovePieces")
val `clickTwoSquares` = new I18nKey("preferences:clickTwoSquares")
val `dragPiece` = new I18nKey("preferences:dragPiece")
val `bothClicksAndDrag` = new I18nKey("preferences:bothClicksAndDrag")
val `premovesPlayingDuringOpponentTurn` = new I18nKey("preferences:premovesPlayingDuringOpponentTurn")
val `takebacksWithOpponentApproval` = new I18nKey("preferences:takebacksWithOpponentApproval")
val `inCasualGamesOnly` = new I18nKey("preferences:inCasualGamesOnly")
val `promoteToQueenAutomatically` = new I18nKey("preferences:promoteToQueenAutomatically")
val `whenPremoving` = new I18nKey("preferences:whenPremoving")
val `claimDrawOnThreefoldRepetitionAutomatically` = new I18nKey("preferences:claimDrawOnThreefoldRepetitionAutomatically")
val `whenTimeRemainingLessThanThirtySeconds` = new I18nKey("preferences:whenTimeRemainingLessThanThirtySeconds")
val `moveConfirmation` = new I18nKey("preferences:moveConfirmation")
val `inCorrespondenceGames` = new I18nKey("preferences:inCorrespondenceGames")
val `correspondenceAndUnlimited` = new I18nKey("preferences:correspondenceAndUnlimited")
val `confirmResignationAndDrawOffers` = new I18nKey("preferences:confirmResignationAndDrawOffers")
val `castleByMovingTheKingTwoSquaresOrOntoTheRook` = new I18nKey("preferences:castleByMovingTheKingTwoSquaresOrOntoTheRook")
val `castleByMovingTwoSquares` = new I18nKey("preferences:castleByMovingTwoSquares")
val `castleByMovingOntoTheRook` = new I18nKey("preferences:castleByMovingOntoTheRook")
val `inputMovesWithTheKeyboard` = new I18nKey("preferences:inputMovesWithTheKeyboard")
val `snapArrowsToValidMoves` = new I18nKey("preferences:snapArrowsToValidMoves")
val `sayGgWpAfterLosingOrDrawing` = new I18nKey("preferences:sayGgWpAfterLosingOrDrawing")
val `yourPreferencesHaveBeenSaved` = new I18nKey("preferences:yourPreferencesHaveBeenSaved")
}

object team {
val `team` = new I18nKey("team:team")
val `teams` = new I18nKey("team:teams")
val `allTeams` = new I18nKey("team:allTeams")
val `newTeam` = new I18nKey("team:newTeam")
val `myTeams` = new I18nKey("team:myTeams")
val `noTeamFound` = new I18nKey("team:noTeamFound")
val `joinTeam` = new I18nKey("team:joinTeam")
val `quitTeam` = new I18nKey("team:quitTeam")
val `manuallyReviewAdmissionRequests` = new I18nKey("team:manuallyReviewAdmissionRequests")
val `manuallyReviewAdmissionRequestsHelp` = new I18nKey("team:manuallyReviewAdmissionRequestsHelp")
val `teamBestPlayers` = new I18nKey("team:teamBestPlayers")
val `teamRecentMembers` = new I18nKey("team:teamRecentMembers")
val `kickSomeone` = new I18nKey("team:kickSomeone")
val `whoToKick` = new I18nKey("team:whoToKick")
val `willBeReviewed` = new I18nKey("team:willBeReviewed")
val `beingReviewed` = new I18nKey("team:beingReviewed")
val `teamBattle` = new I18nKey("team:teamBattle")
val `teamBattleOverview` = new I18nKey("team:teamBattleOverview")
val `teamTournament` = new I18nKey("team:teamTournament")
val `teamTournamentOverview` = new I18nKey("team:teamTournamentOverview")
val `messageAllMembers` = new I18nKey("team:messageAllMembers")
val `messageAllMembersOverview` = new I18nKey("team:messageAllMembersOverview")
val `messageAllMembersLongDescription` = new I18nKey("team:messageAllMembersLongDescription")
val `teamsIlead` = new I18nKey("team:teamsIlead")
val `youWayWantToLinkOneOfTheseTournaments` = new I18nKey("team:youWayWantToLinkOneOfTheseTournaments")
val `usersWhoCanManageThisTeam` = new I18nKey("team:usersWhoCanManageThisTeam")
val `leadersChat` = new I18nKey("team:leadersChat")
val `closeTeam` = new I18nKey("team:closeTeam")
val `closeTeamDescription` = new I18nKey("team:closeTeamDescription")
val `teamPassword` = new I18nKey("team:teamPassword")
val `teamPasswordDescriptionForLeader` = new I18nKey("team:teamPasswordDescriptionForLeader")
val `incorrectTeamPassword` = new I18nKey("team:incorrectTeamPassword")
val `teamAlreadyExists` = new I18nKey("team:teamAlreadyExists")
val `nbMembers` = new I18nKey("team:nbMembers")
val `teamLeaders` = new I18nKey("team:teamLeaders")
val `xJoinRequests` = new I18nKey("team:xJoinRequests")
}

object perfStat {
val `perfStats` = new I18nKey("perfStat:perfStats")
val `viewTheGames` = new I18nKey("perfStat:viewTheGames")
val `provisional` = new I18nKey("perfStat:provisional")
val `notEnoughRatedGames` = new I18nKey("perfStat:notEnoughRatedGames")
val `progressOverLastXGames` = new I18nKey("perfStat:progressOverLastXGames")
val `ratingDeviation` = new I18nKey("perfStat:ratingDeviation")
val `ratingDeviationHelp` = new I18nKey("perfStat:ratingDeviationHelp")
val `totalGames` = new I18nKey("perfStat:totalGames")
val `ratedGames` = new I18nKey("perfStat:ratedGames")
val `tournamentGames` = new I18nKey("perfStat:tournamentGames")
val `berserkedGames` = new I18nKey("perfStat:berserkedGames")
val `timeSpentPlaying` = new I18nKey("perfStat:timeSpentPlaying")
val `averageOpponent` = new I18nKey("perfStat:averageOpponent")
val `victories` = new I18nKey("perfStat:victories")
val `defeats` = new I18nKey("perfStat:defeats")
val `disconnections` = new I18nKey("perfStat:disconnections")
val `notEnoughGames` = new I18nKey("perfStat:notEnoughGames")
val `highestRating` = new I18nKey("perfStat:highestRating")
val `lowestRating` = new I18nKey("perfStat:lowestRating")
val `fromXToY` = new I18nKey("perfStat:fromXToY")
val `winningStreak` = new I18nKey("perfStat:winningStreak")
val `losingStreak` = new I18nKey("perfStat:losingStreak")
val `longestStreak` = new I18nKey("perfStat:longestStreak")
val `currentStreak` = new I18nKey("perfStat:currentStreak")
val `bestRated` = new I18nKey("perfStat:bestRated")
val `worstRated` = new I18nKey("perfStat:worstRated")
val `gamesInARow` = new I18nKey("perfStat:gamesInARow")
val `lessThanOneHour` = new I18nKey("perfStat:lessThanOneHour")
val `maxTimePlaying` = new I18nKey("perfStat:maxTimePlaying")
val `now` = new I18nKey("perfStat:now")
}

object search {
val `search` = new I18nKey("search:search")
val `advancedSearch` = new I18nKey("search:advancedSearch")
val `opponentName` = new I18nKey("search:opponentName")
val `loser` = new I18nKey("search:loser")
val `from` = new I18nKey("search:from")
val `to` = new I18nKey("search:to")
val `humanOrComputer` = new I18nKey("search:humanOrComputer")
val `aiLevel` = new I18nKey("search:aiLevel")
val `source` = new I18nKey("search:source")
val `nbTurns` = new I18nKey("search:nbTurns")
val `result` = new I18nKey("search:result")
val `winnerColor` = new I18nKey("search:winnerColor")
val `date` = new I18nKey("search:date")
val `sortBy` = new I18nKey("search:sortBy")
val `analysis` = new I18nKey("search:analysis")
val `onlyAnalysed` = new I18nKey("search:onlyAnalysed")
val `searchInXGames` = new I18nKey("search:searchInXGames")
val `xGamesFound` = new I18nKey("search:xGamesFound")
}

object tourname {
val `hourlyRapidArena` = new I18nKey("tourname:hourlyRapidArena")
val `hourlyRapid` = new I18nKey("tourname:hourlyRapid")
val `hourlyXArena` = new I18nKey("tourname:hourlyXArena")
val `hourlyX` = new I18nKey("tourname:hourlyX")
val `dailyRapidArena` = new I18nKey("tourname:dailyRapidArena")
val `dailyRapid` = new I18nKey("tourname:dailyRapid")
val `dailyClassicalArena` = new I18nKey("tourname:dailyClassicalArena")
val `dailyClassical` = new I18nKey("tourname:dailyClassical")
val `dailyXArena` = new I18nKey("tourname:dailyXArena")
val `dailyX` = new I18nKey("tourname:dailyX")
val `easternRapidArena` = new I18nKey("tourname:easternRapidArena")
val `easternRapid` = new I18nKey("tourname:easternRapid")
val `easternClassicalArena` = new I18nKey("tourname:easternClassicalArena")
val `easternClassical` = new I18nKey("tourname:easternClassical")
val `easternXArena` = new I18nKey("tourname:easternXArena")
val `easternX` = new I18nKey("tourname:easternX")
val `weeklyRapidArena` = new I18nKey("tourname:weeklyRapidArena")
val `weeklyRapid` = new I18nKey("tourname:weeklyRapid")
val `weeklyClassicalArena` = new I18nKey("tourname:weeklyClassicalArena")
val `weeklyClassical` = new I18nKey("tourname:weeklyClassical")
val `weeklyXArena` = new I18nKey("tourname:weeklyXArena")
val `weeklyX` = new I18nKey("tourname:weeklyX")
val `monthlyRapidArena` = new I18nKey("tourname:monthlyRapidArena")
val `monthlyRapid` = new I18nKey("tourname:monthlyRapid")
val `monthlyClassicalArena` = new I18nKey("tourname:monthlyClassicalArena")
val `monthlyClassical` = new I18nKey("tourname:monthlyClassical")
val `monthlyXArena` = new I18nKey("tourname:monthlyXArena")
val `monthlyX` = new I18nKey("tourname:monthlyX")
val `yearlyRapidArena` = new I18nKey("tourname:yearlyRapidArena")
val `yearlyRapid` = new I18nKey("tourname:yearlyRapid")
val `yearlyClassicalArena` = new I18nKey("tourname:yearlyClassicalArena")
val `yearlyClassical` = new I18nKey("tourname:yearlyClassical")
val `yearlyXArena` = new I18nKey("tourname:yearlyXArena")
val `yearlyX` = new I18nKey("tourname:yearlyX")
val `rapidShieldArena` = new I18nKey("tourname:rapidShieldArena")
val `rapidShield` = new I18nKey("tourname:rapidShield")
val `classicalShieldArena` = new I18nKey("tourname:classicalShieldArena")
val `classicalShield` = new I18nKey("tourname:classicalShield")
val `xShieldArena` = new I18nKey("tourname:xShieldArena")
val `xShield` = new I18nKey("tourname:xShield")
val `openingRapidArena` = new I18nKey("tourname:openingRapidArena")
val `openingRapid` = new I18nKey("tourname:openingRapid")
val `xTeamBattle` = new I18nKey("tourname:xTeamBattle")
val `eliteXArena` = new I18nKey("tourname:eliteXArena")
val `eliteX` = new I18nKey("tourname:eliteX")
val `xArena` = new I18nKey("tourname:xArena")
}

object faq {
val `faqAbbreviation` = new I18nKey("faq:faqAbbreviation")
val `frequentlyAskedQuestions` = new I18nKey("faq:frequentlyAskedQuestions")
val `whyIsLichessCalledLichess` = new I18nKey("faq:whyIsLichessCalledLichess")
val `lichessCombinationLiveLightLibrePronounced` = new I18nKey("faq:lichessCombinationLiveLightLibrePronounced")
val `leechess` = new I18nKey("faq:leechess")
val `hearItPronouncedBySpecialist` = new I18nKey("faq:hearItPronouncedBySpecialist")
val `whyLiveLightLibre` = new I18nKey("faq:whyLiveLightLibre")
val `whyIsLilaCalledLila` = new I18nKey("faq:whyIsLilaCalledLila")
val `howCanIContributeToLichess` = new I18nKey("faq:howCanIContributeToLichess")
val `lichessPoweredByDonationsAndVolunteers` = new I18nKey("faq:lichessPoweredByDonationsAndVolunteers")
val `findMoreAndSeeHowHelp` = new I18nKey("faq:findMoreAndSeeHowHelp")
val `beingAPatron` = new I18nKey("faq:beingAPatron")
val `breakdownOfOurCosts` = new I18nKey("faq:breakdownOfOurCosts")
val `otherWaysToHelp` = new I18nKey("faq:otherWaysToHelp")
val `areThereWebsitesBasedOnLichess` = new I18nKey("faq:areThereWebsitesBasedOnLichess")
val `yesLichessInspiredOtherOpenSourceWebsites` = new I18nKey("faq:yesLichessInspiredOtherOpenSourceWebsites")
val `fairPlay` = new I18nKey("faq:fairPlay")
val `whenAmIEligibleRatinRefund` = new I18nKey("faq:whenAmIEligibleRatinRefund")
val `ratingRefundExplanation` = new I18nKey("faq:ratingRefundExplanation")
val `preventLeavingGameWithoutResigning` = new I18nKey("faq:preventLeavingGameWithoutResigning")
val `leavingGameWithoutResigningExplanation` = new I18nKey("faq:leavingGameWithoutResigningExplanation")
val `howCanIBecomeModerator` = new I18nKey("faq:howCanIBecomeModerator")
val `youCannotApply` = new I18nKey("faq:youCannotApply")
val `isCorrespondenceDifferent` = new I18nKey("faq:isCorrespondenceDifferent")
val `youCanUseOpeningBookNoEngine` = new I18nKey("faq:youCanUseOpeningBookNoEngine")
val `gameplay` = new I18nKey("faq:gameplay")
val `howBulletBlitzEtcDecided` = new I18nKey("faq:howBulletBlitzEtcDecided")
val `basedOnGameDuration` = new I18nKey("faq:basedOnGameDuration")
val `durationFormula` = new I18nKey("faq:durationFormula")
val `inferiorThanXsEqualYtimeControl` = new I18nKey("faq:inferiorThanXsEqualYtimeControl")
val `superiorThanXsEqualYtimeControl` = new I18nKey("faq:superiorThanXsEqualYtimeControl")
val `whatVariantsCanIplay` = new I18nKey("faq:whatVariantsCanIplay")
val `lichessSupportChessAnd` = new I18nKey("faq:lichessSupportChessAnd")
val `eightVariants` = new I18nKey("faq:eightVariants")
val `whatIsACPL` = new I18nKey("faq:whatIsACPL")
val `acplExplanation` = new I18nKey("faq:acplExplanation")
val `insufficientMaterial` = new I18nKey("faq:insufficientMaterial")
val `lichessFollowFIDErules` = new I18nKey("faq:lichessFollowFIDErules")
val `fideHandbookX` = new I18nKey("faq:fideHandbookX")
val `discoveringEnPassant` = new I18nKey("faq:discoveringEnPassant")
val `explainingEnPassant` = new I18nKey("faq:explainingEnPassant")
val `goodIntroduction` = new I18nKey("faq:goodIntroduction")
val `officialRulesPDF` = new I18nKey("faq:officialRulesPDF")
val `lichessTraining` = new I18nKey("faq:lichessTraining")
val `threefoldRepetition` = new I18nKey("faq:threefoldRepetition")
val `threefoldRepetitionExplanation` = new I18nKey("faq:threefoldRepetitionExplanation")
val `threefoldRepetitionLowerCase` = new I18nKey("faq:threefoldRepetitionLowerCase")
val `notRepeatedMoves` = new I18nKey("faq:notRepeatedMoves")
val `repeatedPositionsThatMatters` = new I18nKey("faq:repeatedPositionsThatMatters")
val `positions` = new I18nKey("faq:positions")
val `weRepeatedthreeTimesPosButNoDraw` = new I18nKey("faq:weRepeatedthreeTimesPosButNoDraw")
val `threeFoldHasToBeClaimed` = new I18nKey("faq:threeFoldHasToBeClaimed")
val `configure` = new I18nKey("faq:configure")
val `accounts` = new I18nKey("faq:accounts")
val `titlesAvailableOnLichess` = new I18nKey("faq:titlesAvailableOnLichess")
val `lichessRecognizeAllOTBtitles` = new I18nKey("faq:lichessRecognizeAllOTBtitles")
val `showYourTitle` = new I18nKey("faq:showYourTitle")
val `asWellAsManyNMtitles` = new I18nKey("faq:asWellAsManyNMtitles")
val `verificationForm` = new I18nKey("faq:verificationForm")
val `canIbecomeLM` = new I18nKey("faq:canIbecomeLM")
val `noUpperCaseDot` = new I18nKey("faq:noUpperCaseDot")
val `lMtitleComesToYouDoNotRequestIt` = new I18nKey("faq:lMtitleComesToYouDoNotRequestIt")
val `whatUsernameCanIchoose` = new I18nKey("faq:whatUsernameCanIchoose")
val `usernamesNotOffensive` = new I18nKey("faq:usernamesNotOffensive")
val `guidelines` = new I18nKey("faq:guidelines")
val `canIChangeMyUsername` = new I18nKey("faq:canIChangeMyUsername")
val `usernamesCannotBeChanged` = new I18nKey("faq:usernamesCannotBeChanged")
val `uniqueTrophies` = new I18nKey("faq:uniqueTrophies")
val `ownerUniqueTrophies` = new I18nKey("faq:ownerUniqueTrophies")
val `wayOfBerserkExplanation` = new I18nKey("faq:wayOfBerserkExplanation")
val `aHourlyBulletTournament` = new I18nKey("faq:aHourlyBulletTournament")
val `goldenZeeExplanation` = new I18nKey("faq:goldenZeeExplanation")
val `lichessRatings` = new I18nKey("faq:lichessRatings")
val `whichRatingSystemUsedByLichess` = new I18nKey("faq:whichRatingSystemUsedByLichess")
val `ratingSystemUsedByLichess` = new I18nKey("faq:ratingSystemUsedByLichess")
val `whatIsProvisionalRating` = new I18nKey("faq:whatIsProvisionalRating")
val `provisionalRatingExplanation` = new I18nKey("faq:provisionalRatingExplanation")
val `notPlayedEnoughRatedGamesAgainstX` = new I18nKey("faq:notPlayedEnoughRatedGamesAgainstX")
val `similarOpponents` = new I18nKey("faq:similarOpponents")
val `notPlayedRecently` = new I18nKey("faq:notPlayedRecently")
val `ratingDeviationMorethanOneHundredTen` = new I18nKey("faq:ratingDeviationMorethanOneHundredTen")
val `howDoLeaderoardsWork` = new I18nKey("faq:howDoLeaderoardsWork")
val `inOrderToAppearsYouMust` = new I18nKey("faq:inOrderToAppearsYouMust")
val `ratingLeaderboards` = new I18nKey("faq:ratingLeaderboards")
val `havePlayedMoreThanThirtyGamesInThatRating` = new I18nKey("faq:havePlayedMoreThanThirtyGamesInThatRating")
val `havePlayedARatedGameAtLeastOneWeekAgo` = new I18nKey("faq:havePlayedARatedGameAtLeastOneWeekAgo")
val `ratingDeviationLowerThanXinChessYinVariants` = new I18nKey("faq:ratingDeviationLowerThanXinChessYinVariants")
val `beInTopTen` = new I18nKey("faq:beInTopTen")
val `secondRequirementToStopOldPlayersTrustingLeaderboards` = new I18nKey("faq:secondRequirementToStopOldPlayersTrustingLeaderboards")
val `whyAreRatingHigher` = new I18nKey("faq:whyAreRatingHigher")
val `whyAreRatingHigherExplanation` = new I18nKey("faq:whyAreRatingHigherExplanation")
val `howToHideRatingWhilePlaying` = new I18nKey("faq:howToHideRatingWhilePlaying")
val `enableZenMode` = new I18nKey("faq:enableZenMode")
val `displayPreferences` = new I18nKey("faq:displayPreferences")
val `connexionLostCanIGetMyRatingBack` = new I18nKey("faq:connexionLostCanIGetMyRatingBack")
val `weCannotDoThatEvenIfItIsServerSideButThatsRare` = new I18nKey("faq:weCannotDoThatEvenIfItIsServerSideButThatsRare")
val `howToThreeDots` = new I18nKey("faq:howToThreeDots")
val `enableDisableNotificationPopUps` = new I18nKey("faq:enableDisableNotificationPopUps")
val `viewSiteInformationPopUp` = new I18nKey("faq:viewSiteInformationPopUp")
val `lichessCanOptionnalySendPopUps` = new I18nKey("faq:lichessCanOptionnalySendPopUps")
}

object lag {
val `isLichessLagging` = new I18nKey("lag:isLichessLagging")
val `measurementInProgressThreeDot` = new I18nKey("lag:measurementInProgressThreeDot")
val `noAndYourNetworkIsGood` = new I18nKey("lag:noAndYourNetworkIsGood")
val `noAndYourNetworkIsBad` = new I18nKey("lag:noAndYourNetworkIsBad")
val `yesItWillBeFixedSoon` = new I18nKey("lag:yesItWillBeFixedSoon")
val `andNowTheLongAnswerLagComposedOfTwoValues` = new I18nKey("lag:andNowTheLongAnswerLagComposedOfTwoValues")
val `lichessServerLatency` = new I18nKey("lag:lichessServerLatency")
val `lichessServerLatencyExplanation` = new I18nKey("lag:lichessServerLatencyExplanation")
val `networkBetweenLichessAndYou` = new I18nKey("lag:networkBetweenLichessAndYou")
val `networkBetweenLichessAndYouExplanation` = new I18nKey("lag:networkBetweenLichessAndYouExplanation")
val `youCanFindTheseValuesAtAnyTimeByClickingOnYourUsername` = new I18nKey("lag:youCanFindTheseValuesAtAnyTimeByClickingOnYourUsername")
val `lagCompensation` = new I18nKey("lag:lagCompensation")
val `lagCompensationExplanation` = new I18nKey("lag:lagCompensationExplanation")
}

object swiss {
val `swissTournaments` = new I18nKey("swiss:swissTournaments")
val `viewAllXRounds` = new I18nKey("swiss:viewAllXRounds")
}

object puzzle {
val `puzzles` = new I18nKey("puzzle:puzzles")
val `puzzleThemes` = new I18nKey("puzzle:puzzleThemes")
val `recommended` = new I18nKey("puzzle:recommended")
val `phases` = new I18nKey("puzzle:phases")
val `motifs` = new I18nKey("puzzle:motifs")
val `advanced` = new I18nKey("puzzle:advanced")
val `lengths` = new I18nKey("puzzle:lengths")
val `mates` = new I18nKey("puzzle:mates")
val `goals` = new I18nKey("puzzle:goals")
val `origin` = new I18nKey("puzzle:origin")
val `specialMoves` = new I18nKey("puzzle:specialMoves")
val `didYouLikeThisPuzzle` = new I18nKey("puzzle:didYouLikeThisPuzzle")
val `voteToLoadNextOne` = new I18nKey("puzzle:voteToLoadNextOne")
val `yourPuzzleRatingX` = new I18nKey("puzzle:yourPuzzleRatingX")
val `findTheBestMoveForWhite` = new I18nKey("puzzle:findTheBestMoveForWhite")
val `findTheBestMoveForBlack` = new I18nKey("puzzle:findTheBestMoveForBlack")
val `toGetPersonalizedPuzzles` = new I18nKey("puzzle:toGetPersonalizedPuzzles")
val `puzzleId` = new I18nKey("puzzle:puzzleId")
val `puzzleOfTheDay` = new I18nKey("puzzle:puzzleOfTheDay")
val `clickToSolve` = new I18nKey("puzzle:clickToSolve")
val `goodMove` = new I18nKey("puzzle:goodMove")
val `bestMove` = new I18nKey("puzzle:bestMove")
val `keepGoing` = new I18nKey("puzzle:keepGoing")
val `puzzleSuccess` = new I18nKey("puzzle:puzzleSuccess")
val `puzzleComplete` = new I18nKey("puzzle:puzzleComplete")
val `notTheMove` = new I18nKey("puzzle:notTheMove")
val `trySomethingElse` = new I18nKey("puzzle:trySomethingElse")
val `ratingX` = new I18nKey("puzzle:ratingX")
val `hidden` = new I18nKey("puzzle:hidden")
val `fromGameLink` = new I18nKey("puzzle:fromGameLink")
val `continueTraining` = new I18nKey("puzzle:continueTraining")
val `difficultyLevel` = new I18nKey("puzzle:difficultyLevel")
val `normal` = new I18nKey("puzzle:normal")
val `easier` = new I18nKey("puzzle:easier")
val `easiest` = new I18nKey("puzzle:easiest")
val `harder` = new I18nKey("puzzle:harder")
val `hardest` = new I18nKey("puzzle:hardest")
val `example` = new I18nKey("puzzle:example")
val `addAnotherTheme` = new I18nKey("puzzle:addAnotherTheme")
val `jumpToNextPuzzleImmediately` = new I18nKey("puzzle:jumpToNextPuzzleImmediately")
val `puzzleDashboard` = new I18nKey("puzzle:puzzleDashboard")
val `improvementAreas` = new I18nKey("puzzle:improvementAreas")
val `strengths` = new I18nKey("puzzle:strengths")
val `history` = new I18nKey("puzzle:history")
val `solved` = new I18nKey("puzzle:solved")
val `failed` = new I18nKey("puzzle:failed")
val `streakDescription` = new I18nKey("puzzle:streakDescription")
val `yourStreakX` = new I18nKey("puzzle:yourStreakX")
val `streakSkipExplanation` = new I18nKey("puzzle:streakSkipExplanation")
val `continueTheStreak` = new I18nKey("puzzle:continueTheStreak")
val `newStreak` = new I18nKey("puzzle:newStreak")
val `playedXTimes` = new I18nKey("puzzle:playedXTimes")
}

object puzzleTheme {
val `advancedPawn` = new I18nKey("puzzleTheme:advancedPawn")
val `advancedPawnDescription` = new I18nKey("puzzleTheme:advancedPawnDescription")
val `advantage` = new I18nKey("puzzleTheme:advantage")
val `advantageDescription` = new I18nKey("puzzleTheme:advantageDescription")
val `anastasiaMate` = new I18nKey("puzzleTheme:anastasiaMate")
val `anastasiaMateDescription` = new I18nKey("puzzleTheme:anastasiaMateDescription")
val `arabianMate` = new I18nKey("puzzleTheme:arabianMate")
val `arabianMateDescription` = new I18nKey("puzzleTheme:arabianMateDescription")
val `attackingF2F7` = new I18nKey("puzzleTheme:attackingF2F7")
val `attackingF2F7Description` = new I18nKey("puzzleTheme:attackingF2F7Description")
val `attraction` = new I18nKey("puzzleTheme:attraction")
val `attractionDescription` = new I18nKey("puzzleTheme:attractionDescription")
val `backRankMate` = new I18nKey("puzzleTheme:backRankMate")
val `backRankMateDescription` = new I18nKey("puzzleTheme:backRankMateDescription")
val `bishopEndgame` = new I18nKey("puzzleTheme:bishopEndgame")
val `bishopEndgameDescription` = new I18nKey("puzzleTheme:bishopEndgameDescription")
val `bodenMate` = new I18nKey("puzzleTheme:bodenMate")
val `bodenMateDescription` = new I18nKey("puzzleTheme:bodenMateDescription")
val `castling` = new I18nKey("puzzleTheme:castling")
val `castlingDescription` = new I18nKey("puzzleTheme:castlingDescription")
val `capturingDefender` = new I18nKey("puzzleTheme:capturingDefender")
val `capturingDefenderDescription` = new I18nKey("puzzleTheme:capturingDefenderDescription")
val `crushing` = new I18nKey("puzzleTheme:crushing")
val `crushingDescription` = new I18nKey("puzzleTheme:crushingDescription")
val `doubleBishopMate` = new I18nKey("puzzleTheme:doubleBishopMate")
val `doubleBishopMateDescription` = new I18nKey("puzzleTheme:doubleBishopMateDescription")
val `dovetailMate` = new I18nKey("puzzleTheme:dovetailMate")
val `dovetailMateDescription` = new I18nKey("puzzleTheme:dovetailMateDescription")
val `equality` = new I18nKey("puzzleTheme:equality")
val `equalityDescription` = new I18nKey("puzzleTheme:equalityDescription")
val `kingsideAttack` = new I18nKey("puzzleTheme:kingsideAttack")
val `kingsideAttackDescription` = new I18nKey("puzzleTheme:kingsideAttackDescription")
val `clearance` = new I18nKey("puzzleTheme:clearance")
val `clearanceDescription` = new I18nKey("puzzleTheme:clearanceDescription")
val `defensiveMove` = new I18nKey("puzzleTheme:defensiveMove")
val `defensiveMoveDescription` = new I18nKey("puzzleTheme:defensiveMoveDescription")
val `deflection` = new I18nKey("puzzleTheme:deflection")
val `deflectionDescription` = new I18nKey("puzzleTheme:deflectionDescription")
val `discoveredAttack` = new I18nKey("puzzleTheme:discoveredAttack")
val `discoveredAttackDescription` = new I18nKey("puzzleTheme:discoveredAttackDescription")
val `doubleCheck` = new I18nKey("puzzleTheme:doubleCheck")
val `doubleCheckDescription` = new I18nKey("puzzleTheme:doubleCheckDescription")
val `endgame` = new I18nKey("puzzleTheme:endgame")
val `endgameDescription` = new I18nKey("puzzleTheme:endgameDescription")
val `enPassantDescription` = new I18nKey("puzzleTheme:enPassantDescription")
val `exposedKing` = new I18nKey("puzzleTheme:exposedKing")
val `exposedKingDescription` = new I18nKey("puzzleTheme:exposedKingDescription")
val `fork` = new I18nKey("puzzleTheme:fork")
val `forkDescription` = new I18nKey("puzzleTheme:forkDescription")
val `hangingPiece` = new I18nKey("puzzleTheme:hangingPiece")
val `hangingPieceDescription` = new I18nKey("puzzleTheme:hangingPieceDescription")
val `hookMate` = new I18nKey("puzzleTheme:hookMate")
val `hookMateDescription` = new I18nKey("puzzleTheme:hookMateDescription")
val `interference` = new I18nKey("puzzleTheme:interference")
val `interferenceDescription` = new I18nKey("puzzleTheme:interferenceDescription")
val `intermezzo` = new I18nKey("puzzleTheme:intermezzo")
val `intermezzoDescription` = new I18nKey("puzzleTheme:intermezzoDescription")
val `knightEndgame` = new I18nKey("puzzleTheme:knightEndgame")
val `knightEndgameDescription` = new I18nKey("puzzleTheme:knightEndgameDescription")
val `long` = new I18nKey("puzzleTheme:long")
val `longDescription` = new I18nKey("puzzleTheme:longDescription")
val `master` = new I18nKey("puzzleTheme:master")
val `masterDescription` = new I18nKey("puzzleTheme:masterDescription")
val `masterVsMaster` = new I18nKey("puzzleTheme:masterVsMaster")
val `masterVsMasterDescription` = new I18nKey("puzzleTheme:masterVsMasterDescription")
val `mate` = new I18nKey("puzzleTheme:mate")
val `mateDescription` = new I18nKey("puzzleTheme:mateDescription")
val `mateIn1` = new I18nKey("puzzleTheme:mateIn1")
val `mateIn1Description` = new I18nKey("puzzleTheme:mateIn1Description")
val `mateIn2` = new I18nKey("puzzleTheme:mateIn2")
val `mateIn2Description` = new I18nKey("puzzleTheme:mateIn2Description")
val `mateIn3` = new I18nKey("puzzleTheme:mateIn3")
val `mateIn3Description` = new I18nKey("puzzleTheme:mateIn3Description")
val `mateIn4` = new I18nKey("puzzleTheme:mateIn4")
val `mateIn4Description` = new I18nKey("puzzleTheme:mateIn4Description")
val `mateIn5` = new I18nKey("puzzleTheme:mateIn5")
val `mateIn5Description` = new I18nKey("puzzleTheme:mateIn5Description")
val `middlegame` = new I18nKey("puzzleTheme:middlegame")
val `middlegameDescription` = new I18nKey("puzzleTheme:middlegameDescription")
val `oneMove` = new I18nKey("puzzleTheme:oneMove")
val `oneMoveDescription` = new I18nKey("puzzleTheme:oneMoveDescription")
val `opening` = new I18nKey("puzzleTheme:opening")
val `openingDescription` = new I18nKey("puzzleTheme:openingDescription")
val `pawnEndgame` = new I18nKey("puzzleTheme:pawnEndgame")
val `pawnEndgameDescription` = new I18nKey("puzzleTheme:pawnEndgameDescription")
val `pin` = new I18nKey("puzzleTheme:pin")
val `pinDescription` = new I18nKey("puzzleTheme:pinDescription")
val `promotion` = new I18nKey("puzzleTheme:promotion")
val `promotionDescription` = new I18nKey("puzzleTheme:promotionDescription")
val `queenEndgame` = new I18nKey("puzzleTheme:queenEndgame")
val `queenEndgameDescription` = new I18nKey("puzzleTheme:queenEndgameDescription")
val `queenRookEndgame` = new I18nKey("puzzleTheme:queenRookEndgame")
val `queenRookEndgameDescription` = new I18nKey("puzzleTheme:queenRookEndgameDescription")
val `queensideAttack` = new I18nKey("puzzleTheme:queensideAttack")
val `queensideAttackDescription` = new I18nKey("puzzleTheme:queensideAttackDescription")
val `quietMove` = new I18nKey("puzzleTheme:quietMove")
val `quietMoveDescription` = new I18nKey("puzzleTheme:quietMoveDescription")
val `rookEndgame` = new I18nKey("puzzleTheme:rookEndgame")
val `rookEndgameDescription` = new I18nKey("puzzleTheme:rookEndgameDescription")
val `sacrifice` = new I18nKey("puzzleTheme:sacrifice")
val `sacrificeDescription` = new I18nKey("puzzleTheme:sacrificeDescription")
val `short` = new I18nKey("puzzleTheme:short")
val `shortDescription` = new I18nKey("puzzleTheme:shortDescription")
val `skewer` = new I18nKey("puzzleTheme:skewer")
val `skewerDescription` = new I18nKey("puzzleTheme:skewerDescription")
val `smotheredMate` = new I18nKey("puzzleTheme:smotheredMate")
val `smotheredMateDescription` = new I18nKey("puzzleTheme:smotheredMateDescription")
val `superGM` = new I18nKey("puzzleTheme:superGM")
val `superGMDescription` = new I18nKey("puzzleTheme:superGMDescription")
val `trappedPiece` = new I18nKey("puzzleTheme:trappedPiece")
val `trappedPieceDescription` = new I18nKey("puzzleTheme:trappedPieceDescription")
val `underPromotion` = new I18nKey("puzzleTheme:underPromotion")
val `underPromotionDescription` = new I18nKey("puzzleTheme:underPromotionDescription")
val `veryLong` = new I18nKey("puzzleTheme:veryLong")
val `veryLongDescription` = new I18nKey("puzzleTheme:veryLongDescription")
val `xRayAttack` = new I18nKey("puzzleTheme:xRayAttack")
val `xRayAttackDescription` = new I18nKey("puzzleTheme:xRayAttackDescription")
val `zugzwang` = new I18nKey("puzzleTheme:zugzwang")
val `zugzwangDescription` = new I18nKey("puzzleTheme:zugzwangDescription")
val `healthyMix` = new I18nKey("puzzleTheme:healthyMix")
val `healthyMixDescription` = new I18nKey("puzzleTheme:healthyMixDescription")
}

object challenge {
val `challenges` = new I18nKey("challenge:challenges")
val `challengeToPlay` = new I18nKey("challenge:challengeToPlay")
val `challengeDeclined` = new I18nKey("challenge:challengeDeclined")
val `challengeAccepted` = new I18nKey("challenge:challengeAccepted")
val `challengeCanceled` = new I18nKey("challenge:challengeCanceled")
val `registerToSendChallenges` = new I18nKey("challenge:registerToSendChallenges")
val `youCannotChallengeX` = new I18nKey("challenge:youCannotChallengeX")
val `xDoesNotAcceptChallenges` = new I18nKey("challenge:xDoesNotAcceptChallenges")
val `yourXRatingIsTooFarFromY` = new I18nKey("challenge:yourXRatingIsTooFarFromY")
val `cannotChallengeDueToProvisionalXRating` = new I18nKey("challenge:cannotChallengeDueToProvisionalXRating")
val `xOnlyAcceptsChallengesFromFriends` = new I18nKey("challenge:xOnlyAcceptsChallengesFromFriends")
val `declineGeneric` = new I18nKey("challenge:declineGeneric")
val `declineLater` = new I18nKey("challenge:declineLater")
val `declineTooFast` = new I18nKey("challenge:declineTooFast")
val `declineTooSlow` = new I18nKey("challenge:declineTooSlow")
val `declineTimeControl` = new I18nKey("challenge:declineTimeControl")
val `declineRated` = new I18nKey("challenge:declineRated")
val `declineCasual` = new I18nKey("challenge:declineCasual")
val `declineStandard` = new I18nKey("challenge:declineStandard")
val `declineVariant` = new I18nKey("challenge:declineVariant")
val `declineNoBot` = new I18nKey("challenge:declineNoBot")
val `declineOnlyBot` = new I18nKey("challenge:declineOnlyBot")
}

object storm {
val `moveToStart` = new I18nKey("storm:moveToStart")
val `youPlayTheWhitePiecesInAllPuzzles` = new I18nKey("storm:youPlayTheWhitePiecesInAllPuzzles")
val `youPlayTheBlackPiecesInAllPuzzles` = new I18nKey("storm:youPlayTheBlackPiecesInAllPuzzles")
val `puzzlesSolved` = new I18nKey("storm:puzzlesSolved")
val `newDailyHighscore` = new I18nKey("storm:newDailyHighscore")
val `newWeeklyHighscore` = new I18nKey("storm:newWeeklyHighscore")
val `newMonthlyHighscore` = new I18nKey("storm:newMonthlyHighscore")
val `newAllTimeHighscore` = new I18nKey("storm:newAllTimeHighscore")
val `previousHighscoreWasX` = new I18nKey("storm:previousHighscoreWasX")
val `playAgain` = new I18nKey("storm:playAgain")
val `highscoreX` = new I18nKey("storm:highscoreX")
val `score` = new I18nKey("storm:score")
val `moves` = new I18nKey("storm:moves")
val `accuracy` = new I18nKey("storm:accuracy")
val `combo` = new I18nKey("storm:combo")
val `time` = new I18nKey("storm:time")
val `timePerMove` = new I18nKey("storm:timePerMove")
val `highestSolved` = new I18nKey("storm:highestSolved")
val `puzzlesPlayed` = new I18nKey("storm:puzzlesPlayed")
val `newRun` = new I18nKey("storm:newRun")
val `endRun` = new I18nKey("storm:endRun")
val `highscores` = new I18nKey("storm:highscores")
val `viewBestRuns` = new I18nKey("storm:viewBestRuns")
val `bestRunOfDay` = new I18nKey("storm:bestRunOfDay")
val `runs` = new I18nKey("storm:runs")
val `getReady` = new I18nKey("storm:getReady")
val `waitingForMorePlayers` = new I18nKey("storm:waitingForMorePlayers")
val `raceComplete` = new I18nKey("storm:raceComplete")
val `spectating` = new I18nKey("storm:spectating")
val `joinTheRace` = new I18nKey("storm:joinTheRace")
val `yourRankX` = new I18nKey("storm:yourRankX")
val `waitForRematch` = new I18nKey("storm:waitForRematch")
val `nextRace` = new I18nKey("storm:nextRace")
val `joinRematch` = new I18nKey("storm:joinRematch")
val `waitingToStart` = new I18nKey("storm:waitingToStart")
val `createNewGame` = new I18nKey("storm:createNewGame")
val `joinPublicRace` = new I18nKey("storm:joinPublicRace")
val `raceYourFriends` = new I18nKey("storm:raceYourFriends")
val `skip` = new I18nKey("storm:skip")
val `skipHelp` = new I18nKey("storm:skipHelp")
val `skipExplanation` = new I18nKey("storm:skipExplanation")
val `xRuns` = new I18nKey("storm:xRuns")
val `playedNbRunsOfPuzzleStorm` = new I18nKey("storm:playedNbRunsOfPuzzleStorm")
}

}
