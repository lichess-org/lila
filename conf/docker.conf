include "base"

# Docker-specific configuration overrides
http.port = 9663

# MongoDB configuration for Docker
mongodb {
  uri = ${?MONGODB_URI}
  uri = "mongodb://lichess:password@mongodb:27017/lichess?authSource=lichess"
  yolo {
    uri = ${mongodb.uri}
  }
}

# Redis configuration for Docker
redis {
  uri = ${?REDIS_URI}
  uri = "redis://:password@redis:6379"
}

# Network configuration for Docker
net {
  domain = ${?NET_DOMAIN}
  domain = "localhost:9663"
  socket.domains = ["localhost:9664"]
  socket.alts = []
  asset.domain = ${net.domain}
  asset.base_url = ${?NET_BASE_URL}
  asset.base_url = "http://"${net.asset.domain}
  base_url = ${?NET_BASE_URL}
  base_url = "http://"${net.domain}
  email = "noreply@lichess.docker"
  crawlable = false
  ratelimit = true
  prodDomain = "lichess.org"
  http.log = true
  stage.banner = false
  site.name = ${net.domain}
}

# Search configuration for Docker
search {
  enabled = true
  writeable = true
  endpoint = ${?ELASTICSEARCH_URL}
  endpoint = "http://elasticsearch:9200"
}

# Socket configuration for Docker
socket {
  redis = ${redis}
}

# Fishnet configuration for Docker
fishnet {
  redis = ${redis}
  collection {
    analysis = fishnet_analysis
    client = fishnet_client
  }
  offline_mode = true
  client_min_version = "2.8.1"
  explorerEndpoint = "https://explorer.lichess.ovh"
}

# Disable external services for Docker environment
api {
  token = "docker-dev-token"
  influx_event = {
    endpoint = ""
    env = "docker"
  }
}

# Disable PagerDuty for Docker
pagerDuty {
  serviceId = ""
  apiKey = ""
}

# Disable email services for Docker
mailer {
  primary {
    mock = true
    host = "localhost"
    port = 587
    tls = false
    user = ""
    password = ""
    sender = "Lichess Docker <noreply@lichess.docker>"
  }
  secondary = ${mailer.primary}
}

# Disable external video services for Docker
video {
  collection {
    video = video
    view = video_view
  }
  sheet {
    url = ""
    delay = 6 hours
  }
  youtube {
    url = ""
    api_key = ""
    max = 50
    delay = 20 minutes
  }
}

# Disable external streaming services for Docker
streamer {
  collection.streamer = "streamer"
  paginator.max_per_page = 12
  streaming {
    twitch {
      endpoint = ""
      client_id = ""
      secret = ""
    }
    google.api_key = ""
    keyword = "lichess.org"
  }
}

# Disable GeoIP for Docker
geoip {
  file = ""
  cache_ttl = 20 minutes
}

# Simplified security for Docker
security {
  collection.security = security
  collection.print_ban = print_ban
  collection.firewall = firewall
  geoip = ${geoip}
  password_reset {
    secret = "docker-dev-secret"
  }
  email_confirm {
    enabled = false
    secret = "docker-dev-secret"
    cookie = "email_confirm"
  }
  email_change {
    secret = "docker-dev-secret"
  }
  login_token {
    secret = "docker-dev-secret"
  }
  tor {
    enabled = false
  }
  disposable_email {
    enabled = false
  }
  hcaptcha.enabled = false
  ip2proxy.enabled = false
  lame_name_check = false
  password.bpass.secret = ${user.password.bpass.secret}
}

# Disable external OAuth for Docker
oauth.mobile.secret = "docker-dev-secret"

# Disable push notifications for Docker
push {
  collection {
    device = push_device
    subscription = push_subscription
  }
  web {
    vapid_public_key = ""
    url = ""
  }
  firebase {
    lichobile {
      url = ""
      json = ""
    }
    mobile {
      url = ""
      json = ""
    }
  }
}

# Disable plan/payment services for Docker
plan {
  stripe {
    endpoint = ""
    keys {
      public = ""
      secret = ""
    }
  }
  payPal {
    endpoint = ""
    keys {
      public = ""
      secret = ""
    }
  }
  oer.appId = ""
}

# Disable Kamon metrics for Docker
kamon {
  enabled = false
}

# Disable external services
detectlanguage.api {
  url = ""
  key = ""
}

zulip {
  domain = ""
  user = ""
  pass = ""
}

# Game configuration for Docker
game {
  collection {
    game = game5
    crosstable = crosstable2
    matchup = matchup
  }
  captcher {
    duration = 15 seconds
  }
  gifUrl = ""
}

# Explorer configuration for Docker
explorer {
  internal_endpoint = "https://explorer.lichess.ovh"
  endpoint = "https://explorer.lichess.ovh"
  tablebase_endpoint = "https://tablebase.lichess.ovh"
}

# External engine configuration for Docker
externalEngine {
  endpoint = "http://localhost:9666"
}

# User password configuration for Docker
user {
  password {
    bpass.secret = "9qEYN0ThHer1KWLNekA76Q=="
  }
}

# Insight configuration for Docker
insight {
  mongodb {
    uri = ${mongodb.uri}
  }
}

# Ublog automod disabled for Docker
ublog.automod {
  apiKey = ""
  url = ""
  model = ""
}

# Picfit configuration for Docker
memo {
  collection {
    cache = cache
    config = flag
  }
  picfit {
    collection = picfit_image
    secretKey = "docker-dev-secret"
    endpointGet = "http://127.0.0.1:3001"
    endpointPost = "http://127.0.0.1:3001"
  }
}

# Swiss tournament configuration for Docker
swiss {
  bbpairing = "/usr/local/bin/bbpPairings" 
}

# Kaladin disabled for Docker
kaladin.enabled = false 