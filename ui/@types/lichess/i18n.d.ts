// Generated
interface I18nFormat {
  (args: (string | number)[]): string;
  asArray: <T>(args: T[]) => (T | string)[];
}
interface I18nPlural {
  (quantity: number, args: (string | number)[]): string;
  asArray: <T>(quantity: number, args: T[]) => (T | string)[];
}
interface I18n {
  activity: {
    activity: string;
    competedInNbSwissTournaments: I18nPlural;
    competedInNbTournaments: I18nPlural;
    completedNbGames: I18nPlural;
    completedNbVariantGames: I18nPlural;
    createdNbStudies: I18nPlural;
    followedNbPlayers: I18nPlural;
    gainedNbFollowers: I18nPlural;
    hostedALiveStream: string;
    hostedNbSimuls: I18nPlural;
    inNbCorrespondenceGames: I18nPlural;
    joinedNbSimuls: I18nPlural;
    joinedNbTeams: I18nPlural;
    playedNbGames: I18nPlural;
    playedNbMoves: I18nPlural;
    postedNbMessages: I18nPlural;
    practicedNbPositions: I18nPlural;
    rankedInSwissTournament: I18nFormat;
    rankedInTournament: I18nPlural;
    signedUp: string;
    solvedNbPuzzles: I18nPlural;
    supportedNbMonths: I18nPlural;
  };
  appeal: {
    accountMuted: string;
    accountMutedInfo: I18nFormat;
    arenaBanned: string;
    blogRules: string;
    boosterMarked: string;
    boosterMarkedInfo: string;
    cleanAllGood: string;
    closedByModerators: string;
    communicationGuidelines: string;
    engineMarked: string;
    engineMarkedInfo: I18nFormat;
    excludedFromLeaderboards: string;
    excludedFromLeaderboardsInfo: string;
    fairPlay: string;
    hiddenBlog: string;
    hiddenBlogInfo: I18nFormat;
    playTimeout: string;
    prizeBanned: string;
  };
  arena: {
    allAveragesAreX: I18nFormat;
    allowBerserk: string;
    allowBerserkHelp: string;
    allowChatHelp: string;
    arena: string;
    arenaStreaks: string;
    arenaStreaksHelp: string;
    arenaTournaments: string;
    averagePerformance: string;
    averageScore: string;
    berserk: string;
    berserkAnswer: string;
    bestResults: string;
    created: string;
    customStartDate: string;
    customStartDateHelp: string;
    defender: string;
    drawingWithinNbMoves: I18nPlural;
    drawStreakStandard: I18nFormat;
    drawStreakVariants: string;
    editTeamBattle: string;
    editTournament: string;
    history: string;
    howAreScoresCalculated: string;
    howAreScoresCalculatedAnswer: string;
    howDoesItEnd: string;
    howDoesItEndAnswer: string;
    howDoesPairingWork: string;
    howDoesPairingWorkAnswer: string;
    howIsTheWinnerDecided: string;
    howIsTheWinnerDecidedAnswer: string;
    isItRated: string;
    isNotRated: string;
    isRated: string;
    medians: string;
    minimumGameLength: string;
    myTournaments: string;
    newTeamBattle: string;
    noArenaStreaks: string;
    noBerserkAllowed: string;
    onlyTitled: string;
    onlyTitledHelp: string;
    otherRules: string;
    pickYourTeam: string;
    pointsAvg: string;
    pointsSum: string;
    rankAvg: string;
    rankAvgHelp: string;
    recentlyPlayed: string;
    shareUrl: I18nFormat;
    someRated: string;
    stats: string;
    thereIsACountdown: string;
    thisIsPrivate: string;
    total: string;
    tournamentShields: string;
    tournamentStats: string;
    tournamentWinners: string;
    variant: string;
    viewAllXTeams: I18nPlural;
    whichTeamWillYouRepresentInThisBattle: string;
    willBeNotified: string;
    youMustJoinOneOfTheseTeamsToParticipate: string;
  };
  broadcast: {
    aboutBroadcasts: string;
    addRound: string;
    ageThisYear: string;
    broadcastCalendar: string;
    broadcasts: string;
    completed: string;
    completedHelp: string;
    credits: string;
    currentGameUrl: string;
    definitivelyDeleteRound: string;
    definitivelyDeleteTournament: string;
    deleteAllGamesOfThisRound: string;
    deleteRound: string;
    deleteTournament: string;
    downloadAllRounds: string;
    editRoundStudy: string;
    federation: string;
    fideFederations: string;
    fidePlayerNotFound: string;
    fidePlayers: string;
    fideProfile: string;
    fullDescription: string;
    fullDescriptionHelp: I18nFormat;
    howToUseLichessBroadcasts: string;
    liveBroadcasts: string;
    myBroadcasts: string;
    nbBroadcasts: I18nPlural;
    newBroadcast: string;
    ongoing: string;
    periodInSeconds: string;
    periodInSecondsHelp: string;
    recentTournaments: string;
    replacePlayerTags: string;
    resetRound: string;
    roundName: string;
    roundNumber: string;
    showScores: string;
    sourceGameIds: string;
    sourceSingleUrl: string;
    sourceUrlHelp: string;
    startDateHelp: string;
    startDateTimeZone: I18nFormat;
    subscribedBroadcasts: string;
    theNewRoundHelp: string;
    top10Rating: string;
    tournamentDescription: string;
    tournamentName: string;
    unrated: string;
    upcoming: string;
  };
  challenge: {
    cannotChallengeDueToProvisionalXRating: I18nFormat;
    challengeAccepted: string;
    challengeCanceled: string;
    challengeDeclined: string;
    challengesX: I18nFormat;
    challengeToPlay: string;
    declineCasual: string;
    declineGeneric: string;
    declineLater: string;
    declineNoBot: string;
    declineOnlyBot: string;
    declineRated: string;
    declineStandard: string;
    declineTimeControl: string;
    declineTooFast: string;
    declineTooSlow: string;
    declineVariant: string;
    inviteLichessUser: string;
    registerToSendChallenges: string;
    xDoesNotAcceptChallenges: I18nFormat;
    xOnlyAcceptsChallengesFromFriends: I18nFormat;
    youCannotChallengeX: I18nFormat;
    yourXRatingIsTooFarFromY: I18nFormat;
  };
  class: {
    addLichessUsernames: string;
    addStudent: string;
    aLinkToTheClassWillBeAdded: string;
    anInvitationHasBeenSentToX: I18nFormat;
    applyToBeLichessTeacher: string;
    classDescription: string;
    className: string;
    classNews: string;
    clickToViewInvitation: string;
    closeClass: string;
    closeDesc1: string;
    closeDesc2: string;
    closeStudent: string;
    closeTheAccount: string;
    createANewLichessAccount: string;
    createDesc1: string;
    createDesc2: string;
    createDesc3: string;
    createDesc4: string;
    createMoreClasses: string;
    createMultipleAccounts: string;
    createStudentWarning: string;
    editNews: string;
    features: string;
    freeForAllForever: string;
    generateANewPassword: string;
    generateANewUsername: string;
    invitationToClass: I18nFormat;
    invite: string;
    inviteALichessAccount: string;
    inviteDesc1: string;
    inviteDesc2: string;
    inviteDesc3: string;
    inviteDesc4: string;
    invitedToXByY: I18nFormat;
    inviteTheStudentBack: string;
    lastActiveDate: string;
    lichessClasses: string;
    lichessProfileXCreatedForY: I18nFormat;
    lichessUsername: string;
    makeSureToCopy: string;
    managed: string;
    maxStudentsNote: I18nFormat;
    messageAllStudents: string;
    multipleAccsFormDescription: I18nFormat;
    na: string;
    nbPendingInvitations: I18nPlural;
    nbStudents: I18nPlural;
    nbTeachers: I18nPlural;
    newClass: string;
    news: string;
    newsEdit1: string;
    newsEdit2: string;
    newsEdit3: string;
    noClassesYet: string;
    noRemovedStudents: string;
    noStudents: string;
    nothingHere: string;
    notifyAllStudents: string;
    onlyVisibleToTeachers: string;
    orSeparator: string;
    overDays: string;
    overview: string;
    passwordX: I18nFormat;
    privateWillNeverBeShown: string;
    progress: string;
    quicklyGenerateSafeUsernames: string;
    realName: string;
    realUniqueEmail: string;
    release: string;
    releaseDesc1: string;
    releaseDesc2: string;
    releaseTheAccount: string;
    removedByX: I18nFormat;
    removedStudents: string;
    removeStudent: string;
    reopen: string;
    resetPassword: string;
    sendAMessage: string;
    studentCredentials: I18nFormat;
    students: string;
    studentsRealNamesOnePerLine: string;
    teachClassesOfChessStudents: string;
    teachers: string;
    teachersOfTheClass: string;
    teachersX: I18nFormat;
    thisStudentAccountIsManaged: string;
    timePlaying: string;
    trackStudentProgress: string;
    upgradeFromManaged: string;
    useThisForm: string;
    variantXOverLastY: I18nFormat;
    visibleByBothStudentsAndTeachers: string;
    welcomeToClass: I18nFormat;
    winrate: string;
    xAlreadyHasAPendingInvitation: I18nFormat;
    xIsAKidAccountWarning: I18nFormat;
    xisNowAStudentOfTheClass: I18nFormat;
    youAcceptedThisInvitation: string;
    youDeclinedThisInvitation: string;
    youHaveBeenInvitedByX: I18nFormat;
  };
  coach: {
    aboutMe: string;
    accepting: string;
    areYouCoach: I18nFormat;
    availability: string;
    bestSkills: string;
    confirmTitle: string;
    hourlyRate: string;
    languages: string;
    lichessCoach: string;
    lichessCoaches: string;
    location: string;
    nmOrFideTitle: string;
    notAccepting: string;
    otherExperiences: string;
    playingExperience: string;
    publicStudies: string;
    rating: string;
    sendApplication: I18nFormat;
    sendPM: string;
    teachingExperience: string;
    teachingMethod: string;
    viewXProfile: I18nFormat;
    xCoachesStudents: I18nFormat;
    youtubeVideos: string;
  };
  contact: {
    accountLost: string;
    accountSupport: string;
    authorizationToUse: string;
    banAppeal: string;
    botRatingAbuse: string;
    buyingLichess: string;
    calledEnPassant: string;
    cantChangeMore: string;
    cantClearHistory: string;
    castlingImported: string;
    castlingPrevented: string;
    castlingRules: string;
    changeUsernameCase: string;
    closeYourAccount: string;
    collaboration: string;
    contact: string;
    contactLichess: string;
    creditAppreciated: string;
    doNotAskByEmail: string;
    doNotAskByEmailToReopen: string;
    doNotDeny: string;
    doNotMessageModerators: string;
    doNotReportInForum: string;
    doNotSendReportEmails: string;
    doPasswordReset: string;
    engineAppeal: string;
    errorPage: string;
    explainYourRequest: string;
    falsePositives: string;
    fideMate: string;
    forgotPassword: string;
    forgotUsername: string;
    howToReportBug: string;
    iCantLogIn: string;
    ifLegit: string;
    illegalCastling: string;
    illegalPawnCapture: string;
    insufficientMaterial: string;
    knightMate: string;
    learnHowToMakeBroadcasts: string;
    lost2FA: string;
    monetizing: string;
    noConfirmationEmail: string;
    noneOfTheAbove: string;
    noRatingPoints: string;
    onlyReports: string;
    orCloseAccount: string;
    otherRestriction: string;
    ratedGame: string;
    reopenOnThisPage: string;
    reportBugInDiscord: string;
    reportBugInForum: string;
    reportErrorPage: string;
    reportMobileIssue: string;
    reportWebsiteIssue: string;
    sendAppealTo: I18nFormat;
    sendEmailAt: I18nFormat;
    toReportAPlayerUseForm: string;
    tryCastling: string;
    tryEnPassant: string;
    videosAndBooks: string;
    visitThisPage: string;
    visitTitleConfirmation: string;
    wantChangeUsername: string;
    wantClearHistory: string;
    wantCloseAccount: string;
    wantReopen: string;
    wantReport: string;
    wantReportBug: string;
    wantTitle: string;
    welcomeToUse: string;
    whatCanWeHelpYouWith: string;
    youCanAlsoReachReportPage: I18nFormat;
    youCanLoginWithEmail: string;
  };
  coordinates: {
    aCoordinateAppears: string;
    aSquareIsHighlightedExplanation: string;
    averageScoreAsBlackX: I18nFormat;
    averageScoreAsWhiteX: I18nFormat;
    coordinates: string;
    coordinateTraining: string;
    findSquare: string;
    goAsLongAsYouWant: string;
    knowingTheChessBoard: string;
    mostChessCourses: string;
    nameSquare: string;
    showCoordinates: string;
    showCoordsOnAllSquares: string;
    showPieces: string;
    startTraining: string;
    talkToYourChessFriends: string;
    youCanAnalyseAGameMoreEffectively: string;
    youHaveThirtySeconds: string;
  };
  dgt: {
    announceAllMoves: string;
    announceMoveFormat: string;
    asALastResort: I18nFormat;
    boardWillAutoConnect: string;
    checkYouHaveMadeOpponentsMove: string;
    clickToGenerateOne: string;
    configurationSection: string;
    configure: string;
    configureVoiceNarration: string;
    debug: string;
    dgtBoard: string;
    dgtBoardConnectivity: string;
    dgtBoardLimitations: string;
    dgtBoardRequirements: string;
    dgtConfigure: string;
    dgtPlayMenuEntryAdded: I18nFormat;
    downloadHere: I18nFormat;
    enableSpeechSynthesis: string;
    ifLiveChessRunningElsewhere: I18nFormat;
    ifLiveChessRunningOnThisComputer: I18nFormat;
    ifMoveNotDetected: string;
    keepPlayPageOpen: string;
    keywordFormatDescription: string;
    keywords: string;
    lichessAndDgt: string;
    lichessConnectivity: string;
    moveFormatDescription: string;
    noSuitableOauthToken: string;
    openingThisLink: string;
    playWithDgtBoard: string;
    reloadThisPage: string;
    selectAnnouncePreference: string;
    speechSynthesisVoice: string;
    textToSpeech: string;
    thisPageAllowsConnectingDgtBoard: string;
    timeControlsForCasualGames: string;
    timeControlsForRatedGames: string;
    toConnectTheDgtBoard: I18nFormat;
    toSeeConsoleMessage: string;
    useWebSocketUrl: I18nFormat;
    validDgtOauthToken: string;
    verboseLogging: string;
    webSocketUrl: I18nFormat;
    whenReadySetupBoard: I18nFormat;
  };
  emails: {
    common_contact: I18nFormat;
    common_note: I18nFormat;
    common_orPaste: string;
    emailChange_click: string;
    emailChange_intro: string;
    emailChange_subject: I18nFormat;
    emailConfirm_click: string;
    emailConfirm_ignore: string;
    emailConfirm_subject: I18nFormat;
    logInToLichess: I18nFormat;
    passwordReset_clickOrIgnore: string;
    passwordReset_intro: string;
    passwordReset_subject: I18nFormat;
    welcome_subject: I18nFormat;
    welcome_text: I18nFormat;
  };
  faq: {
    accounts: string;
    acplExplanation: string;
    adviceOnMitigatingAddiction: I18nFormat;
    aHourlyBulletTournament: string;
    areThereWebsitesBasedOnLichess: string;
    asWellAsManyNMtitles: string;
    basedOnGameDuration: I18nFormat;
    beingAPatron: string;
    beInTopTen: string;
    breakdownOfOurCosts: string;
    canIbecomeLM: string;
    canIChangeMyUsername: string;
    configure: string;
    connexionLostCanIGetMyRatingBack: string;
    desktop: string;
    discoveringEnPassant: string;
    displayPreferences: string;
    durationFormula: string;
    eightVariants: string;
    enableAutoplayForSoundsA: string;
    enableAutoplayForSoundsChrome: string;
    enableAutoplayForSoundsFirefox: string;
    enableAutoplayForSoundsMicrosoftEdge: string;
    enableAutoplayForSoundsQ: string;
    enableAutoplayForSoundsSafari: string;
    enableDisableNotificationPopUps: string;
    enableZenMode: I18nFormat;
    explainingEnPassant: I18nFormat;
    fairPlay: string;
    fairPlayPage: string;
    faqAbbreviation: string;
    fewerLobbyPools: string;
    fideHandbook: string;
    fideHandbookX: I18nFormat;
    findMoreAndSeeHowHelp: I18nFormat;
    frequentlyAskedQuestions: string;
    gameplay: string;
    goldenZeeExplanation: string;
    goodIntroduction: string;
    guidelines: string;
    havePlayedARatedGameAtLeastOneWeekAgo: string;
    havePlayedMoreThanThirtyGamesInThatRating: string;
    hearItPronouncedBySpecialist: string;
    howBulletBlitzEtcDecided: string;
    howCanIBecomeModerator: string;
    howCanIContributeToLichess: string;
    howDoLeaderoardsWork: string;
    howToHideRatingWhilePlaying: string;
    howToThreeDots: string;
    inferiorThanXsEqualYtimeControl: I18nFormat;
    inOrderToAppearsYouMust: I18nFormat;
    insufficientMaterial: string;
    isCorrespondenceDifferent: string;
    keyboardShortcuts: string;
    keyboardShortcutsExplanation: string;
    leavingGameWithoutResigningExplanation: string;
    leechess: string;
    lichessCanOptionnalySendPopUps: string;
    lichessCombinationLiveLightLibrePronounced: I18nFormat;
    lichessFollowFIDErules: I18nFormat;
    lichessPoweredByDonationsAndVolunteers: string;
    lichessRatings: string;
    lichessRecognizeAllOTBtitles: I18nFormat;
    lichessSupportChessAnd: I18nFormat;
    lichessTraining: string;
    lichessUserstyles: string;
    lMtitleComesToYouDoNotRequestIt: string;
    mentalHealthCondition: string;
    notPlayedEnoughRatedGamesAgainstX: I18nFormat;
    notPlayedRecently: string;
    notRepeatedMoves: string;
    noUpperCaseDot: string;
    otherWaysToHelp: string;
    ownerUniqueTrophies: I18nFormat;
    pleaseReadFairPlayPage: I18nFormat;
    positions: string;
    preventLeavingGameWithoutResigning: string;
    provisionalRatingExplanation: string;
    ratingDeviationLowerThanXinChessYinVariants: I18nFormat;
    ratingDeviationMorethanOneHundredTen: string;
    ratingLeaderboards: string;
    ratingRefundExplanation: string;
    ratingSystemUsedByLichess: string;
    repeatedPositionsThatMatters: I18nFormat;
    secondRequirementToStopOldPlayersTrustingLeaderboards: string;
    showYourTitle: I18nFormat;
    similarOpponents: string;
    stopMyselfFromPlaying: string;
    superiorThanXsEqualYtimeControl: I18nFormat;
    threeFoldHasToBeClaimed: I18nFormat;
    threefoldRepetition: string;
    threefoldRepetitionExplanation: I18nFormat;
    threefoldRepetitionLowerCase: string;
    titlesAvailableOnLichess: string;
    uniqueTrophies: string;
    usernamesCannotBeChanged: string;
    usernamesNotOffensive: I18nFormat;
    verificationForm: string;
    viewSiteInformationPopUp: string;
    watchIMRosenCheckmate: I18nFormat;
    wayOfBerserkExplanation: I18nFormat;
    weCannotDoThatEvenIfItIsServerSideButThatsRare: string;
    weRepeatedthreeTimesPosButNoDraw: string;
    whatIsACPL: string;
    whatIsProvisionalRating: string;
    whatUsernameCanIchoose: string;
    whatVariantsCanIplay: string;
    whenAmIEligibleRatinRefund: string;
    whichRatingSystemUsedByLichess: string;
    whyAreRatingHigher: string;
    whyAreRatingHigherExplanation: string;
    whyIsLichessCalledLichess: string;
    whyIsLilaCalledLila: I18nFormat;
    whyLiveLightLibre: string;
    yesLichessInspiredOtherOpenSourceWebsites: I18nFormat;
    youCannotApply: string;
    youCanUseOpeningBookNoEngine: string;
  };
  features: {
    allChessBasicsLessons: string;
    allFeaturesAreFreeForEverybody: string;
    allFeaturesToCome: string;
    boardEditorAndAnalysisBoardWithEngine: I18nFormat;
    chessInsights: string;
    cloudEngineAnalysis: string;
    contributeToLichessAndGetIcon: string;
    correspondenceWithConditionalPremoves: string;
    deepXServerAnalysis: I18nFormat;
    downloadOrUploadAnyGameAsPgn: string;
    endgameTablebase: string;
    everybodyGetsAllFeaturesForFree: string;
    gamesPerDay: I18nPlural;
    globalOpeningExplorerInNbGames: I18nFormat;
    ifYouLoveLichess: string;
    landscapeSupportOnApp: string;
    lightOrDarkThemeCustomBoardsPiecesAndBackground: string;
    personalOpeningExplorer: string;
    personalOpeningExplorerX: I18nFormat;
    standardChessAndX: I18nFormat;
    studies: string;
    supportLichess: string;
    supportUsWithAPatronAccount: string;
    tacticalPuzzlesFromUserGames: string;
    tvForumBlogTeamsMessagingFriendsChallenges: string;
    ultraBulletBulletBlitzRapidClassicalAndCorrespondenceChess: string;
    weBelieveEveryChessPlayerDeservesTheBest: string;
    zeroAdsAndNoTracking: string;
  };
  insight: {
    cantSeeInsights: I18nFormat;
    crunchingData: string;
    generateInsights: I18nFormat;
    insightsAreProtected: I18nFormat;
    insightsSettings: string;
    maybeAskThemToChangeTheir: I18nFormat;
    xChessInsights: I18nFormat;
    xHasNoChessInsights: I18nFormat;
  };
  keyboardMove: {
    bothTheLetterOAndTheDigitZero: string;
    capitalizationOnlyMattersInAmbiguousSituations: string;
    dropARookAtB4: string;
    ifItIsLegalToCastleBothWays: string;
    ifTheAboveMoveNotationIsUnfamiliar: string;
    includingAXToIndicateACapture: string;
    keyboardInputCommands: string;
    kingsideCastle: string;
    moveKnightToC3: string;
    movePieceFromE2ToE4: string;
    offerOrAcceptDraw: string;
    otherCommands: string;
    performAMove: string;
    promoteC8ToQueen: string;
    queensideCastle: string;
    readOutClocks: string;
    readOutOpponentName: string;
    tips: string;
    toPremoveSimplyTypeTheDesiredPremove: string;
  };
  lag: {
    andNowTheLongAnswerLagComposedOfTwoValues: string;
    isLichessLagging: string;
    lagCompensation: string;
    lagCompensationExplanation: string;
    lichessServerLatency: string;
    lichessServerLatencyExplanation: string;
    measurementInProgressThreeDot: string;
    networkBetweenLichessAndYou: string;
    networkBetweenLichessAndYouExplanation: string;
    noAndYourNetworkIsBad: string;
    noAndYourNetworkIsGood: string;
    yesItWillBeFixedSoon: string;
    youCanFindTheseValuesAtAnyTimeByClickingOnYourUsername: string;
  };
  learn: {
    advanced: string;
    aPawnOnTheSecondRank: string;
    attackTheOpponentsKing: string;
    attackYourOpponentsKing: string;
    awesome: string;
    backToMenu: string;
    bishopComplete: string;
    bishopIntro: string;
    blackJustMovedThePawnByTwoSquares: string;
    boardSetup: string;
    boardSetupComplete: string;
    boardSetupIntro: string;
    byPlaying: string;
    capture: string;
    captureAndDefendPieces: string;
    captureComplete: string;
    captureIntro: string;
    captureThenPromote: string;
    castleKingSide: string;
    castleKingSideMovePiecesFirst: string;
    castleQueenSide: string;
    castleQueenSideMovePiecesFirst: string;
    castling: string;
    castlingComplete: string;
    castlingIntro: string;
    checkInOne: string;
    checkInOneComplete: string;
    checkInOneGoal: string;
    checkInOneIntro: string;
    checkInTwo: string;
    checkInTwoComplete: string;
    checkInTwoGoal: string;
    checkInTwoIntro: string;
    chessPieces: string;
    combat: string;
    combatComplete: string;
    combatIntro: string;
    defeatTheOpponentsKing: string;
    defendYourKing: string;
    dontLetThemTakeAnyUndefendedPiece: string;
    enPassant: string;
    enPassantComplete: string;
    enPassantIntro: string;
    enPassantOnlyWorksImmediately: string;
    enPassantOnlyWorksOnFifthRank: string;
    escape: string;
    escapeOrBlock: string;
    escapeWithTheKing: string;
    evaluatePieceStrength: string;
    excellent: string;
    exerciseYourTacticalSkills: string;
    findAWayToCastleKingSide: string;
    findAWayToCastleQueenSide: string;
    firstPlaceTheRooks: string;
    fundamentals: string;
    getAFreeLichessAccount: string;
    grabAllTheStars: string;
    grabAllTheStarsNoNeedToPromote: string;
    greatJob: string;
    howTheGameStarts: string;
    intermediate: string;
    itMovesDiagonally: string;
    itMovesForwardOnly: string;
    itMovesInAnLShape: string;
    itMovesInStraightLines: string;
    itNowPromotesToAStrongerPiece: string;
    keepYourPiecesSafe: string;
    kingComplete: string;
    kingIntro: string;
    knightComplete: string;
    knightIntro: string;
    knightsCanJumpOverObstacles: string;
    knightsHaveAFancyWay: string;
    lastOne: string;
    learnChess: string;
    learnCommonChessPositions: string;
    letsGo: string;
    mateInOne: string;
    mateInOneComplete: string;
    mateInOneIntro: string;
    menu: string;
    mostOfTheTimePromotingToAQueenIsBest: string;
    nailedIt: string;
    next: string;
    nextX: I18nFormat;
    noEscape: string;
    opponentsFromAroundTheWorld: string;
    outOfCheck: string;
    outOfCheckComplete: string;
    outOfCheckIntro: string;
    outstanding: string;
    pawnComplete: string;
    pawnIntro: string;
    pawnPromotion: string;
    pawnsFormTheFrontLine: string;
    pawnsMoveForward: string;
    pawnsMoveOneSquareOnly: string;
    perfect: string;
    pieceValue: string;
    pieceValueComplete: string;
    pieceValueExchange: string;
    pieceValueIntro: string;
    pieceValueLegal: string;
    placeTheBishops: string;
    placeTheKing: string;
    placeTheQueen: string;
    play: string;
    playMachine: string;
    playPeople: string;
    practice: string;
    progressX: I18nFormat;
    protection: string;
    protectionComplete: string;
    protectionIntro: string;
    puzzleFailed: string;
    puzzles: string;
    queenCombinesRookAndBishop: string;
    queenComplete: string;
    queenIntro: string;
    queenOverBishop: string;
    register: string;
    resetMyProgress: string;
    retry: string;
    rightOn: string;
    rookComplete: string;
    rookGoal: string;
    rookIntro: string;
    selectThePieceYouWant: string;
    stageX: I18nFormat;
    stageXComplete: I18nFormat;
    stalemate: string;
    stalemateComplete: string;
    stalemateGoal: string;
    stalemateIntro: string;
    takeAllThePawnsEnPassant: string;
    takeTheBlackPieces: string;
    takeTheBlackPiecesAndDontLoseYours: string;
    takeTheEnemyPieces: string;
    takeThePieceWithTheHighestValue: string;
    testYourSkillsWithTheComputer: string;
    theBishop: string;
    theFewerMoves: string;
    theGameIsADraw: string;
    theKing: string;
    theKingCannotEscapeButBlock: string;
    theKingIsSlow: string;
    theKnight: string;
    theKnightIsInTheWay: string;
    theMostImportantPiece: string;
    thenPlaceTheKnights: string;
    thePawn: string;
    theQueen: string;
    theRook: string;
    theSpecialKingMove: string;
    theSpecialPawnMove: string;
    thisIsTheInitialPosition: string;
    thisKnightIsCheckingThroughYourDefenses: string;
    twoMovesToGiveCheck: string;
    useAllThePawns: string;
    useTwoRooks: string;
    videos: string;
    watchInstructiveChessVideos: string;
    wayToGo: string;
    whatNext: string;
    yesYesYes: string;
    youCanGetOutOfCheckByTaking: string;
    youCannotCastleIfAttacked: string;
    youCannotCastleIfMoved: string;
    youKnowHowToPlayChess: string;
    youNeedBothBishops: string;
    youreGoodAtThis: string;
    yourPawnReachedTheEndOfTheBoard: string;
    youWillLoseAllYourProgress: string;
  };
  oauthScope: {
    alreadyHavePlayedGames: string;
    apiAccessTokens: string;
    apiDocumentation: string;
    apiDocumentationLinks: I18nFormat;
    attentionOfDevelopers: string;
    authorizationCodeFlow: string;
    boardPlay: string;
    botPlay: string;
    canMakeOauthRequests: I18nFormat;
    carefullySelect: string;
    challengeBulk: string;
    challengeRead: string;
    challengeWrite: string;
    copyTokenNow: string;
    created: I18nFormat;
    doNotShareIt: string;
    emailRead: string;
    engineRead: string;
    engineWrite: string;
    followRead: string;
    followWrite: string;
    forExample: I18nFormat;
    generatePersonalToken: string;
    givingPrefilledUrls: string;
    guardTokensCarefully: string;
    insteadGenerateToken: I18nFormat;
    lastUsed: I18nFormat;
    msgWrite: string;
    newAccessToken: string;
    newToken: string;
    personalAccessTokens: string;
    personalTokenAppExample: string;
    possibleToPrefill: string;
    preferenceRead: string;
    preferenceWrite: string;
    puzzleRead: string;
    racerWrite: string;
    rememberTokenUse: string;
    scopesCanBeFound: string;
    studyRead: string;
    studyWrite: string;
    teamLead: string;
    teamRead: string;
    teamWrite: string;
    ticksTheScopes: I18nFormat;
    tokenDescription: string;
    tokenGrantsPermission: string;
    tournamentWrite: string;
    webLogin: string;
    webMod: string;
    whatTheTokenCanDo: string;
  };
  onboarding: {
    configureLichess: string;
    enabledKidModeSuggestion: I18nFormat;
    exploreTheSiteAndHaveFun: string;
    followYourFriendsOnLichess: string;
    improveWithChessTacticsPuzzles: string;
    learnChessRules: string;
    learnFromXAndY: I18nFormat;
    playInTournaments: string;
    playOpponentsFromAroundTheWorld: string;
    playTheArtificialIntelligence: string;
    thisIsYourProfilePage: string;
    welcome: string;
    welcomeToLichess: string;
    whatNowSuggestions: string;
  };
  patron: {
    actOfCreation: string;
    amount: string;
    bankTransfers: string;
    becomePatron: string;
    cancelSupport: string;
    celebratedPatrons: string;
    changeCurrency: string;
    changeMonthlyAmount: I18nFormat;
    changeMonthlySupport: string;
    changeOrContact: I18nFormat;
    checkOutProfile: string;
    contactSupport: string;
    costBreakdown: string;
    currentStatus: string;
    date: string;
    decideHowMuch: string;
    donate: string;
    donateAsX: I18nFormat;
    downgradeNextMonth: string;
    featuresComparison: string;
    freeAccount: string;
    freeChess: string;
    giftPatronWings: string;
    giftPatronWingsShort: string;
    ifNotRenewedThenAccountWillRevert: string;
    lichessIsRegisteredWith: I18nFormat;
    lichessPatron: string;
    lifetime: string;
    lifetimePatron: string;
    logInToDonate: string;
    makeAdditionalDonation: string;
    monthly: string;
    newPatrons: string;
    nextPayment: string;
    noAdsNoSubs: string;
    noLongerSupport: string;
    noPatronFeatures: string;
    nowLifetime: string;
    nowOneMonth: string;
    officialNonProfit: string;
    onetime: string;
    onlyDonationFromAbove: string;
    otherAmount: string;
    otherMethods: string;
    patronFeatures: string;
    patronForMonths: I18nPlural;
    patronUntil: I18nFormat;
    payLifetimeOnce: I18nFormat;
    paymentDetails: string;
    permanentPatron: string;
    pleaseEnterAmountInX: I18nFormat;
    recurringBilling: string;
    serversAndDeveloper: I18nFormat;
    singleDonation: string;
    stopPayments: string;
    stopPaymentsPayPal: string;
    stripeManageSub: string;
    thankYou: string;
    transactionCompleted: string;
    tyvm: string;
    update: string;
    updatePaymentMethod: string;
    viewOthers: string;
    weAreNonProfit: string;
    weAreSmallTeam: string;
    weRelyOnSupport: string;
    whereMoneyGoes: string;
    withCreditCard: string;
    xBecamePatron: I18nFormat;
    xIsPatronForNbMonths: I18nPlural;
    xOrY: I18nFormat;
    youHaveLifetime: string;
    youSupportWith: I18nFormat;
    youWillBeChargedXOnY: I18nFormat;
  };
  perfStat: {
    averageOpponent: string;
    berserkedGames: string;
    bestRated: string;
    currentStreak: I18nFormat;
    defeats: string;
    disconnections: string;
    fromXToY: I18nFormat;
    gamesInARow: string;
    highestRating: I18nFormat;
    lessThanOneHour: string;
    longestStreak: I18nFormat;
    losingStreak: string;
    lowestRating: I18nFormat;
    maxTimePlaying: string;
    notEnoughGames: string;
    notEnoughRatedGames: string;
    now: string;
    perfStats: I18nFormat;
    progressOverLastXGames: I18nFormat;
    provisional: string;
    ratedGames: string;
    ratingDeviation: I18nFormat;
    ratingDeviationTooltip: I18nFormat;
    timeSpentPlaying: string;
    totalGames: string;
    tournamentGames: string;
    victories: string;
    viewTheGames: string;
    winningStreak: string;
  };
  preferences: {
    bellNotificationSound: string;
    boardCoordinates: string;
    boardHighlights: string;
    bothClicksAndDrag: string;
    castleByMovingOntoTheRook: string;
    castleByMovingTheKingTwoSquaresOrOntoTheRook: string;
    castleByMovingTwoSquares: string;
    chessClock: string;
    chessPieceSymbol: string;
    claimDrawOnThreefoldRepetitionAutomatically: string;
    clickTwoSquares: string;
    confirmResignationAndDrawOffers: string;
    correspondenceAndUnlimited: string;
    correspondenceEmailNotification: string;
    display: string;
    displayBoardResizeHandle: string;
    dragPiece: string;
    explainCanThenBeTemporarilyDisabled: string;
    explainPromoteToQueenAutomatically: string;
    explainShowPlayerRatings: string;
    gameBehavior: string;
    giveMoreTime: string;
    horizontalGreenProgressBars: string;
    howDoYouMovePieces: string;
    inCasualGamesOnly: string;
    inCorrespondenceGames: string;
    inGameOnly: string;
    inputMovesWithTheKeyboard: string;
    inputMovesWithVoice: string;
    materialDifference: string;
    moveConfirmation: string;
    moveListWhilePlaying: string;
    notifications: string;
    notifyBell: string;
    notifyChallenge: string;
    notifyDevice: string;
    notifyForumMention: string;
    notifyGameEvent: string;
    notifyInboxMsg: string;
    notifyInvitedStudy: string;
    notifyPush: string;
    notifyStreamStart: string;
    notifyTimeAlarm: string;
    notifyTournamentSoon: string;
    notifyWeb: string;
    onlyOnInitialPosition: string;
    pgnLetter: string;
    pgnPieceNotation: string;
    pieceAnimation: string;
    pieceDestinations: string;
    preferences: string;
    premovesPlayingDuringOpponentTurn: string;
    privacy: string;
    promoteToQueenAutomatically: string;
    sayGgWpAfterLosingOrDrawing: string;
    scrollOnTheBoardToReplayMoves: string;
    showFlairs: string;
    showPlayerRatings: string;
    snapArrowsToValidMoves: string;
    soundWhenTimeGetsCritical: string;
    takebacksWithOpponentApproval: string;
    tenthsOfSeconds: string;
    whenPremoving: string;
    whenTimeRemainingLessThanTenSeconds: string;
    whenTimeRemainingLessThanThirtySeconds: string;
    yourPreferencesHaveBeenSaved: string;
    zenMode: string;
  };
  puzzle: {
    addAnotherTheme: string;
    advanced: string;
    bestMove: string;
    byOpenings: string;
    clickToSolve: string;
    continueTheStreak: string;
    continueTraining: string;
    dailyPuzzle: string;
    didYouLikeThisPuzzle: string;
    difficultyLevel: string;
    downVote: string;
    easier: string;
    easiest: string;
    example: string;
    failed: string;
    findTheBestMoveForBlack: string;
    findTheBestMoveForWhite: string;
    fromGameLink: I18nFormat;
    fromMyGames: string;
    fromMyGamesNone: string;
    fromXGames: I18nFormat;
    fromXGamesFound: I18nFormat;
    goals: string;
    goodMove: string;
    harder: string;
    hardest: string;
    hidden: string;
    history: string;
    improvementAreas: string;
    improvementAreasDescription: string;
    jumpToNextPuzzleImmediately: string;
    keepGoing: string;
    lengths: string;
    lookupOfPlayer: string;
    mates: string;
    motifs: string;
    nbPlayed: I18nPlural;
    nbPointsAboveYourPuzzleRating: I18nPlural;
    nbPointsBelowYourPuzzleRating: I18nPlural;
    nbToReplay: I18nPlural;
    newStreak: string;
    nextPuzzle: string;
    noPuzzlesToShow: string;
    normal: string;
    notTheMove: string;
    openingsYouPlayedTheMost: string;
    origin: string;
    percentSolved: I18nFormat;
    phases: string;
    playedXTimes: I18nPlural;
    puzzleComplete: string;
    puzzleDashboard: string;
    puzzleDashboardDescription: string;
    puzzleId: I18nFormat;
    puzzleOfTheDay: string;
    puzzles: string;
    puzzlesByOpenings: string;
    puzzleSuccess: string;
    puzzleThemes: string;
    ratingX: I18nFormat;
    recommended: string;
    searchPuzzles: string;
    solved: string;
    specialMoves: string;
    streakDescription: string;
    streakSkipExplanation: string;
    strengthDescription: string;
    strengths: string;
    toGetPersonalizedPuzzles: string;
    trySomethingElse: string;
    upVote: string;
    useCtrlF: string;
    useFindInPage: string;
    voteToLoadNextOne: string;
    yourPuzzleRatingWillNotChange: string;
    yourStreakX: I18nFormat;
  };
  puzzleTheme: {
    advancedPawn: string;
    advancedPawnDescription: string;
    advantage: string;
    advantageDescription: string;
    anastasiaMate: string;
    anastasiaMateDescription: string;
    arabianMate: string;
    arabianMateDescription: string;
    attackingF2F7: string;
    attackingF2F7Description: string;
    attraction: string;
    attractionDescription: string;
    backRankMate: string;
    backRankMateDescription: string;
    bishopEndgame: string;
    bishopEndgameDescription: string;
    bodenMate: string;
    bodenMateDescription: string;
    capturingDefender: string;
    capturingDefenderDescription: string;
    castling: string;
    castlingDescription: string;
    clearance: string;
    clearanceDescription: string;
    crushing: string;
    crushingDescription: string;
    defensiveMove: string;
    defensiveMoveDescription: string;
    deflection: string;
    deflectionDescription: string;
    discoveredAttack: string;
    discoveredAttackDescription: string;
    doubleBishopMate: string;
    doubleBishopMateDescription: string;
    doubleCheck: string;
    doubleCheckDescription: string;
    dovetailMate: string;
    dovetailMateDescription: string;
    endgame: string;
    endgameDescription: string;
    enPassantDescription: string;
    equality: string;
    equalityDescription: string;
    exposedKing: string;
    exposedKingDescription: string;
    fork: string;
    forkDescription: string;
    hangingPiece: string;
    hangingPieceDescription: string;
    healthyMix: string;
    healthyMixDescription: string;
    hookMate: string;
    hookMateDescription: string;
    interference: string;
    interferenceDescription: string;
    intermezzo: string;
    intermezzoDescription: string;
    kingsideAttack: string;
    kingsideAttackDescription: string;
    knightEndgame: string;
    knightEndgameDescription: string;
    long: string;
    longDescription: string;
    master: string;
    masterDescription: string;
    masterVsMaster: string;
    masterVsMasterDescription: string;
    mate: string;
    mateDescription: string;
    mateIn1: string;
    mateIn1Description: string;
    mateIn2: string;
    mateIn2Description: string;
    mateIn3: string;
    mateIn3Description: string;
    mateIn4: string;
    mateIn4Description: string;
    mateIn5: string;
    mateIn5Description: string;
    middlegame: string;
    middlegameDescription: string;
    oneMove: string;
    oneMoveDescription: string;
    opening: string;
    openingDescription: string;
    pawnEndgame: string;
    pawnEndgameDescription: string;
    pin: string;
    pinDescription: string;
    playerGames: string;
    playerGamesDescription: string;
    promotion: string;
    promotionDescription: string;
    puzzleDownloadInformation: I18nFormat;
    queenEndgame: string;
    queenEndgameDescription: string;
    queenRookEndgame: string;
    queenRookEndgameDescription: string;
    queensideAttack: string;
    queensideAttackDescription: string;
    quietMove: string;
    quietMoveDescription: string;
    rookEndgame: string;
    rookEndgameDescription: string;
    sacrifice: string;
    sacrificeDescription: string;
    short: string;
    shortDescription: string;
    skewer: string;
    skewerDescription: string;
    smotheredMate: string;
    smotheredMateDescription: string;
    superGM: string;
    superGMDescription: string;
    trappedPiece: string;
    trappedPieceDescription: string;
    underPromotion: string;
    underPromotionDescription: string;
    veryLong: string;
    veryLongDescription: string;
    xRayAttack: string;
    xRayAttackDescription: string;
    zugzwang: string;
    zugzwangDescription: string;
  };
  search: {
    advancedSearch: string;
    aiLevel: string;
    analysis: string;
    ascending: string;
    color: string;
    date: string;
    descending: string;
    evaluation: string;
    from: string;
    gamesFound: I18nPlural;
    humanOrComputer: string;
    include: string;
    loser: string;
    maxNumber: string;
    maxNumberExplanation: string;
    nbTurns: string;
    onlyAnalysed: string;
    opponentName: string;
    ratingExplanation: string;
    result: string;
    search: string;
    searchInXGames: I18nPlural;
    sortBy: string;
    source: string;
    to: string;
    winnerColor: string;
    xGamesFound: I18nPlural;
  };
  settings: {
    cantOpenSimilarAccount: string;
    changedMindDoNotCloseAccount: string;
    closeAccount: string;
    closeAccountExplanation: string;
    closingIsDefinitive: string;
    managedAccountCannotBeClosed: string;
    settings: string;
    thisAccountIsClosed: string;
  };
  site: {
    abortGame: string;
    abortTheGame: string;
    about: string;
    aboutSimul: string;
    aboutSimulImage: string;
    aboutSimulRealLife: string;
    aboutSimulRules: string;
    aboutSimulSettings: string;
    aboutX: I18nFormat;
    accept: string;
    accountCanLogin: I18nFormat;
    accountClosed: I18nFormat;
    accountConfirmationEmailNotNeeded: string;
    accountConfirmed: I18nFormat;
    accountRegisteredWithoutEmail: I18nFormat;
    accuracy: string;
    activePlayers: string;
    addCurrentVariation: string;
    advancedSettings: string;
    advantage: string;
    agreementAssistance: string;
    agreementMultipleAccounts: I18nFormat;
    agreementNice: string;
    agreementPolicy: string;
    aiNameLevelAiLevel: I18nFormat;
    allInformationIsPublicAndOptional: string;
    allSet: string;
    allSquaresOfTheBoard: string;
    always: string;
    analysis: string;
    analysisOptions: string;
    analysisShapesHowTo: string;
    andSaveNbPremoveLines: I18nPlural;
    anonymous: string;
    anotherWasX: I18nFormat;
    apply: string;
    asBlack: string;
    asFreeAsLichess: string;
    askYourChessTeacherAboutLiftingKidMode: string;
    asWhite: string;
    automaticallyProceedToNextGameAfterMoving: string;
    autoSwitch: string;
    availableInNbLanguages: I18nPlural;
    averageCentipawnLoss: string;
    averageElo: string;
    averageOpponent: string;
    averageRatingX: I18nFormat;
    background: string;
    backgroundImageUrl: string;
    backToGame: string;
    backToTournament: string;
    berserkRate: string;
    bestMoveArrow: string;
    bestWasX: I18nFormat;
    betterThanPercentPlayers: I18nFormat;
    bewareTheGameIsRatedButHasNoClock: string;
    biography: string;
    biographyDescription: string;
    black: string;
    blackCastlingKingside: string;
    blackCheckmatesInOneMove: string;
    blackDeclinesDraw: string;
    blackDidntMove: string;
    blackIsVictorious: string;
    blackLeftTheGame: string;
    blackOffersDraw: string;
    blackPlays: string;
    blackResigned: string;
    blackTimeOut: string;
    blackWins: string;
    blackWinsGame: string;
    blankedPassword: string;
    blitz: string;
    blitzDesc: string;
    block: string;
    blocked: string;
    blocks: I18nPlural;
    blog: string;
    blunder: string;
    board: string;
    boardEditor: string;
    boardReset: string;
    bookmarkThisGame: string;
    brightness: string;
    builtForTheLoveOfChessNotMoney: string;
    bullet: string;
    bulletBlitzClassical: string;
    bulletDesc: string;
    by: I18nFormat;
    byCPL: string;
    byRegisteringYouAgreeToBeBoundByOur: I18nFormat;
    calculatingMoves: string;
    cancel: string;
    cancelRematchOffer: string;
    cancelSimul: string;
    cancelTournament: string;
    cantDoThisTwice: string;
    'captcha.fail': string;
    capture: string;
    castling: string;
    casual: string;
    casualTournament: string;
    changeEmail: string;
    changePassword: string;
    changeUsername: string;
    changeUsernameDescription: string;
    changeUsernameNotSame: string;
    chat: string;
    chatRoom: string;
    cheat: string;
    cheatDetected: string;
    checkmate: string;
    checkSpamFolder: string;
    checkYourEmail: string;
    chess960StartPosition: I18nFormat;
    chessBasics: string;
    claimADraw: string;
    classical: string;
    classicalDesc: string;
    clearBoard: string;
    clearSavedMoves: string;
    clickHereToReadIt: string;
    clickOnTheBoardToMakeYourMove: string;
    clickToRevealEmailAddress: string;
    clock: string;
    clockIncrement: string;
    clockInitialTime: string;
    close: string;
    closedAccountChangedMind: string;
    closingAccountWithdrawAppeal: string;
    cloudAnalysis: string;
    coaches: string;
    coachManager: string;
    collapseVariations: string;
    community: string;
    composeMessage: string;
    computer: string;
    computerAnalysis: string;
    computerAnalysisAvailable: string;
    computerAnalysisDisabled: string;
    computersAreNotAllowedToPlay: string;
    computerThinking: string;
    conditionalPremoves: string;
    conditionOfEntry: string;
    confirmMove: string;
    congratsYouWon: string;
    continueFromHere: string;
    contribute: string;
    copyTextToEmail: I18nFormat;
    copyVariationPgn: string;
    correspondence: string;
    correspondenceChess: string;
    correspondenceDesc: string;
    countryRegion: string;
    cpus: string;
    create: string;
    createAGame: string;
    createANewTopic: string;
    createANewTournament: string;
    createdBy: string;
    createdSimuls: string;
    createTheTopic: string;
    crosstable: string;
    cumulative: string;
    currentGames: string;
    currentMatchScore: string;
    currentPassword: string;
    custom: string;
    customPosition: string;
    cyclePreviousOrNextVariation: string;
    dark: string;
    database: string;
    daysPerTurn: string;
    decline: string;
    defeat: string;
    defeatVsYInZ: I18nFormat;
    delete: string;
    deleteFromHere: string;
    deleteThisImportedGame: string;
    depthX: I18nFormat;
    descPrivate: string;
    descPrivateHelp: string;
    description: string;
    deviceTheme: string;
    disableKidMode: string;
    discussions: string;
    doItAgain: string;
    doneReviewingBlackMistakes: string;
    doneReviewingWhiteMistakes: string;
    download: string;
    downloadAnnotated: string;
    downloadImported: string;
    downloadRaw: string;
    draw: string;
    drawByFiftyMoves: string;
    drawByMutualAgreement: string;
    drawn: string;
    drawOfferAccepted: string;
    drawOfferCanceled: string;
    drawOfferSent: string;
    drawRate: string;
    draws: string;
    drawVsYInZ: I18nFormat;
    dtzWithRounding: string;
    duration: string;
    edit: string;
    editProfile: string;
    email: string;
    emailAssociatedToaccount: string;
    emailCanTakeSomeTime: string;
    emailConfirmHelp: string;
    emailConfirmNotReceived: string;
    emailForSignupHelp: string;
    emailMeALink: string;
    emailSent: I18nFormat;
    emailSuggestion: string;
    embedInYourWebsite: string;
    embedsAvailable: string;
    emptyTournamentName: string;
    enable: string;
    enableKidMode: string;
    endgame: string;
    endgamePositions: string;
    engineFailed: string;
    engineManager: string;
    'error.email': string;
    'error.email_acceptable': string;
    'error.email_different': string;
    'error.email_unique': string;
    'error.max': I18nFormat;
    'error.maxLength': I18nFormat;
    'error.min': I18nFormat;
    'error.minLength': I18nFormat;
    'error.namePassword': string;
    'error.provideOneCheatedGameLink': string;
    'error.required': string;
    'error.unknown': string;
    'error.weakPassword': string;
    estimatedStart: string;
    evaluatingYourMove: string;
    evaluationGauge: string;
    eventInProgress: string;
    everybodyGetsAllFeaturesForFree: string;
    expandVariations: string;
    exportGames: string;
    fast: string;
    favoriteOpponents: string;
    fiftyMovesWithoutProgress: string;
    filterGames: string;
    findBetterMoveForBlack: string;
    findBetterMoveForWhite: string;
    finished: string;
    flair: string;
    flipBoard: string;
    focusChat: string;
    follow: string;
    followAndChallengeFriends: string;
    following: string;
    followsYou: string;
    followX: I18nFormat;
    forceDraw: string;
    forceResignation: string;
    forceVariation: string;
    forgotPassword: string;
    forum: string;
    freeOnlineChess: string;
    friends: string;
    fromPosition: string;
    fullFeatured: string;
    gameAborted: string;
    gameAnalysis: string;
    gameAsGIF: string;
    gameInProgress: I18nFormat;
    gameOver: string;
    games: string;
    gamesPlayed: string;
    gameVsX: I18nFormat;
    getAHint: string;
    giveNbSeconds: I18nPlural;
    glicko2Rating: string;
    goDeeper: string;
    goodPractice: string;
    graph: string;
    hangOn: string;
    help: string;
    hideBestMove: string;
    host: string;
    hostANewSimul: string;
    hostColorX: I18nFormat;
    howToAvoidThis: string;
    hue: string;
    human: string;
    ifNoneLeaveEmpty: string;
    ifRatingIsPlusMinusX: I18nFormat;
    ifRegistered: string;
    ifYouDoNotSeeTheEmailCheckOtherPlaces: string;
    important: string;
    importedByX: I18nFormat;
    importGame: string;
    importGameCaveat: string;
    importGameDataPrivacyWarning: string;
    importGameExplanation: string;
    importPgn: string;
    inaccuracy: string;
    inappropriateNameWarning: string;
    inbox: string;
    incorrectPassword: string;
    increment: string;
    incrementInSeconds: string;
    infiniteAnalysis: string;
    inKidModeTheLichessLogoGetsIconX: I18nFormat;
    inlineNotation: string;
    inLocalBrowser: string;
    insideTheBoard: string;
    instructions: string;
    insufficientMaterial: string;
    inTheFAQ: string;
    invalidAuthenticationCode: string;
    invalidFen: string;
    invalidPgn: string;
    invalidUsernameOrPassword: string;
    invitedYouToX: I18nFormat;
    inYourLocalTimezone: string;
    isPrivate: string;
    itsYourTurn: string;
    join: string;
    joinTheGame: string;
    joinTheTeamXToPost: I18nFormat;
    keyboardShortcuts: string;
    keyCycleSelectedVariation: string;
    keyEnterOrExitVariation: string;
    keyGoToStartOrEnd: string;
    keyMoveBackwardOrForward: string;
    keyNextBlunder: string;
    keyNextBranch: string;
    keyNextInaccuracy: string;
    keyNextLearnFromYourMistakes: string;
    keyNextMistake: string;
    keyPreviousBranch: string;
    keyRequestComputerAnalysis: string;
    keyShowOrHideComments: string;
    kidMode: string;
    kidModeExplanation: string;
    kidModeIsEnabled: string;
    kingInTheCenter: string;
    language: string;
    lastPost: string;
    lastSeenActive: I18nFormat;
    latestForumPosts: string;
    leaderboard: string;
    learnFromThisMistake: string;
    learnFromYourMistakes: string;
    learnMenu: string;
    lessThanNbMinutes: I18nPlural;
    letOtherPlayersChallengeYou: string;
    letOtherPlayersFollowYou: string;
    letOtherPlayersInviteYouToStudy: string;
    letOtherPlayersMessageYou: string;
    level: string;
    lichessDbExplanation: string;
    lichessPatronInfo: string;
    lichessTournaments: string;
    lifetimeScore: string;
    light: string;
    list: string;
    listBlockedPlayers: string;
    loadingEngine: string;
    loadPosition: string;
    lobby: string;
    location: string;
    loginToChat: string;
    logOut: string;
    losing: string;
    losses: string;
    lossOr50MovesByPriorMistake: string;
    lossSavedBy50MoveRule: string;
    lostAgainstTOSViolator: string;
    makeAStudy: string;
    makeMainLine: string;
    makePrivateTournament: string;
    makeSureToRead: I18nFormat;
    markdownAvailable: I18nFormat;
    masterDbExplanation: I18nFormat;
    mateInXHalfMoves: I18nPlural;
    maxDepthReached: string;
    maximumNbCharacters: I18nPlural;
    maximumWeeklyRating: string;
    maybeIncludeMoreGamesFromThePreferencesMenu: string;
    memberSince: string;
    memory: string;
    mentionedYouInX: I18nFormat;
    menu: string;
    message: string;
    middlegame: string;
    minimumRatedGames: string;
    minimumRating: string;
    minutesPerSide: string;
    mistake: string;
    mobile: string;
    mobileApp: string;
    mode: string;
    more: string;
    moreThanNbPerfRatedGames: I18nPlural;
    moreThanNbRatedGames: I18nPlural;
    mouseTricks: string;
    move: string;
    movesPlayed: string;
    moveTimes: string;
    multipleLines: string;
    mustBeInTeam: I18nFormat;
    name: string;
    navigateMoveTree: string;
    nbBlunders: I18nPlural;
    nbBookmarks: I18nPlural;
    nbDays: I18nPlural;
    nbDraws: I18nPlural;
    nbFollowers: I18nPlural;
    nbFollowing: I18nPlural;
    nbForumPosts: I18nPlural;
    nbFriendsOnline: I18nPlural;
    nbGames: I18nPlural;
    nbGamesInPlay: I18nPlural;
    nbGamesWithYou: I18nPlural;
    nbHours: I18nPlural;
    nbImportedGames: I18nPlural;
    nbInaccuracies: I18nPlural;
    nbLosses: I18nPlural;
    nbMinutes: I18nPlural;
    nbMistakes: I18nPlural;
    nbPerfTypePlayersThisWeek: I18nPlural;
    nbPlayers: I18nPlural;
    nbPlaying: I18nPlural;
    nbPuzzles: I18nPlural;
    nbRated: I18nPlural;
    nbSeconds: I18nPlural;
    nbSecondsToPlayTheFirstMove: I18nPlural;
    nbSimuls: I18nPlural;
    nbStudies: I18nPlural;
    nbTournamentPoints: I18nPlural;
    nbWins: I18nPlural;
    needNbMoreGames: I18nPlural;
    needNbMorePerfGames: I18nPlural;
    networkLagBetweenYouAndLichess: string;
    never: string;
    neverTypeYourPassword: string;
    newOpponent: string;
    newPassword: string;
    newPasswordAgain: string;
    newPasswordsDontMatch: string;
    newPasswordStrength: string;
    newTournament: string;
    next: string;
    nextXTournament: I18nFormat;
    no: string;
    noChat: string;
    noConditionalPremoves: string;
    noDrawBeforeSwissLimit: string;
    noGameFound: string;
    noMistakesFoundForBlack: string;
    noMistakesFoundForWhite: string;
    none: string;
    noNetwork: string;
    noNoteYet: string;
    noRestriction: string;
    normal: string;
    noSimulExplanation: string;
    noSimulFound: string;
    notACheckmate: string;
    notes: string;
    nothingToSeeHere: string;
    notifications: string;
    notificationsX: I18nFormat;
    offerDraw: string;
    oneDay: string;
    oneUrlPerLine: string;
    onlineAndOfflinePlay: string;
    onlineBots: string;
    onlinePlayers: string;
    onlyExistingConversations: string;
    onlyFriends: string;
    onlyMembersOfTeam: string;
    onlyTeamLeaders: string;
    onlyTeamMembers: string;
    onlyWorksOnce: string;
    onSlowGames: string;
    opacity: string;
    opening: string;
    openingEndgameExplorer: string;
    openingExplorer: string;
    openingExplorerAndTablebase: string;
    openings: string;
    openStudy: string;
    openTournaments: string;
    opponent: string;
    opponentLeftChoices: string;
    opponentLeftCounter: I18nPlural;
    orLetYourOpponentScanQrCode: string;
    orUploadPgnFile: string;
    other: string;
    otherPlayers: string;
    ourEventTips: string;
    outsideTheBoard: string;
    password: string;
    passwordReset: string;
    passwordSuggestion: string;
    pasteTheFenStringHere: string;
    pasteThePgnStringHere: string;
    pause: string;
    pawnMove: string;
    performance: string;
    perfRatingX: I18nFormat;
    phoneAndTablet: string;
    pieceSet: string;
    play: string;
    playChessEverywhere: string;
    playChessInStyle: string;
    playComputerMove: string;
    player: string;
    players: string;
    playEveryGame: string;
    playFirstOpeningEndgameExplorerMove: string;
    playingRightNow: string;
    playSelectedMove: string;
    playVariationToCreateConditionalPremoves: string;
    playWithAFriend: string;
    playWithTheMachine: string;
    playX: I18nFormat;
    pleasantChessExperience: string;
    points: string;
    popularOpenings: string;
    positionInputHelp: I18nFormat;
    posts: string;
    potentialProblem: string;
    practice: string;
    practiceWithComputer: string;
    previouslyOnLichessTV: string;
    privacy: string;
    privacyPolicy: string;
    proceedToX: I18nFormat;
    profile: string;
    profileCompletion: I18nFormat;
    promoteVariation: string;
    proposeATakeback: string;
    puzzleDesc: string;
    puzzles: string;
    quickPairing: string;
    raceFinished: string;
    randomColor: string;
    rank: string;
    rankIsUpdatedEveryNbMinutes: I18nPlural;
    rankX: I18nFormat;
    rapid: string;
    rapidDesc: string;
    rated: string;
    ratedFormHelp: string;
    ratedLessThanInPerf: I18nFormat;
    ratedMoreThanInPerf: I18nFormat;
    ratedTournament: string;
    rating: string;
    ratingRange: string;
    ratingStats: string;
    ratingXOverYGames: I18nPlural;
    readAboutOur: I18nFormat;
    really: string;
    realName: string;
    realTime: string;
    realtimeReplay: string;
    reason: string;
    receiveForumNotifications: string;
    recentGames: string;
    reconnecting: string;
    refreshInboxAfterFiveMinutes: string;
    refundXpointsTimeControlY: I18nFormat;
    rematch: string;
    rematchOfferAccepted: string;
    rematchOfferCanceled: string;
    rematchOfferDeclined: string;
    rematchOfferSent: string;
    rememberMe: string;
    removesTheDepthLimit: string;
    reopenYourAccount: string;
    replayMode: string;
    replies: string;
    reply: string;
    replyToThisTopic: string;
    reportAUser: string;
    reportCheatBoostHelp: string;
    reportProcessedFasterInEnglish: string;
    reportUsernameHelp: string;
    reportXToModerators: I18nFormat;
    requestAComputerAnalysis: string;
    required: string;
    reset: string;
    resign: string;
    resignLostGames: string;
    resignTheGame: string;
    resume: string;
    resumeLearning: string;
    resumePractice: string;
    resVsX: I18nFormat;
    retry: string;
    returnToSimulHomepage: string;
    returnToTournamentsHomepage: string;
    reviewBlackMistakes: string;
    reviewWhiteMistakes: string;
    revokeAllSessions: string;
    safeTournamentName: string;
    save: string;
    screenshotCurrentPosition: string;
    scrollOverComputerVariationsToPreviewThem: string;
    searchOrStartNewDiscussion: string;
    security: string;
    seeBestMove: string;
    send: string;
    sentEmailWithLink: string;
    sessions: string;
    setFlair: string;
    setTheBoard: string;
    shareYourInsightsData: string;
    showHelpDialog: string;
    showMeEverything: string;
    showThreat: string;
    showUnreadLichessMessage: string;
    showVariationArrows: string;
    side: string;
    signIn: string;
    signUp: string;
    signupEmailHint: string;
    signUpToHostOrJoinASimul: string;
    signupUsernameHint: string;
    simulAddExtraTime: string;
    simulAddExtraTimePerPlayer: string;
    simulClockHint: string;
    simulDescription: string;
    simulDescriptionHelp: string;
    simulFeatured: I18nFormat;
    simulFeaturedHelp: I18nFormat;
    simulHostcolor: string;
    simulHostExtraTime: string;
    simulHostExtraTimePerPlayer: string;
    simultaneousExhibitions: string;
    simulVariantsHint: string;
    since: string;
    siteDescription: string;
    size: string;
    skipThisMove: string;
    slow: string;
    socialMediaLinks: string;
    solution: string;
    someoneYouReportedWasBanned: string;
    sorry: string;
    sound: string;
    sourceCode: string;
    spectatorRoom: string;
    stalemate: string;
    standard: string;
    standByX: I18nFormat;
    standing: string;
    startedStreaming: string;
    starting: string;
    startPosition: string;
    streamerManager: string;
    streamersMenu: string;
    strength: string;
    studyMenu: string;
    subject: string;
    subscribe: string;
    success: string;
    switchSides: string;
    takeback: string;
    takebackPropositionAccepted: string;
    takebackPropositionCanceled: string;
    takebackPropositionDeclined: string;
    takebackPropositionSent: string;
    talkInChat: string;
    teamNamedX: I18nFormat;
    temporaryInconvenience: string;
    termsOfService: string;
    thankYou: string;
    thankYouForReading: string;
    theFirstPersonToComeOnThisUrlWillPlayWithYou: string;
    theForumEtiquette: string;
    theGameIsADraw: string;
    thematic: string;
    thisAccountViolatedTos: string;
    thisGameIsRated: string;
    thisIsAChessCaptcha: string;
    thisTopicIsArchived: string;
    thisTopicIsNowClosed: string;
    threeChecks: string;
    threefoldRepetition: string;
    time: string;
    timeAlmostUp: string;
    timeBeforeTournamentStarts: string;
    timeControl: string;
    timeline: string;
    timeToProcessAMoveOnLichessServer: string;
    today: string;
    toggleAllAnalysis: string;
    toggleGlyphAnnotations: string;
    toggleLocalAnalysis: string;
    toggleLocalEvaluation: string;
    togglePositionAnnotations: string;
    toggleTheChat: string;
    toggleVariationArrows: string;
    toInviteSomeoneToPlayGiveThisUrl: string;
    tools: string;
    topGames: string;
    topics: string;
    toReportSomeoneForCheatingOrBadBehavior: I18nFormat;
    toRequestSupport: I18nFormat;
    toStudy: string;
    tournament: string;
    tournamentCalendar: string;
    tournamentComplete: string;
    tournamentDoesNotExist: string;
    tournamentEntryCode: string;
    tournamentFAQ: string;
    tournamentHomeDescription: string;
    tournamentHomeTitle: string;
    tournamentIsStarting: string;
    tournamentMayHaveBeenCanceled: string;
    tournamentNotFound: string;
    tournamentPairingsAreNowClosed: string;
    tournamentPoints: string;
    tournaments: string;
    tournChat: string;
    tournDescription: string;
    tournDescriptionHelp: string;
    tpTimeSpentOnTV: I18nFormat;
    tpTimeSpentPlaying: I18nFormat;
    transparent: string;
    troll: string;
    tryAnotherMoveForBlack: string;
    tryAnotherMoveForWhite: string;
    tryTheContactPage: string;
    tryToWin: string;
    typePrivateNotesHere: string;
    ultraBulletDesc: string;
    unblock: string;
    unfollow: string;
    unfollowX: I18nFormat;
    unknown: string;
    unknownDueToRounding: string;
    unlimited: string;
    unsubscribe: string;
    until: string;
    user: string;
    userIsBetterThanPercentOfPerfTypePlayers: I18nFormat;
    username: string;
    usernameAlreadyUsed: string;
    usernameCanBeUsedForNewAccount: string;
    usernameCharsInvalid: string;
    usernameNotFound: I18nFormat;
    usernameOrEmail: string;
    usernamePrefixInvalid: string;
    usernameSuffixInvalid: string;
    usernameUnacceptable: string;
    useTheReportForm: string;
    usingServerAnalysis: string;
    variant: string;
    variantEnding: string;
    variantLoss: string;
    variants: string;
    variantWin: string;
    variationArrowsInfo: string;
    victory: string;
    victoryVsYInZ: I18nFormat;
    videoLibrary: string;
    viewInFullSize: string;
    viewRematch: string;
    views: string;
    viewTheSolution: string;
    viewTournament: string;
    waitForSignupHelp: string;
    waiting: string;
    waitingForAnalysis: string;
    waitingForOpponent: string;
    watch: string;
    watchGames: string;
    webmasters: string;
    website: string;
    weeklyPerfTypeRatingDistribution: I18nFormat;
    weHadToTimeYouOutForAWhile: string;
    weHaveSentYouAnEmailClickTheLink: string;
    weHaveSentYouAnEmailTo: I18nFormat;
    whatIsIheMatter: string;
    whatSignupUsername: string;
    whenCreateSimul: string;
    white: string;
    whiteCastlingKingside: string;
    whiteCheckmatesInOneMove: string;
    whiteDeclinesDraw: string;
    whiteDidntMove: string;
    whiteDrawBlack: string;
    whiteIsVictorious: string;
    whiteLeftTheGame: string;
    whiteOffersDraw: string;
    whitePlays: string;
    whiteResigned: string;
    whiteTimeOut: string;
    whiteWins: string;
    whiteWinsGame: string;
    why: string;
    winner: string;
    winning: string;
    winOr50MovesByPriorMistake: string;
    winPreventedBy50MoveRule: string;
    winRate: string;
    wins: string;
    wishYouGreatGames: string;
    withdraw: string;
    withEverybody: string;
    withFriends: string;
    withNobody: string;
    writeAPrivateNoteAboutThisUser: string;
    xCompetesInY: I18nFormat;
    xCreatedTeamY: I18nFormat;
    xHostsY: I18nFormat;
    xInvitedYouToY: I18nFormat;
    xIsAFreeYLibreOpenSourceChessServer: I18nFormat;
    xJoinedTeamY: I18nFormat;
    xJoinsY: I18nFormat;
    xLikesY: I18nFormat;
    xMentionedYouInY: I18nFormat;
    xOpeningExplorer: I18nFormat;
    xPostedInForumY: I18nFormat;
    xRating: I18nFormat;
    xStartedFollowingY: I18nFormat;
    xStartedStreaming: I18nFormat;
    xWasPlayed: I18nFormat;
    yes: string;
    yesterday: string;
    youAreBetterThanPercentOfPerfTypePlayers: I18nFormat;
    youAreLeavingLichess: string;
    youAreNotInTeam: I18nFormat;
    youAreNowPartOfTeam: string;
    youArePlaying: string;
    youBrowsedAway: string;
    youCanAlsoScrollOverTheBoardToMoveInTheGame: string;
    youCanDoBetter: string;
    youCanHideFlair: string;
    youCannotPostYetPlaySomeGames: string;
    youCantStartNewGame: string;
    youDoNotHaveAnEstablishedPerfTypeRating: I18nFormat;
    youHaveBeenTimedOut: string;
    youHaveJoinedTeamX: I18nFormat;
    youNeedAnAccountToDoThat: string;
    youPlayTheBlackPieces: string;
    youPlayTheWhitePieces: string;
    yourOpponentOffersADraw: string;
    yourOpponentProposesATakeback: string;
    yourOpponentWantsToPlayANewGameWithYou: string;
    yourPendingSimuls: string;
    yourPerfRatingIsProvisional: I18nFormat;
    yourPerfRatingIsTooHigh: I18nFormat;
    yourPerfRatingIsTooLow: I18nFormat;
    yourPerfTypeRatingIsRating: I18nFormat;
    yourQuestionMayHaveBeenAnswered: I18nFormat;
    yourRating: string;
    yourScore: I18nFormat;
    yourTopWeeklyPerfRatingIsTooHigh: I18nFormat;
    yourTurn: string;
    zeroAdvertisement: string;
  };
  storm: {
    accuracy: string;
    allTime: string;
    bestRunOfDay: string;
    clickToReload: string;
    combo: string;
    createNewGame: string;
    endRun: string;
    failedPuzzles: string;
    getReady: string;
    highestSolved: string;
    highscores: string;
    highscoreX: I18nFormat;
    joinPublicRace: string;
    joinRematch: string;
    joinTheRace: string;
    moves: string;
    moveToStart: string;
    newAllTimeHighscore: string;
    newDailyHighscore: string;
    newMonthlyHighscore: string;
    newRun: string;
    newWeeklyHighscore: string;
    nextRace: string;
    playAgain: string;
    playedNbRunsOfPuzzleStorm: I18nPlural;
    previousHighscoreWasX: I18nFormat;
    puzzlesPlayed: string;
    puzzlesSolved: string;
    raceComplete: string;
    raceYourFriends: string;
    runs: string;
    score: string;
    skip: string;
    skipExplanation: string;
    skipHelp: string;
    skippedPuzzle: string;
    slowPuzzles: string;
    spectating: string;
    startTheRace: string;
    thisMonth: string;
    thisRunHasExpired: string;
    thisRunWasOpenedInAnotherTab: string;
    thisWeek: string;
    time: string;
    timePerMove: string;
    viewBestRuns: string;
    waitForRematch: string;
    waitingForMorePlayers: string;
    waitingToStart: string;
    xRuns: I18nPlural;
    youPlayTheBlackPiecesInAllPuzzles: string;
    youPlayTheWhitePiecesInAllPuzzles: string;
    yourRankX: I18nFormat;
  };
  streamer: {
    allStreamers: string;
    approved: string;
    becomeStreamer: string;
    changePicture: string;
    currentlyStreaming: I18nFormat;
    downloadKit: string;
    doYouHaveStream: string;
    editPage: string;
    headline: string;
    hereWeGo: string;
    keepItShort: I18nPlural;
    lastStream: I18nFormat;
    lichessStreamer: string;
    lichessStreamers: string;
    live: string;
    longDescription: string;
    maxSize: I18nFormat;
    offline: string;
    optionalOrEmpty: string;
    pendingReview: string;
    perk1: string;
    perk2: string;
    perk3: string;
    perk4: string;
    perks: string;
    pleaseFillIn: string;
    requestReview: string;
    rule1: string;
    rule2: string;
    rule3: string;
    rule4: I18nFormat;
    rules: string;
    streamerLanguageSettings: string;
    streamerName: string;
    streamingFairplayFAQ: string;
    tellUsAboutTheStream: string;
    twitchUsername: string;
    uploadPicture: string;
    visibility: string;
    whenApproved: string;
    whenReady: I18nFormat;
    xIsStreaming: I18nFormat;
    xStreamerPicture: I18nFormat;
    yourPage: string;
    youTubeChannelId: string;
  };
  study: {
    addMembers: string;
    addNewChapter: string;
    allowCloning: string;
    allStudies: string;
    allSyncMembersRemainOnTheSamePosition: string;
    alphabetical: string;
    analysisMode: string;
    annotateWithGlyphs: string;
    attack: string;
    automatic: string;
    back: string;
    blackIsBetter: string;
    blackIsSlightlyBetter: string;
    blackIsWinning: string;
    blunder: string;
    brilliantMove: string;
    chapterPgn: string;
    chapterX: I18nFormat;
    clearAllCommentsInThisChapter: string;
    clearAnnotations: string;
    clearChat: string;
    clearVariations: string;
    cloneStudy: string;
    commentThisMove: string;
    commentThisPosition: string;
    confirmDeleteStudy: I18nFormat;
    contributor: string;
    contributors: string;
    copyChapterPgn: string;
    counterplay: string;
    createChapter: string;
    createStudy: string;
    currentChapterUrl: string;
    dateAddedNewest: string;
    dateAddedOldest: string;
    deleteChapter: string;
    deleteStudy: string;
    deleteTheStudyChatHistory: string;
    deleteThisChapter: string;
    development: string;
    downloadAllGames: string;
    downloadGame: string;
    dubiousMove: string;
    editChapter: string;
    editor: string;
    editStudy: string;
    embedInYourWebsite: string;
    empty: string;
    enableSync: string;
    equalPosition: string;
    everyone: string;
    first: string;
    getAFullComputerAnalysis: string;
    goodMove: string;
    hideNextMoves: string;
    hot: string;
    importFromChapterX: I18nFormat;
    initiative: string;
    interactiveLesson: string;
    interestingMove: string;
    inviteOnly: string;
    inviteToTheStudy: string;
    kick: string;
    last: string;
    leaveTheStudy: string;
    like: string;
    loadAGameByUrl: string;
    loadAGameFromPgn: string;
    loadAGameFromXOrY: I18nFormat;
    loadAPositionFromFen: string;
    makeSureTheChapterIsComplete: string;
    manageTopics: string;
    members: string;
    mistake: string;
    mostPopular: string;
    myFavoriteStudies: string;
    myPrivateStudies: string;
    myPublicStudies: string;
    myStudies: string;
    myTopics: string;
    nbChapters: I18nPlural;
    nbGames: I18nPlural;
    nbMembers: I18nPlural;
    newChapter: string;
    newTag: string;
    next: string;
    nextChapter: string;
    nobody: string;
    noLetPeopleBrowseFreely: string;
    noneYet: string;
    noPinnedComment: string;
    normalAnalysis: string;
    novelty: string;
    onlyContributorsCanRequestAnalysis: string;
    onlyMe: string;
    onlyMove: string;
    onlyPublicStudiesCanBeEmbedded: string;
    open: string;
    orientation: string;
    pasteYourPgnTextHereUpToNbGames: I18nPlural;
    pgnTags: string;
    pinnedChapterComment: string;
    pinnedStudyComment: string;
    playAgain: string;
    playing: string;
    pleaseOnlyInvitePeopleYouKnow: string;
    popularTopics: string;
    prevChapter: string;
    previous: string;
    private: string;
    public: string;
    readMoreAboutEmbedding: string;
    recentlyUpdated: string;
    rightUnderTheBoard: string;
    save: string;
    saveChapter: string;
    searchByUsername: string;
    shareAndExport: string;
    shareChanges: string;
    showEvalBar: string;
    spectator: string;
    start: string;
    startAtInitialPosition: string;
    startAtX: I18nFormat;
    startFromCustomPosition: string;
    startFromInitialPosition: string;
    studiesCreatedByX: I18nFormat;
    studiesIContributeTo: string;
    studyActions: string;
    studyNotFound: string;
    studyPgn: string;
    studyUrl: string;
    theChapterIsTooShortToBeAnalysed: string;
    timeTrouble: string;
    topics: string;
    unclearPosition: string;
    unlike: string;
    unlisted: string;
    urlOfTheGame: string;
    visibility: string;
    whatAreStudies: string;
    whatWouldYouPlay: string;
    whereDoYouWantToStudyThat: string;
    whiteIsBetter: string;
    whiteIsSlightlyBetter: string;
    whiteIsWinning: string;
    withCompensation: string;
    withTheIdea: string;
    xBroughtToYouByY: I18nFormat;
    yesKeepEveryoneOnTheSamePosition: string;
    youAreNowAContributor: string;
    youAreNowASpectator: string;
    youCanPasteThisInTheForumToEmbed: string;
    youCompletedThisLesson: string;
    zugzwang: string;
  };
  swiss: {
    absences: string;
    byes: string;
    comparison: string;
    durationUnknown: string;
    dutchSystem: string;
    earlyDrawsAnswer: string;
    earlyDrawsQ: string;
    FIDEHandbook: string;
    forbiddedUsers: string;
    forbiddenPairings: string;
    forbiddenPairingsHelp: string;
    identicalForbidden: string;
    identicalPairing: string;
    joinOrCreateTeam: string;
    lateJoin: string;
    lateJoinA: string;
    lateJoinQ: string;
    lateJoinUntil: string;
    manualPairings: string;
    manualPairingsHelp: string;
    moreRoundsThanPlayersA: string;
    moreRoundsThanPlayersQ: string;
    mustHavePlayedTheirLastSwissGame: string;
    mustHavePlayedTheirLastSwissGameHelp: string;
    nbRounds: I18nPlural;
    newSwiss: string;
    nextRound: string;
    nowPlaying: string;
    numberOfByesA: string;
    numberOfByesQ: string;
    numberOfGames: string;
    numberOfGamesAsManyAsPossible: string;
    numberOfGamesPreDefined: string;
    numberOfRounds: string;
    numberOfRoundsHelp: string;
    oneRoundEveryXDays: I18nPlural;
    ongoingGames: I18nPlural;
    otherSystemsA: string;
    otherSystemsQ: string;
    pairingsA: I18nFormat;
    pairingsQ: string;
    pairingSystem: string;
    pairingSystemArena: string;
    pairingSystemSwiss: string;
    pairingWaitTime: string;
    pairingWaitTimeArena: string;
    pairingWaitTimeSwiss: string;
    pause: string;
    pauseSwiss: string;
    playYourGames: string;
    pointsCalculationA: string;
    pointsCalculationQ: string;
    possibleButNotConsecutive: string;
    predefinedDuration: string;
    predefinedUsers: string;
    protectionAgainstNoShowA: string;
    protectionAgainstNoShowQ: string;
    restrictedToTeamsA: string;
    restrictedToTeamsQ: string;
    roundInterval: string;
    roundRobinA: string;
    roundRobinQ: string;
    roundsAreStartedManually: string;
    similarToOTB: string;
    sonnebornBergerScore: string;
    startingIn: string;
    startingSoon: string;
    streaksAndBerserk: string;
    swiss: string;
    swissDescription: I18nFormat;
    swissTournaments: string;
    swissVsArenaA: string;
    swissVsArenaQ: string;
    teamOnly: I18nFormat;
    tieBreak: string;
    tiebreaksCalculationA: I18nFormat;
    tiebreaksCalculationQ: string;
    tournDuration: string;
    tournStartDate: string;
    unlimitedAndFree: string;
    viewAllXRounds: I18nPlural;
    whatIfOneDoesntPlayA: string;
    whatIfOneDoesntPlayQ: string;
    willSwissReplaceArenasA: string;
    willSwissReplaceArenasQ: string;
    xMinutesBetweenRounds: I18nPlural;
    xRoundsSwiss: I18nPlural;
    xSecondsBetweenRounds: I18nPlural;
  };
  team: {
    allTeams: string;
    battleOfNbTeams: I18nPlural;
    beingReviewed: string;
    closeTeam: string;
    closeTeamDescription: string;
    completedTourns: string;
    declinedRequests: string;
    entryCode: string;
    entryCodeDescriptionForLeader: string;
    incorrectEntryCode: string;
    innerTeam: string;
    joinLichessVariantTeam: I18nFormat;
    joinTeam: string;
    kickSomeone: string;
    leadersChat: string;
    leaderTeams: string;
    listTheTeamsThatWillCompete: string;
    manuallyReviewAdmissionRequests: string;
    manuallyReviewAdmissionRequestsHelp: string;
    messageAllMembers: string;
    messageAllMembersLongDescription: string;
    messageAllMembersOverview: string;
    myTeams: string;
    nbLeadersPerTeam: I18nPlural;
    nbMembers: I18nPlural;
    newTeam: string;
    noTeamFound: string;
    numberOfLeadsPerTeam: string;
    numberOfLeadsPerTeamHelp: string;
    oneTeamPerLine: string;
    oneTeamPerLineHelp: string;
    onlyLeaderLeavesTeam: string;
    quitTeam: string;
    requestDeclined: string;
    subToTeamMessages: string;
    swissTournamentOverview: string;
    team: string;
    teamAlreadyExists: string;
    teamBattle: string;
    teamBattleOverview: string;
    teamLeaders: I18nPlural;
    teamPage: string;
    teamRecentMembers: string;
    teams: string;
    teamsIlead: string;
    teamTournament: string;
    teamTournamentOverview: string;
    thisTeamBattleIsOver: string;
    upcomingTournaments: string;
    whoToKick: string;
    willBeReviewed: string;
    xJoinRequests: I18nPlural;
    youWayWantToLinkOneOfTheseTournaments: string;
  };
  tfa: {
    authenticationCode: string;
    disableTwoFactor: string;
    enableTwoFactor: string;
    enterPassword: string;
    ifYouCannotScanEnterX: I18nFormat;
    ifYouLoseAccessTwoFactor: I18nFormat;
    openTwoFactorApp: string;
    scanTheCode: string;
    setupReminder: string;
    twoFactorAppRecommend: string;
    twoFactorAuth: string;
    twoFactorEnabled: string;
    twoFactorHelp: string;
    twoFactorToDisable: string;
  };
  timeago: {
    completed: string;
    inNbDays: I18nPlural;
    inNbHours: I18nPlural;
    inNbMinutes: I18nPlural;
    inNbMonths: I18nPlural;
    inNbSeconds: I18nPlural;
    inNbWeeks: I18nPlural;
    inNbYears: I18nPlural;
    justNow: string;
    nbDaysAgo: I18nPlural;
    nbHoursAgo: I18nPlural;
    nbHoursRemaining: I18nPlural;
    nbMinutesAgo: I18nPlural;
    nbMinutesRemaining: I18nPlural;
    nbMonthsAgo: I18nPlural;
    nbWeeksAgo: I18nPlural;
    nbYearsAgo: I18nPlural;
    rightNow: string;
  };
  tourname: {
    classicalShield: string;
    classicalShieldArena: string;
    dailyClassical: string;
    dailyClassicalArena: string;
    dailyRapid: string;
    dailyRapidArena: string;
    dailyX: I18nFormat;
    dailyXArena: I18nFormat;
    easternClassical: string;
    easternClassicalArena: string;
    easternRapid: string;
    easternRapidArena: string;
    easternX: I18nFormat;
    easternXArena: I18nFormat;
    eliteX: I18nFormat;
    eliteXArena: I18nFormat;
    hourlyRapid: string;
    hourlyRapidArena: string;
    hourlyX: I18nFormat;
    hourlyXArena: I18nFormat;
    monthlyClassical: string;
    monthlyClassicalArena: string;
    monthlyRapid: string;
    monthlyRapidArena: string;
    monthlyX: I18nFormat;
    monthlyXArena: I18nFormat;
    rapidShield: string;
    rapidShieldArena: string;
    weeklyClassical: string;
    weeklyClassicalArena: string;
    weeklyRapid: string;
    weeklyRapidArena: string;
    weeklyX: I18nFormat;
    weeklyXArena: I18nFormat;
    xArena: I18nFormat;
    xShield: I18nFormat;
    xShieldArena: I18nFormat;
    xTeamBattle: I18nFormat;
    yearlyClassical: string;
    yearlyClassicalArena: string;
    yearlyRapid: string;
    yearlyRapidArena: string;
    yearlyX: I18nFormat;
    yearlyXArena: I18nFormat;
  };
  ublog: {
    blogTips: string;
    blogTopics: string;
    communityBlogs: string;
    continueReadingPost: string;
    createBlogDiscussion: string;
    createBlogDiscussionHelp: string;
    deleteBlog: string;
    discussThisBlogPostInTheForum: string;
    drafts: string;
    editYourBlogPost: string;
    friendBlogs: string;
    imageAlt: string;
    imageCredit: string;
    inappropriateContentAccountClosed: string;
    latestBlogPosts: string;
    lichessBlogPostsFromXYear: I18nFormat;
    lichessOfficialBlog: string;
    likedBlogs: string;
    moreBlogPostsBy: I18nFormat;
    nbViews: I18nPlural;
    newPost: string;
    noDrafts: string;
    noPostsInThisBlogYet: string;
    postBody: string;
    postIntro: string;
    postTitle: string;
    previousBlogPosts: string;
    published: string;
    publishedNbBlogPosts: I18nPlural;
    publishHelp: string;
    publishOnYourBlog: string;
    safeAndRespectfulContent: string;
    safeToUseImages: string;
    saveDraft: string;
    selectPostTopics: string;
    thisIsADraft: string;
    thisPostIsPublished: string;
    uploadAnImageForYourPost: string;
    useImagesYouMadeYourself: string;
    viewAllNbPosts: I18nPlural;
    xBlog: I18nFormat;
    xPublishedY: I18nFormat;
    youBlockedByBlogAuthor: string;
  };
  voiceCommands: {
    cancelTimerOrDenyARequest: string;
    castle: string;
    instructions1: I18nFormat;
    instructions2: string;
    instructions3: I18nFormat;
    instructions4: I18nFormat;
    instructions5: string;
    instructions6: I18nFormat;
    moveToE4OrSelectE4Piece: string;
    phoneticAlphabetIsBest: string;
    playPreferredMoveOrConfirmSomething: string;
    selectOrCaptureABishop: string;
    showPuzzleSolution: string;
    sleep: string;
    takeRookWithQueen: string;
    thisBlogPost: string;
    turnOffVoiceRecognition: string;
    voiceCommands: string;
    watchTheVideoTutorial: string;
  };
}
