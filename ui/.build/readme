Usage:
  ui/build <options> <packages>  # <packages> are top level directories in ui
                                 # if no packages are specified, all will be processed
                                 # multiple short options can be preceded by a single dash

Recommended:
  ui/build -cdw  # clean, build debug, and watch for changes with clean rebuilds

Options:
  -h, --help          show this help and exit
  -w, --watch         build and watch for changes
  -c, --clean         clean all build artifacts and build fresh
  -p, --prod          build minified assets (prod builds)
  -n, --no-install    don't run pnpm install
  -d, --debug         build assets with site.debug = true
  -t, --test          typecheck sources in ./tests/**. warning - this enables skipLibCheck for dependencies
  -l, --log=<url>     monkey patch console log functions in javascript manifest to POST log messages to
                      <url> or localhost:8666 (default). if used with --watch, the ui/build process
                      will listen for http on 8666 and display received json as 'web' in build logs
  --update            update ui/.build/node_modules with pnpm install
  --no-color          don't use color in logs
  --no-time           don't log the time
  --no-context        don't log the context

Exclusive Options: (any of these will disable other functions)
  --clean-exit        clean all build artifacts and exit
  --tsc               run tsc on {package}/tsconfig.json and dependencies
  --sass              run sass on {package}/css/build/*.scss and dependencies
  --esbuild           run esbuild (given in {package}/package.json/lichess/bundles array)
  --sync              run sync copies (given in {package}/package.json/lichess/sync objects)
  --i18n              build @types/lichess/i18n.d.ts and translation/js files

Examples:
  ./build -np              # no pnpm install, build minified
  ./build -w dasher chart  # watch mode for dasher and chart packages
  ./build --tsc -w         # watch mode but type checking only
  ./build -w -l=/path      # build, watch. patch console methods in emitted js to also POST messages
                           # to ${location.origin}/path. ui/build watch process displays received
                           # messages as 'web' in build logs
