@import '../../puz/css/font';
@import 'layout';
@import 'zen';
@import 'svgAnimation';

#trainer {
  .wrong {
    $c-wrong: $c-bad;

    .progress__bar {
      background-color: $c-wrong;
    }

    .score {
      color: $c-wrong !important;
    }

    .coord--current {
      fill: $c-wrong !important;
    }

    .current-target {
      stroke: $c-wrong;
    }
  }

  .score,
  .timer {
    font-family: 'storm';
    font-size: 5em;
    margin: $block-gap;
  }

  .hurry {
    color: $c-brag !important;
  }

  .box {
    padding: $block-gap;

    &:not(:first-child) {
      margin-top: $block-gap;
    }

    h1 {
      font-size: 1.5em;
      padding: 0 !important;
      text-align: center;
    }
  }

  i {
    display: block;
    width: 30px;
    height: 30px;
    background-size: 100%;
    background-repeat: no-repeat;
    padding: 0;
  }

  .current-status {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    &--color {
      flex-flow: row;
      i {
        width: 60px;
        height: 60px;
      }
    }
  }

  form.mode,
  form.color,
  form.timeControl {
    margin-top: $block-gap;
  }
  form.files {
    margin-top: 1em;
  }

  .mode_option,
  .timeControl_option {
    width: 50%;
  }

  .timeControl_untimed {
    font-size: 1.5em;
    line-height: 1em;
  }

  .color_white i {
    background-image: url(../piece/cburnett/wK.svg);
  }

  .color_random i {
    background-image: url(../images/wbK.svg);
  }

  .color_black i {
    background-image: url(../piece/cburnett/bK.svg);
  }

  .scores {
    display: flex;
    flex-direction: column;
    row-gap: 1em;
  }

  .back {
    @extend %flex-column;
    align-items: center;
    margin-top: $block-gap;
  }

  .back-button {
    font-size: 1.5em;
    text-transform: uppercase;
  }

  .progress {
    @extend %box-radius;
    background-color: $c-bg-zebra;
    &__bar {
      @extend %box-radius;
      width: 100%;
      height: 10px;
      background-color: $c-secondary;
    }
  }

  .table {
    @extend %flex-column;
    align-items: center;
    justify-content: space-around;
  }

  .explanation {
    @extend %page-text-shadow !optional;

    li {
      list-style: outside disc;
      margin: 0.5em 0 0.5em 1em;
    }

    strong {
      display: block;
      margin: 1em 0 0.5em 0;
    }
  }

  .start {
    width: fit-content;
  }

  .coordinate-input {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'buttons buttons' 'voice voice' 'keyboard keyboard';
    grid-row-gap: 1vh;
    @include breakpoint($mq-x-small) {
      grid-template-areas: 'keyboard voice' 'buttons buttons';
    }
  }

  .keyboard-container {
    @extend %flex-between;
    grid-area: keyboard;
    width: 100%;
    a {
      margin-right: 2vw;
    }
    input.keyboard {
      width: 4em;
      margin-#{$end-direction}: 1em;
    }
    &.hidden {
      display: none;
    }
  }

  .voice-container {
    grid-area: voice;
  }

  .files-ranks {
    grid-area: buttons;
    display: grid;
    width: 100%;
    grid-template-columns: repeat(8, 1fr);
    button.file-rank {
      height: 3em;
      border-width: 3px;
      font-weight: bold;
    }
  }

  .setting {
    @extend %flex-center;
    flex: 0 0 auto;
    gap: 1em;
    margin-top: $block-gap;
    user-select: none;

    label {
      flex: 4 1 auto;
      cursor: pointer;
    }
  }
}
