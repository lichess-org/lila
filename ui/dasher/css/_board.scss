@import '../../common/css/theme/board/boards';

#dasher_app .board {
  .list {
    @extend %flex-wrap;

    margin: 5px 0;
  }

  .list button {
    flex: 0 0 33%;
    height: 40px;

    @extend %flex-center;
    @extend %button-none;

    justify-content: center;
  }

  .list span {
    display: block;
    width: 64px;
    height: 32px;
    body:not(.simple-board) & {
      filter: hue-rotate(calc(var(---board-hue) * 3.6deg));
    }
  }

  .list button:hover {
    filter: brightness(1.05);
  }

  .list button:hover span {
    transform: scale(1.05);
  }

  .list button.active {
    background-color: $c-good;
  }

  .reset {
    @extend %button-none;
    padding: 0.5rem 1rem;
    &:hover {
      color: $c-primary;
    }
  }

  .selector {
    display: flex;
    justify-content: stretch;
  }
  .zoom,
  .board-brightness,
  .board-opacity,
  .board-hue {
    display: grid;
    grid-template-columns: 45% 55%;
    align-items: center;
    padding: 0.5rem 1rem;
    label {
      white-space: nowrap;
    }
  }

  .zoom {
    display: none;

    @include mq-board-resizable {
      display: grid;
    }
  }

  .range {
    font-size: 1.5em;
    margin: 0;
    padding: 0;
    width: 100%;
  }

  &.d2 {
    @each $name, $theme in $board-themes-2d {
      .#{$name} {
        $file-ext: map-get($theme, file-ext);
        $name-override: map-get($theme, name-override);
        $file-name: if($name-override, $name-override, $name);

        @if $file-name == 'newspaper' {
          background-image: img-url('board/svg/#{$file-name}.svg');
          background-size: 256px;
        } @else {
          background-image: img-url('board/#{$file-name}.thumbnail.#{$file-ext}');
        }
      }
    }
  }

  &.d3 {
    @each $name in map-keys($board-themes-3d) {
      .#{$name} {
        background-image: img-url('staunton/board/#{$name}.thumbnail.png');
      }
    }
  }
}
