.slist {
  width: 100%;
  border-bottom: $border;

  thead {
    @extend %metal, %roboto;

    th {
      border-top: $border;
      border-bottom: $border;
      padding: 0.5rem 0.8rem;
    }

    th.large {
      font-size: 1.2rem;
    }
  }

  td {
    padding: 1rem;

    .label {
      font-family: monospace;
      font-size: 0.8rem;
    }
  }

  tbody tr:nth-child(even) {
    background: $c-bg-zebra;
  }

  td:first-child,
  th:first-child {
    padding-#{$start-direction}: 1.5rem;
  }

  &-pad {
    td:first-child,
    th:first-child {
      padding-#{$start-direction}: var(--box-padding);
    }

    td:last-child,
    th:last-child {
      padding-#{$end-direction}: var(--box-padding);
    }
  }

  &-invert {
    tbody tr:nth-child(odd) {
      background: $c-bg-zebra;
    }

    tbody tr:nth-child(even) {
      background: none;
    }
  }
}

.slist-wrapper {
  overflow-x: auto;
  max-width: calc(100vw - var(--box-padding) * 2);

  .slist {
    @include breakpoint($mq-not-x-small) {
      min-width: calc(650px - var(--box-padding) * 2);
    }
  }
}

/* requires each td to have a data-label attribute */
.slist.slist-resp {
  @include breakpoint($mq-not-x-small) {
    border-collapse: collapse;
    table-layout: fixed;
    thead {
      border: none;
      clip: rect(0 0 0 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }

    tr {
      display: block;
      border-top: $border;
    }

    td {
      display: flex;
      flex-flow: row wrap;
      align-items: center;
      justify-content: space-between;
      padding: 0.5rem var(--box-padding);
      border-top: $border;
    }

    td::before {
      /* aria-label has no advantage, it won't be read inside a table
         content: attr(aria-label); */
      content: attr(data-label);
    }
  }
}
