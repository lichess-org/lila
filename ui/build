#!/bin/bash -ea
target=${1-dev}

mkdir -p public/compiled

ts_apps1="common chess"
ts_apps2="ceval game tree"
apps="site chat2 challenge2 notify2 learn insight editor puzzle round2 analyse lobby tournament tournamentSchedule simul perfStat dasher"

build_ts() {
  echo "build_ts" "$@"
  set -ex
  cd ui/$1
  rm -rf node_modules/types
  rm -rf node_modules/common
  rm -rf node_modules/chess
  sudo chown -R $USER:$(id -gn $USER) /home/vagrant/.config
  npm install --no-optional
  npm run compile
  cd -
}

build() {
  echo "build" "$@"
  set -ex
  app=$1
  cd ui/$app
  rm -rf node_modules/types
  rm -rf node_modules/common
  rm -rf node_modules/chess
  rm -rf node_modules/game
  rm -rf node_modules/tree
  rm -rf node_modules/ceval
  sudo chown -R $USER:$(id -gn $USER) /home/vagrant/.config
  npm install --no-optional && gulp $target
  cd -
}

if command -v parallel >/dev/null; then # parallel execution!
  if [ -z "$P_OPTS" -a ! -e ~/.parallel/config ]; then
      P_OPTS="-j+4"
      [ "$TRAVIS" = "true" ] || P_OPTS+=" --bar"
  fi
  parallel --gnu $P_OPTS build_ts ::: $ts_apps1
  parallel --gnu $P_OPTS build_ts ::: $ts_apps2
  parallel --gnu $P_OPTS build ::: $apps
else # sequential execution
  for app in $ts_apps1 $ts_apps2; do build_ts $app; done
  for app in $apps; do build $app; done
fi
