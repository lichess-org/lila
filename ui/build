#!/bin/bash -ea

target=${1-dev}
mode=${2-build} # build | upgrade | css | js
echo "building ui modules with target=$target and mode=$mode"

echo "node: $(node --version)"
echo "yarn: $(yarn --version)"

cd "$(git rev-parse --show-toplevel)"

ls -l node_modules node_modules/@* ui/node_modules ui/*/node_modules | grep /yarn/link/ || true

mkdir -p public/compiled

apps1="common"
apps2="chess ceval game tree chat nvui"
apps3="site swiss msg chat cli challenge notify learn insight editor puzzle round analyse lobby tournament tournamentSchedule tournamentCalendar simul dasher speech palantir serviceWorker"

if [ $mode == "upgrade" ]; then
  yarn upgrade --non-interactive
else
  yarn install --non-interactive
fi

build() {
  echo
  echo "### ui/$@ ###"
  set -ev
  if [[ $1 == "css" ]]; then
    cd ui
    gulp "css-$target"
  else
    cd ui/$1
    yarn run $target
  fi
}


if [ $mode != "upgrade" ] && [ $mode != "js" ]; then
  apps3="css $apps3"
fi

if [ $mode == "css" ]; then
  (build css)
else
  if type -p parallel; then # parallel execution!
    if [ -z "$P_OPTS" -a ! -e ~/.parallel/config ]; then
      P_OPTS="-j+4 --halt 2"
      [ -n "$GITHUB_WORKFLOW" ] || P_OPTS+=" --bar"
    fi
    set -x
    parallel --gnu $P_OPTS build ::: $apps1
    parallel --gnu $P_OPTS build ::: $apps2
    parallel --gnu $P_OPTS build ::: $apps3
  else # sequential execution
    echo "For faster builds, install GNU parallel."
    for app in $apps1 $apps2 $apps3; do (build $app); done
  fi
fi
